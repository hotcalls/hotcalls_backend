# Dynamic Redis Deployment Template
# Usage: envsubst < redis-deployment.yaml | kubectl apply -f -

apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: hotcalls-${ENVIRONMENT}
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache
    environment: ${ENVIRONMENT}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
      app.kubernetes.io/component: cache
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis
        app.kubernetes.io/component: cache
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
          name: redis
        command:
        - redis-server
        - --requirepass
        - "${REDIS_PASSWORD}"
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: hotcalls-secrets
              key: REDIS_PASSWORD
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: hotcalls-${ENVIRONMENT}
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache
    environment: ${ENVIRONMENT}
spec:
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache
  ports:
  - port: 6379
    targetPort: 6379
    name: redis
  type: ClusterIP 