# Dynamic RBAC Template
# Usage: envsubst < rbac.yaml | kubectl apply -f -
# Set variables: PROJECT_PREFIX, ENVIRONMENT

# Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ${PROJECT_PREFIX}-sa
  namespace: ${PROJECT_PREFIX}-${ENVIRONMENT}
  labels:
    app.kubernetes.io/name: ${PROJECT_PREFIX}
    app.kubernetes.io/component: rbac
    environment: ${ENVIRONMENT}
automountServiceAccountToken: true

---
# Role for the service account
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: ${PROJECT_PREFIX}-${ENVIRONMENT}
  name: ${PROJECT_PREFIX}-role
  labels:
    app.kubernetes.io/name: ${PROJECT_PREFIX}
    app.kubernetes.io/component: rbac
    environment: ${ENVIRONMENT}
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch", "delete", "deletecollection"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]

---
# Role binding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ${PROJECT_PREFIX}-rolebinding
  namespace: ${PROJECT_PREFIX}-${ENVIRONMENT}
  labels:
    app.kubernetes.io/name: ${PROJECT_PREFIX}
    app.kubernetes.io/component: rbac
    environment: ${ENVIRONMENT}
subjects:
- kind: ServiceAccount
  name: ${PROJECT_PREFIX}-sa
  namespace: ${PROJECT_PREFIX}-${ENVIRONMENT}
roleRef:
  kind: Role
  name: ${PROJECT_PREFIX}-role
  apiGroup: rbac.authorization.k8s.io 