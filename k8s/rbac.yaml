apiVersion: v1
kind: ServiceAccount
metadata:
  name: hotcalls-sa
  namespace: hotcalls-production
  labels:
    app.kubernetes.io/name: hotcalls
    app.kubernetes.io/component: serviceaccount
  annotations:
    # Azure Workload Identity annotation (if using workload identity)
    azure.workload.identity/client-id: "REPLACE_WITH_MANAGED_IDENTITY_CLIENT_ID"
automountServiceAccountToken: true

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: hotcalls-production
  name: hotcalls-role
  labels:
    app.kubernetes.io/name: hotcalls
    app.kubernetes.io/component: rbac
rules:
# Allow reading ConfigMaps and Secrets
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
# Allow reading pod information for health checks
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: hotcalls-rolebinding
  namespace: hotcalls-production
  labels:
    app.kubernetes.io/name: hotcalls
    app.kubernetes.io/component: rbac
subjects:
- kind: ServiceAccount
  name: hotcalls-sa
  namespace: hotcalls-production
roleRef:
  kind: Role
  name: hotcalls-role
  apiGroup: rbac.authorization.k8s.io

---
# ServiceAccount for staging
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hotcalls-sa
  namespace: hotcalls-staging
  labels:
    app.kubernetes.io/name: hotcalls
    app.kubernetes.io/component: serviceaccount
  annotations:
    azure.workload.identity/client-id: "REPLACE_WITH_STAGING_MANAGED_IDENTITY_CLIENT_ID"
automountServiceAccountToken: true

---
# ServiceAccount for development
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hotcalls-sa
  namespace: hotcalls-development
  labels:
    app.kubernetes.io/name: hotcalls
    app.kubernetes.io/component: serviceaccount
  annotations:
    azure.workload.identity/client-id: "REPLACE_WITH_DEV_MANAGED_IDENTITY_CLIENT_ID"
automountServiceAccountToken: true 