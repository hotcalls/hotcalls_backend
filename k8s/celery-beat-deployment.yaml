# Celery Beat Deployment  
# Usage: envsubst < celery-beat-deployment.yaml | kubectl apply -f -

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${PROJECT_PREFIX}-celery-beat
  namespace: ${PROJECT_PREFIX}-${ENVIRONMENT}
  labels:
    app.kubernetes.io/name: ${PROJECT_PREFIX}
    app.kubernetes.io/component: celery-beat
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 1  # Always 1 for celery-beat (scheduler)
  strategy:
    type: Recreate  # Only one beat instance should run
  selector:
    matchLabels:
      app.kubernetes.io/name: ${PROJECT_PREFIX}
      app.kubernetes.io/component: celery-beat
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ${PROJECT_PREFIX}
        app.kubernetes.io/component: celery-beat
        app.kubernetes.io/version: "1.0.0"
    spec:
      serviceAccountName: ${PROJECT_PREFIX}-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: celery-beat
        image: ${ACR_LOGIN_SERVER}/${PROJECT_PREFIX}-backend:${IMAGE_TAG}
        imagePullPolicy: Always
        command: ["sh", "-c", "celery -A hotcalls beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler"]
        
        # Environment variables from ConfigMap
        envFrom:
        - configMapRef:
            name: ${PROJECT_PREFIX}-config
        - secretRef:
            name: ${PROJECT_PREFIX}-secrets
        
        # Resource requests and limits
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        
        # Security context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        
        # Volume mounts
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: app-tmp
          mountPath: /app/tmp
        - name: celery-beat-schedule
          mountPath: /app/celerybeat-schedule
      
      # Volumes
      volumes:
      - name: tmp
        emptyDir: {}
      - name: app-tmp
        emptyDir: {}
      - name: celery-beat-schedule
        emptyDir: {}