.venv/
.env
# Don't ignore migration files! Only ignore __pycache__
**/migrations/__pycache__/

# Terraform
*.tfstate
*.tfstate.*
*.tfvars.backup
*.tfplan
.terraform/
.terraform.lock.hcl
terraform.tfvars.json
crash.log
crash.*.log

# Kubernetes secrets and sensitive configs
k8s/.env.*
k8s/generated/

# Docker
.dockerignore.backup
docker-compose.override.yml
docker-compose.local.yml

# Azure CLI
.azure/

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Logs and temporary files
*.log
logs/
tmp/
temp/

# Build artifacts
dist/
build/
staticfiles/
mediafiles/

# Security and credentials
credentials.json
service-account.json
*.pem
*.key
*.crt
*.p12
*.pfx

# Backup files
*.bak
*.backup
*.old
git.bak/

# Application specific
import/
export/
*.csv
*.zip
db/*
yeet_database.ps1
maildata/
call_export.csv

# Byte-compiled / optimized / DLL files
__pycache__/
**/__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat-schedule.*
celerybeat.pid
.celery
celery-*.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyderworkspace

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/
hotcalls/__pycache__/__init__.cpython-312.pyc

pyrightconfig.json
# Secret files
create-staging-secrets.sh
secrets.yaml
cookies.txt
# Media and binary files
*.jpg
*.jpeg
*.png
*.gif
*.bmp
*.tiff
*.ico
*.svg
*.webp
*.raw
*.heic

# Audio files
*.mp3
*.wav
*.ogg
*.m4a
*.flac
*.aac
*.wma
*.aiff

# Media directories
media/
uploads/
assets/media/
static/media/
