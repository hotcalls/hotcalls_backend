version: '3.8'

services:
  db:
    image: postgres:15-alpine
    env_file: .env
    environment:
      # Map our .env variables to what PostgreSQL expects
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    env_file: .env
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      target: development
    env_file: .env
    environment:
      # Django settings configuration
      - DJANGO_SETTINGS_MODULE=hotcalls.settings.development
      - ENVIRONMENT=development
      # Override for Docker networking
      - DB_HOST=db
      - REDIS_HOST=redis
      # Stripe webhook signing secret (local development)
      - STRIPE_WEBHOOK_SECRET=whsec_3bd921fa722e74a1c71e01390b170a6ad5cd83c9b6521505ac6bb77f79465f9b
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"

  celery:
    build:
      context: .
      target: development
    env_file: .env
    environment:
      # Django settings configuration
      - DJANGO_SETTINGS_MODULE=hotcalls.settings.development
      - ENVIRONMENT=development
      # Override for Docker networking
      - DB_HOST=db
      - REDIS_HOST=redis
      - STRIPE_WEBHOOK_SECRET=whsec_3bd921fa722e74a1c71e01390b170a6ad5cd83c9b6521505ac6bb77f79465f9b
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A hotcalls worker -l info

  celery-beat:
    build:
      context: .
      target: development
    env_file: .env
    environment:
      # Django settings configuration
      - DJANGO_SETTINGS_MODULE=hotcalls.settings.development
      - ENVIRONMENT=development
      # Override for Docker networking
      - DB_HOST=db
      - REDIS_HOST=redis
      - STRIPE_WEBHOOK_SECRET=whsec_3bd921fa722e74a1c71e01390b170a6ad5cd83c9b6521505ac6bb77f79465f9b
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A hotcalls beat -l info

volumes:
  postgres_data:
  redis_data:
  static_volume: 