openapi: 3.0.3
info:
  title: HotCalls API
  version: 2.0.0
  description: "\n# \U0001F510 HotCalls API - Email-Based Authentication System\n\n\
    ## \U0001F3AD Authentication & Email Verification\n\n### \U0001F680 New Features\n\
    - **\U0001F4E7 Email-based login**: Use email instead of username to login\n-\
    \ **‚úÖ Mandatory email verification**: Users MUST verify email before accessing\
    \ system\n- **\U0001F512 Enhanced security**: Email verification enforced at login\n\
    - **\U0001F4F1 Responsive emails**: Beautiful HTML verification emails\n\n###\
    \ \U0001F511 Authentication Flow\n1. **Registration**: POST to `/api/auth/register/`\
    \ with email, password, name, phone\n2. **Email Verification**: User receives\
    \ email with verification link\n3. **Verify Email**: Click link or use `/api/auth/verify-email/{token}/`\n\
    4. **Login**: POST to `/api/auth/login/` with email and password\n5. **Access\
    \ APIs**: Use token authentication for protected endpoints\n\n### \U0001F4E7 Email\
    \ Verification Requirements\n- **\U0001F6AB No login without verification**: Cannot\
    \ access protected APIs\n- **\U0001F4E8 Auto-send verification**: Sent automatically\
    \ on registration\n- **\U0001F504 Resend option**: Use `/api/auth/resend-verification/`\
    \ if needed\n- **‚è∞ Token expiration**: Verification tokens have security expiration\n\
    \n---\n\n## \U0001F3AD User Roles & Permissions\n\n### User Role Hierarchy\n|\
    \ Role | Level | Description | Email Required |\n|------|--------|-------------|----------------|\n\
    | **\U0001F464 Regular User** | `is_authenticated=True` | Standard user - must\
    \ verify email | ‚úÖ Required |\n| **\U0001F454 Staff Member** | `is_staff=True`\
    \ | System staff - must verify email | ‚úÖ Required |\n| **\U0001F527 Superuser**\
    \ | `is_superuser=True` | Admin - auto-verified | ‚úÖ Auto-verified |\n\n### \U0001F511\
    \ Authentication Methods\n- **Token Authentication**: Login via `/api/auth/login/`\
    \ then use `Authorization: Token <token>`\n- **No CSRF Required**: Token authentication\
    \ doesn't need CSRF tokens\n- **‚ö†Ô∏è Email Verification Required**: Must verify\
    \ email before login\n\n---\n\n## \U0001F4CA Complete Permission Matrix\n\n###\
    \ \U0001F510 Authentication API (`/api/auth/`)\n| Operation | Permission | Email\
    \ Verification | Description |\n|-----------|------------|-------------------|-------------|\n\
    | **Register** | Public | Not required | Create account, sends verification email\
    \ |\n| **Verify Email** | Public | Completes verification | Verify email with\
    \ token from email |\n| **Login** | Public | ‚úÖ Required | Login with email/password\
    \ (verified only) |\n| **Logout** | Authenticated | ‚úÖ Required | Clear user session\
    \ |\n| **Profile** | Authenticated | ‚úÖ Required | Get current user profile |\n\
    | **Resend Verification** | Public | For unverified emails | Resend verification\
    \ email |\n\n### \U0001F464 User Management API (`/api/users/`)\n| Operation |\
    \ Regular User | Staff | Superuser | Email Verification |\n|-----------|--------------|-------|-----------|-------------------|\n\
    | **View Users** | ‚úÖ Own profile | ‚úÖ All users | ‚úÖ All users | ‚úÖ Required |\n\
    | **Create User** | ‚ùå Use auth/register | ‚úÖ Any user | ‚úÖ Any user | ‚úÖ Required\
    \ |\n| **Edit User** | ‚úÖ Own profile | ‚úÖ Any user | ‚úÖ Any user | ‚úÖ Required |\n\
    | **Delete User** | ‚ùå No access | ‚ùå No access | ‚úÖ Any user | ‚úÖ Required |\n\n\
    ### \U0001F4CB Other APIs (`/api/workspaces/`, `/api/agents/`, etc.)\n- **\U0001F512\
    \ All protected APIs require**: Authentication + Email Verification\n- **\U0001F4E7\
    \ No verification = No access**: Unverified users cannot use any protected endpoints\n\
    - **\U0001F3AF Same permissions as before**: Role-based access unchanged, just\
    \ add email verification\n\n---\n\n## \U0001F6A8 Authentication Error Responses\n\
    \n### 401 Unauthorized\n```json\n{\n  \"detail\": \"Authentication credentials\
    \ were not provided.\"\n}\n```\n\n### 403 Forbidden - Email Not Verified\n```json\n\
    {\n  \"email\": [\"Please verify your email address before logging in. Check your\
    \ inbox for the verification email.\"]\n}\n```\n\n### 400 Bad Request - Invalid\
    \ Credentials  \n```json\n{\n  \"non_field_errors\": [\"Unable to log in with\
    \ provided credentials.\"]\n}\n```\n\n### 400 Bad Request - Account Issues\n```json\n\
    {\n  \"non_field_errors\": [\"Your account has been suspended. Please contact\
    \ support.\"]\n}\n```\n\n---\n\n## \U0001F4DA Getting Started with Token Authentication\n\
    \n### 1. Register New Account\n```bash\nPOST /api/auth/register/\n{\n  \"email\"\
    : \"user@example.com\",\n  \"password\": \"securepassword123\",\n  \"password_confirm\"\
    : \"securepassword123\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\"\
    ,\n  \"phone\": \"+1234567890\"\n}\n```\n\n### 2. Check Email & Verify\n- Check\
    \ inbox for verification email\n- Click verification link or use token\n\n###\
    \ 3. Login After Verification\n```bash\nPOST /api/auth/login/\n{\n  \"email\"\
    : \"user@example.com\",\n  \"password\": \"securepassword123\"\n}\n```\nResponse\
    \ includes auth token:\n```json\n{\n  \"token\": \"your-auth-token-here\",\n \
    \ \"user\": {...}\n}\n```\n\n### 4. Access Protected APIs\n```bash\nAuthorization:\
    \ Token your-auth-token-here\n```\n\n**\U0001F4E7 Remember**: Email verification\
    \ is mandatory for all users!\n    "
paths:
  /api/auth/register/:
    post:
      operationId: auth_register_create
      description: "\n    Register a new user account with mandatory email verification.\n\
        \    \n    **\U0001F4E7 Email Verification Required**: \n    - Users MUST\
        \ verify their email before they can login\n    - Verification email is sent\
        \ automatically upon registration\n    - Account remains unusable until email\
        \ is verified\n    \n    **\U0001F4DD Required Fields**:\n    - `email`: Valid\
        \ email address (will be username)\n    - `first_name`: User's first name\n\
        \    - `last_name`: User's last name  \n    - `phone`: Contact phone number\n\
        \    - `password`: Secure password (min 8 characters)\n    - `password_confirm`:\
        \ Password confirmation\n    \n    **\U0001F512 Security Features**:\n   \
        \ - Password validation enforced\n    - Email uniqueness checked\n    - Verification\
        \ token generated\n    - HTML email sent with verification link\n    \n  \
        \  **\U0001F4CB Next Steps After Registration**:\n    1. Check email inbox\
        \ for verification message\n    2. Click verification link or use `/verify-email/`\
        \ endpoint\n    3. Login with email and password after verification\n    "
      summary: üîê User Registration
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      - {}
      responses:
        '201':
          description: ‚úÖ User registered successfully - Verification email sent
        '400':
          description: ‚ùå Registration failed - Validation errors
  /api/auth/login/:
    post:
      operationId: auth_login_create
      description: "\n    Login with email and password. **Email verification is mandatory**.\n\
        \    \n    **\U0001F510 Requirements**:\n    - Valid email and password\n\
        \    - Email MUST be verified (click link from registration email)\n    -\
        \ Account must be active and not suspended\n    \n    **‚ùå Login Blocked If**:\n\
        \    - Email is not verified\n    - Account is suspended or disabled\n   \
        \ - Invalid credentials provided\n    \n    **‚úÖ Success Response**:\n    -\
        \ Auth token returned for API access\n    - User profile data returned\n \
        \   - Use token in Authorization header for all API calls\n    \n    **\U0001F511\
        \ Using the Token**:\n    ```\n    Authorization: Token <your-token-here>\n\
        \    ```\n    \n    **\U0001F4E7 If Email Not Verified**:\n    - Use `/resend-verification/`\
        \ to get new verification email\n    - Check spam/junk folders\n    - Verify\
        \ email address is correct\n    "
      summary: üîë Email-Based Login with Token Authentication
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailLoginRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      - {}
      responses:
        '200':
          description: ‚úÖ Login successful - Token and user data returned
        '400':
          description: ‚ùå Login failed - Validation or verification errors
    get:
      operationId: auth_login_retrieve
      description: "\n    Login with email and password. **Email verification is mandatory**.\n\
        \    \n    **\U0001F510 Requirements**:\n    - Valid email and password\n\
        \    - Email MUST be verified (click link from registration email)\n    -\
        \ Account must be active and not suspended\n    \n    **‚ùå Login Blocked If**:\n\
        \    - Email is not verified\n    - Account is suspended or disabled\n   \
        \ - Invalid credentials provided\n    \n    **‚úÖ Success Response**:\n    -\
        \ Auth token returned for API access\n    - User profile data returned\n \
        \   - Use token in Authorization header for all API calls\n    \n    **\U0001F511\
        \ Using the Token**:\n    ```\n    Authorization: Token <your-token-here>\n\
        \    ```\n    \n    **\U0001F4E7 If Email Not Verified**:\n    - Use `/resend-verification/`\
        \ to get new verification email\n    - Check spam/junk folders\n    - Verify\
        \ email address is correct\n    "
      summary: üîë Email-Based Login with Token Authentication
      tags:
      - Authentication
      security:
      - tokenAuth: []
      - TokenAuth: []
      - {}
      responses:
        '200':
          description: ‚úÖ Login successful - Token and user data returned
        '400':
          description: ‚ùå Login failed - Validation or verification errors
  /api/auth/logout/:
    post:
      operationId: auth_logout_create
      description: "\n    Logout the current user and delete their auth token.\n \
        \   \n    **\U0001F510 Requirements**: Must be authenticated with token\n\
        \    \n    **‚úÖ Effect**: \n    - User session cleared\n    - Auth token deleted\n\
        \    - Must login again to get new token\n    \n    **\U0001F511 Request Header**:\n\
        \    ```\n    Authorization: Token <your-token-here>\n    ```\n    "
      summary: üö™ Logout
      tags:
      - Authentication
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: ‚úÖ Logout successful
        '401':
          description: üö´ Authentication required - Invalid or missing token
  /api/auth/verify-email/{token}/:
    post:
      operationId: auth_verify_email_create
      description: "\n    Verify user's email address using verification token.\n\
        \    \n    **\U0001F4E7 How to Get Token**:\n    - Token is sent in registration\
        \ email\n    - Also available via `/resend-verification/` endpoint\n    -\
        \ Token is in the verification URL\n    \n    **‚úÖ After Verification**:\n\
        \    - User can login with email/password\n    - Account becomes fully functional\n\
        \    - No need to verify again\n    \n    **\U0001F512 Security**:\n    -\
        \ Token is single-use\n    - Token expires (recommended: 24 hours)\n    -\
        \ Invalid tokens are rejected\n    "
      summary: ‚úÖ Verify Email Address
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      tags:
      - Authentication
      security:
      - tokenAuth: []
      - TokenAuth: []
      - {}
      responses:
        '200':
          description: ‚úÖ Email verified successfully
        '400':
          description: ‚ùå Verification failed
    get:
      operationId: auth_verify_email_retrieve
      description: "\n    Verify user's email address using verification token.\n\
        \    \n    **\U0001F4E7 How to Get Token**:\n    - Token is sent in registration\
        \ email\n    - Also available via `/resend-verification/` endpoint\n    -\
        \ Token is in the verification URL\n    \n    **‚úÖ After Verification**:\n\
        \    - User can login with email/password\n    - Account becomes fully functional\n\
        \    - No need to verify again\n    \n    **\U0001F512 Security**:\n    -\
        \ Token is single-use\n    - Token expires (recommended: 24 hours)\n    -\
        \ Invalid tokens are rejected\n    "
      summary: ‚úÖ Verify Email Address
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      tags:
      - Authentication
      security:
      - tokenAuth: []
      - TokenAuth: []
      - {}
      responses:
        '200':
          description: ‚úÖ Email verified successfully
        '400':
          description: ‚ùå Verification failed
  /api/auth/resend-verification/:
    post:
      operationId: auth_resend_verification_create
      description: "\n    Resend email verification to user's email address.\n   \
        \ \n    **\U0001F4DD Use Cases**:\n    - Original email was not received\n\
        \    - Verification link expired\n    - Email went to spam/junk folder\n \
        \   \n    **\U0001F510 Requirements**:\n    - Email must exist in system\n\
        \    - Email must not already be verified\n    \n    **‚è∞ Rate Limiting**:\n\
        \    - Consider implementing rate limiting\n    - Don't allow spam requests\n\
        \    "
      summary: üìß Resend Verification Email
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendVerificationRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      - {}
      responses:
        '200':
          description: ‚úÖ Verification email sent
        '400':
          description: ‚ùå Cannot send verification email
  /api/auth/profile/:
    get:
      operationId: auth_profile_retrieve
      description: "\n    Get the profile of the currently authenticated user.\n \
        \   \n    **\U0001F510 Requirements**: Must be authenticated with token\n\
        \    \n    **\U0001F511 Request Header**:\n    ```\n    Authorization: Token\
        \ <your-token-here>\n    ```\n    \n    **\U0001F4CB Response Data**:\n  \
        \  - User identification and contact info\n    - Email verification status\n\
        \    - Account status and timestamps\n    "
      summary: üë§ Get Current User Profile
      tags:
      - Authentication
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ‚úÖ User profile retrieved
        '401':
          description: üö´ Authentication required
  /api/auth/password-reset/:
    get:
      operationId: auth_password_reset_retrieve
      description: "\n        Show password reset request form (HTML) or return instructions\
        \ (API).\n        \n        **\U0001F4DD GET Request**: Display password reset\
        \ form for browsers\n        **\U0001F4E8 Use Case**: User visits link to\
        \ request password reset\n        "
      summary: üìù Password Reset Form
      tags:
      - Authentication
      security:
      - tokenAuth: []
      - TokenAuth: []
      - {}
      responses:
        '200':
          description: ‚úÖ Password reset form displayed or instructions provided
    post:
      operationId: auth_password_reset_create
      description: "\n        Request a password reset email for the given email address.\n\
        \        \n        **\U0001F512 Security Note**: \n        - Does not reveal\
        \ if email exists or not\n        - Always returns success message\n     \
        \   - Only sends email if user actually exists\n        "
      summary: üîÑ Request Password Reset
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetRequestRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      - {}
      responses:
        '200':
          description: ‚úÖ Reset email sent (if email exists)
  /api/auth/reset-password/{token}/:
    get:
      operationId: auth_reset_password_retrieve
      description: "\n        Validate password reset token and show form (HTML) or\
        \ return validation (API).\n        \n        **\U0001F4DD GET Request**:\
        \ Validate token and show password reset form for browsers\n        **\U0001F511\
        \ Token Validation**: Checks if token is valid and not expired (24 hours)\n\
        \        "
      summary: üîç Validate Reset Token
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      tags:
      - Authentication
      security:
      - tokenAuth: []
      - TokenAuth: []
      - {}
      responses:
        '200':
          description: ‚úÖ Token valid - form displayed or validation confirmed
        '400':
          description: ‚ùå Invalid or expired token
    post:
      operationId: auth_reset_password_create
      description: "\n        Reset password using validated token.\n        \n  \
        \      **\U0001F4DD Requirements**:\n        - Valid reset token from email\n\
        \        - New password meeting requirements\n        - Password confirmation\n\
        \        "
      summary: üîê Reset Password
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      - {}
      responses:
        '200':
          description: ‚úÖ Password reset successful
        '400':
          description: ‚ùå Invalid token or validation errors
  /api/users/users/:
    get:
      operationId: users_users_list
      description: "\n        Retrieve users based on your permission level and role.\n\
        \        \n        **\U0001F510 Permission Requirements**:\n        - **Regular\
        \ Users**: Can only see their own profile (filtered response)\n        - **Staff\
        \ Members**: Can view all users in the system\n        - **Superusers**: Full\
        \ access to all user data\n        - **‚ö†Ô∏è Email Verification Required**: Must\
        \ have verified email to access\n        \n        **\U0001F4CA Response Filtering**:\n\
        \        - Regular users receive only 1 result (themselves)\n        - Staff/Superusers\
        \ receive all users with pagination\n        \n        **\U0001F3AF Use Cases**:\n\
        \        - User profile management\n        - Staff user administration\n\
        \        - System user overview\n        \n        **\U0001F4E7 Note**: This\
        \ API now works with email-based authentication instead of username\n    \
        \    "
      summary: üë§ List users
      parameters:
      - in: query
        name: date_joined
        schema:
          type: string
          format: date-time
      - in: query
        name: date_joined__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: date_joined__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: date_joined_after
        schema:
          type: string
          format: date-time
        description: Filter users joined after this date
      - in: query
        name: date_joined_before
        schema:
          type: string
          format: date-time
        description: Filter users joined before this date
      - in: query
        name: email
        schema:
          type: string
        description: Filter by email address
      - in: query
        name: email__icontains
        schema:
          type: string
      - in: query
        name: email_verified
        schema:
          type: boolean
        description: Filter by email verification status
      - in: query
        name: first_name
        schema:
          type: string
        description: Filter by first name
      - in: query
        name: first_name__icontains
        schema:
          type: string
      - in: query
        name: full_name
        schema:
          type: string
        description: Filter by full name (first + last)
      - in: query
        name: has_social_login
        schema:
          type: boolean
        description: Filter users with social login
      - in: query
        name: is_active
        schema:
          type: boolean
        description: Filter by active status
      - in: query
        name: is_email_verified
        schema:
          type: boolean
      - in: query
        name: is_staff
        schema:
          type: boolean
        description: Filter by staff status
      - in: query
        name: last_login
        schema:
          type: string
          format: date-time
      - in: query
        name: last_login__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: last_login__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: last_login_after
        schema:
          type: string
          format: date-time
        description: Filter users who logged in after this date
      - in: query
        name: last_login_before
        schema:
          type: string
          format: date-time
        description: Filter users who logged in before this date
      - in: query
        name: last_name
        schema:
          type: string
        description: Filter by last name
      - in: query
        name: last_name__icontains
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: phone
        schema:
          type: string
        description: Filter by phone number
      - in: query
        name: phone__icontains
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: social_provider
        schema:
          type: string
          nullable: true
          enum:
          - apple
          - facebook
          - google
        description: |-
          Filter by social login provider

          * `google` - Google
          * `apple` - Apple
          * `facebook` - Facebook
      - in: query
        name: status
        schema:
          type: string
          enum:
          - active
          - forever_disabled
          - suspended
        description: |-
          Filter by account status

          * `active` - Active
          * `suspended` - Suspended
          * `forever_disabled` - Forever Disabled
      tags:
      - User Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
              examples:
                RegularUserResponse:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - count: 1
                      next: null
                      previous: null
                      results:
                      - id: user-uuid-here
                        email: current_user@example.com
                        first_name: John
                        last_name: Doe
                        phone: '+1234567890'
                        status: active
                        is_email_verified: true
                  summary: Regular user sees only own profile
                  description: Regular users are filtered to see only their own user
                    data
                StaffUserResponse:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - count: 150
                      next: http://localhost:8001/api/users/users/?page=2
                      previous: null
                      results:
                      - id: uuid1
                        email: user1@example.com
                        status: active
                        is_email_verified: true
                      - id: uuid2
                        email: user2@example.com
                        status: suspended
                        is_email_verified: false
                  summary: Staff sees all users
                  description: Staff members can view all user profiles in the system
          description: Successfully retrieved users based on permission level
        '401':
          description: üö´ Authentication required - Please login to access user data
        '403':
          description: üö´ Permission denied or email not verified
    post:
      operationId: users_users_create
      description: "\n        Create a new user account via admin interface. \n  \
        \      \n        **‚ö†Ô∏è Note**: Regular users should use `/api/auth/register/`\
        \ instead for proper email verification flow.\n        \n        **\U0001F510\
        \ Permission Requirements**: \n        - **Staff/Admin Access**: Only staff\
        \ and admin can create users via this endpoint\n        - **Email Verification\
        \ Required**: Creator must have verified email\n        \n        **\U0001F4DD\
        \ Required Fields**:\n        - `email`: Valid email address (will be username)\n\
        \        - `password`: Secure password min 8 characters\n        - `first_name`,\
        \ `last_name`: User's name\n        - `phone`: Contact phone number\n    \
        \    \n        **‚öôÔ∏è Optional Fields**:\n        - `social_id`, `social_provider`:\
        \ For social media login integration\n        \n        **\U0001F512 Security\
        \ Notes**:\n        - Password is automatically hashed\n        - New users\
        \ created with `is_email_verified=False` by default\n        - Created users\
        \ must still verify their email to login\n        "
      summary: ‚ûï Create new user (Admin)
      tags:
      - User Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                SuccessfulCreation:
                  value:
                    id: new-user-uuid
                    email: newuser@example.com
                    first_name: Jane
                    last_name: Smith
                    phone: '+1234567890'
                    status: active
                    is_active: true
                    is_email_verified: false
                    date_joined: '2024-01-15T10:30:00Z'
                  summary: New user account created by admin
                  description: User successfully created but must still verify email
          description: ‚úÖ User account created successfully
        '400':
          description: ‚ùå Validation error - Check required fields and format
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Staff access required or email not verified
  /api/users/users/create_privileged/:
    post:
      operationId: users_users_create_privileged_create
      description: "\n        Create a user with elevated privileges (Staff/Superuser\
        \ only).\n        \n        **\U0001F510 Permission Requirements**: \n   \
        \     - **‚ùå Regular Users**: No access\n        - **‚ùå Staff Members**: No\
        \ access  \n        - **‚úÖ Superuser ONLY**: Can create staff/superuser accounts\n\
        \        - **‚ö†Ô∏è Email Verification Required**: Superuser must have verified\
        \ email\n        \n        **‚ö†Ô∏è SECURITY WARNING**:\n        - This endpoint\
        \ allows creating staff and superuser accounts\n        - Use with extreme\
        \ caution\n        - Consider using Django Admin instead\n        - Created\
        \ users still need to verify their email unless explicitly set\n        "
      summary: ‚ûï Create privileged user (Admin only)
      tags:
      - User Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUserCreateRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ‚úÖ Privileged user created
        '401':
          description: üö´ Authentication required or email not verified
        '403':
          description: üö´ Permission denied - Superuser access required
  /api/users/users/delete_me/:
    delete:
      operationId: users_users_delete_me_destroy
      description: 'Self-service deletion: removes the user from all workspaces and
        deactivates the account. Blocks if the user is admin of any workspace or the
        last remaining member, or if there is an active/auslaufendes subscription
        in an admin workspace.'
      summary: üóëÔ∏è Delete my account
      tags:
      - User Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: ‚úÖ Account deleted (deactivated) and sessions invalidated
        '400':
          description: ‚ùå Cannot delete due to blockers
        '401':
          description: üö´ Authentication required
  /api/users/users/me/:
    get:
      operationId: users_users_me_retrieve
      description: "\n        Get the profile of the currently authenticated user.\n\
        \        \n        **\U0001F510 Permission Requirements**: \n        - **Authenticated\
        \ User**: Any logged-in user with verified email can access their own profile\n\
        \        \n        **\U0001F4CB Use Cases**:\n        - Profile page display\n\
        \        - User settings retrieval\n        - Current user context\n     \
        \   - Check email verification status\n        \n        **‚ú® Benefits**:\n\
        \        - No need to know your own user ID\n        - Always returns current\
        \ user's data\n        - Safe endpoint for user self-service\n        - Shows\
        \ email verification status\n        "
      summary: üë§ Get current user profile
      tags:
      - User Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                CurrentUserProfile:
                  value:
                    id: current-user-uuid
                    email: your@email.com
                    first_name: Your
                    last_name: Name
                    phone: '+1234567890'
                    status: active
                    is_email_verified: true
                  summary: Your profile information
          description: ‚úÖ Current user profile retrieved
        '401':
          description: üö´ Authentication required or email not verified
  /api/users/users/update_me/:
    patch:
      operationId: users_users_update_me_partial_update
      description: "\n        Update the profile of the currently authenticated user.\n\
        \        \n        **\U0001F510 Permission Requirements**: \n        - **Authenticated\
        \ User**: Any logged-in user with verified email can update their own profile\n\
        \        \n        **\U0001F4DD Updatable Fields**:\n        - Personal information\
        \ (name, phone)\n        - Contact details\n        - Account preferences\n\
        \        \n        **\U0001F6AB Restricted Fields**:\n        - Cannot change:\
        \ `email`, `status`, admin flags, `is_email_verified`\n        - Staff-only\
        \ fields require staff permissions\n        - Email changes not allowed for\
        \ security\n        "
      summary: ‚úèÔ∏è Update current user profile
      tags:
      - User Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserUpdateRequest'
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ‚úÖ Profile updated successfully
        '400':
          description: ‚ùå Validation error
        '401':
          description: üö´ Authentication required or email not verified
  /api/users/users/{id}/:
    get:
      operationId: users_users_retrieve
      description: "\n        Retrieve detailed information about a specific user.\n\
        \        \n        **\U0001F510 Permission Requirements**:\n        - **Regular\
        \ Users**: Can only access their own profile\n        - **Staff Members**:\
        \ Can access any user's profile  \n        - **Superusers**: Full access to\
        \ any user's profile\n        - **‚ö†Ô∏è Email Verification Required**: Must have\
        \ verified email\n        \n        **\U0001F6E1Ô∏è Access Control**:\n    \
        \    - Users attempting to access other profiles get 404 (not 403 for security)\n\
        \        - Staff can see all user details including email verification status\n\
        \        - Response includes email-based authentication fields\n        "
      summary: üîç Get user details
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this User.
        required: true
      tags:
      - User Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ‚úÖ User details retrieved successfully
        '401':
          description: üö´ Authentication required or email not verified
        '403':
          description: üö´ Permission denied - Cannot access other user's profile
        '404':
          description: üö´ User not found or access denied
    put:
      operationId: users_users_update
      description: "\n        Update all fields of a user account.\n        \n   \
        \     **\U0001F510 Permission Requirements**:\n        - **Regular Users**:\
        \ Can only update their own profile\n        - **Staff Members**: Can update\
        \ any user's profile\n        - **Superusers**: Can update any user's profile\n\
        \        - **‚ö†Ô∏è Email Verification Required**: Must have verified email\n\
        \        \n        **\U0001F504 Update Scope**:\n        - Replaces all editable\
        \ fields with new values\n        - Cannot modify: `id`, `email`, `date_joined`,\
        \ `last_login`, `is_email_verified`\n        - Staff can modify: `status`,\
        \ admin flags\n        - Users can modify: personal information only\n   \
        \     \n        **\U0001F4E7 Email Changes**: Email addresses cannot be changed\
        \ after registration for security\n        "
      summary: ‚úèÔ∏è Update user (full)
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this User.
        required: true
      tags:
      - User Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ‚úÖ User updated successfully
        '400':
          description: ‚ùå Validation error
        '401':
          description: üö´ Authentication required or email not verified
        '403':
          description: üö´ Permission denied - Cannot edit other user's profile
        '404':
          description: üö´ User not found
    patch:
      operationId: users_users_partial_update
      description: "\n        Update specific fields of a user account.\n        \n\
        \        **\U0001F510 Permission Requirements**: Same as full update\n   \
        \     - **Regular Users**: Own profile only\n        - **Staff/Superuser**:\
        \ Any user profile\n        - **‚ö†Ô∏è Email Verification Required**: Must have\
        \ verified email\n        \n        **\U0001F3AF Partial Update Benefits**:\n\
        \        - Only send fields you want to change\n        - Other fields remain\
        \ unchanged\n        - More efficient for single field updates\n        "
      summary: ‚úèÔ∏è Update user (partial)
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this User.
        required: true
      tags:
      - User Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserUpdateRequest'
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ‚úÖ User updated successfully
        '400':
          description: ‚ùå Validation error
        '401':
          description: üö´ Authentication required or email not verified
        '403':
          description: üö´ Permission denied
        '404':
          description: üö´ User not found
    delete:
      operationId: users_users_destroy
      description: "\n        **‚ö†Ô∏è DESTRUCTIVE OPERATION - Permanently delete a user\
        \ account.**\n        \n        **\U0001F510 Permission Requirements**: \n\
        \        - **‚ùå Regular Users**: No access to delete operations\n        -\
        \ **‚ùå Staff Members**: Cannot delete user accounts\n        - **‚úÖ Superuser\
        \ ONLY**: Can delete any user account\n        - **‚ö†Ô∏è Email Verification Required**:\
        \ Superuser must have verified email\n        \n        **\U0001F4A5 Consequences**:\n\
        \        - User account permanently removed\n        - All associated data\
        \ may be affected\n        - Cannot be undone - consider deactivation instead\n\
        \        \n        **\U0001F6E1Ô∏è Safety Recommendations**:\n        - Use\
        \ status change to 'suspended' instead of deletion\n        - Ensure data\
        \ backup before deletion\n        - Consider impact on related workspace/agent\
        \ data\n        "
      summary: üóëÔ∏è Delete user
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this User.
        required: true
      tags:
      - User Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: ‚úÖ User deleted successfully
        '401':
          description: üö´ Authentication required or email not verified
        '403':
          description: üö´ Permission denied - Only superusers can delete users
        '404':
          description: üö´ User not found
  /api/users/users/{id}/change_status/:
    patch:
      operationId: users_users_change_status_partial_update
      description: "\n        Change the status of a user account (Staff only operation).\n\
        \        \n        **\U0001F510 Permission Requirements**: \n        - **‚ùå\
        \ Regular Users**: No access to status changes\n        - **‚úÖ Staff Members**:\
        \ Can change any user's status\n        - **‚úÖ Superusers**: Can change any\
        \ user's status\n        - **‚ö†Ô∏è Email Verification Required**: Staff must\
        \ have verified email\n        \n        **\U0001F4CA Available Status Values**:\n\
        \        - `active`: Normal active user account\n        - `suspended`: Temporarily\
        \ disabled account  \n        - `forever_disabled`: Permanently disabled account\n\
        \        \n        **‚ö° Use Cases**:\n        - Account suspension for policy\
        \ violations\n        - Account reactivation after review\n        - Bulk\
        \ account management\n        \n        **\U0001F512 Security Notes**:\n \
        \       - Status changes are logged\n        - Affects user's ability to login\n\
        \        - Consider impact on active sessions\n        - Does not affect email\
        \ verification status\n        "
      summary: üîÑ Change user status
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this User.
        required: true
      tags:
      - User Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserStatusChangeRequest'
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                StatusChanged:
                  value:
                    id: user-uuid
                    email: problem_user@example.com
                    status: suspended
                    updated_at: '2024-01-15T11:00:00Z'
                  summary: User account suspended
          description: ‚úÖ User status changed successfully
        '400':
          description: ‚ùå Invalid status value
        '401':
          description: üö´ Authentication required or email not verified
        '403':
          description: üö´ Permission denied - Staff access required
        '404':
          description: üö´ User not found
  /api/users/blacklist/:
    get:
      operationId: users_blacklist_list
      description: "\n        Retrieve all blacklisted users and their restrictions.\n\
        \        \n        **\U0001F510 Permission Requirements**: \n        - **‚ùå\
        \ Regular Users**: No access to blacklist data\n        - **‚úÖ Staff Members**:\
        \ Can view all blacklist entries\n        - **‚úÖ Superusers**: Full access\
        \ to blacklist data\n        - **‚ö†Ô∏è Email Verification Required**: Staff must\
        \ have verified email\n        \n        **\U0001F6E1Ô∏è Security Feature**:\n\
        \        - High-security operation for user safety\n        - Contains sensitive\
        \ restriction information\n        - Used for automated access control\n \
        \       \n        **\U0001F4CA Response Data**:\n        - Blacklisted user\
        \ information (email-based)\n        - Restriction reasons and types\n   \
        \     - Blacklist creation and update dates\n        "
      summary: üö´ List blacklist entries
      parameters:
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
        description: Filter blacklist entries created after this date
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: created_at__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: created_at__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
        description: Filter blacklist entries created before this date
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: reason
        schema:
          type: string
        description: Filter by blacklist reason
      - in: query
        name: reason__icontains
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - forever
          - suspended
          - temporary
        description: |-
          Filter by blacklist status

          * `temporary` - Temporary
          * `forever` - Forever
          * `suspended` - Suspended
      - in: query
        name: updated_after
        schema:
          type: string
          format: date-time
        description: Filter blacklist entries updated after this date
      - in: query
        name: updated_at
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_at__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_at__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_before
        schema:
          type: string
          format: date-time
        description: Filter blacklist entries updated before this date
      - in: query
        name: user__email
        schema:
          type: string
      - in: query
        name: user__email__icontains
        schema:
          type: string
      - in: query
        name: user__first_name
        schema:
          type: string
      - in: query
        name: user__first_name__icontains
        schema:
          type: string
      - in: query
        name: user__last_name
        schema:
          type: string
      - in: query
        name: user__last_name__icontains
        schema:
          type: string
      - in: query
        name: user__phone
        schema:
          type: string
      - in: query
        name: user__phone__icontains
        schema:
          type: string
      - in: query
        name: user_email
        schema:
          type: string
        description: Filter by user's email address
      - in: query
        name: user_name
        schema:
          type: string
        description: Filter by user's full name
      - in: query
        name: user_phone
        schema:
          type: string
        description: Filter by user's phone number
      tags:
      - User Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBlacklistList'
          description: ‚úÖ Blacklist entries retrieved
        '401':
          description: üö´ Authentication required or email not verified
        '403':
          description: üö´ Permission denied - Staff access required for blacklist
    post:
      operationId: users_blacklist_create
      description: "\n        Add a user to the blacklist with specified restrictions.\n\
        \        \n        **\U0001F510 Permission Requirements**: \n        - **‚ùå\
        \ Regular Users**: No access to blacklist operations\n        - **‚úÖ Staff\
        \ Members**: Can create blacklist entries\n        - **‚úÖ Superusers**: Can\
        \ create blacklist entries\n        - **‚ö†Ô∏è Email Verification Required**:\
        \ Staff must have verified email\n        \n        **\U0001F4DD Required\
        \ Information**:\n        - `user`: User ID to blacklist\n        - `reason`:\
        \ Detailed reason for blacklisting\n        - `status`: Type of restriction\
        \ (temporary/forever/suspended)\n        \n        **‚ö†Ô∏è High-Impact Operation**:\n\
        \        - Affects user's system access\n        - Should include detailed\
        \ justification\n        - Consider escalation policies\n        "
      summary: ‚ûï Add user to blacklist
      tags:
      - User Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlacklistCreateRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blacklist'
          description: ‚úÖ User added to blacklist
        '400':
          description: ‚ùå Validation error
        '401':
          description: üö´ Authentication required or email not verified
        '403':
          description: üö´ Permission denied - Staff access required
  /api/users/blacklist/{id}/:
    get:
      operationId: users_blacklist_retrieve
      description: "\n        Retrieve detailed information about a specific blacklist\
        \ entry.\n        \n        **\U0001F510 Permission Requirements**: Staff\
        \ access required with verified email\n        "
      summary: üîç Get blacklist entry details
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this blacklist.
        required: true
      tags:
      - User Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blacklist'
          description: ‚úÖ Blacklist entry details retrieved
        '401':
          description: üö´ Authentication required or email not verified
        '403':
          description: üö´ Permission denied - Staff access required
        '404':
          description: üö´ Blacklist entry not found
    put:
      operationId: users_blacklist_update
      description: "\n        Update blacklist entry details (Staff only).\n     \
        \   \n        **\U0001F510 Permission Requirements**: \n        - **‚ùå Regular\
        \ Users**: No access\n        - **‚úÖ Staff/Superuser**: Can modify blacklist\
        \ entries\n        - **‚ö†Ô∏è Email Verification Required**: Staff must have verified\
        \ email\n        "
      summary: ‚úèÔ∏è Update blacklist entry
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this blacklist.
        required: true
      tags:
      - User Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlacklistRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blacklist'
          description: ‚úÖ Blacklist entry updated
        '400':
          description: ‚ùå Validation error
        '401':
          description: üö´ Authentication required or email not verified
        '403':
          description: üö´ Permission denied - Staff access required
        '404':
          description: üö´ Blacklist entry not found
    patch:
      operationId: users_blacklist_partial_update
      description: "\n        Update specific fields of a blacklist entry (Staff only).\n\
        \        \n        **\U0001F510 Permission Requirements**: Staff access required\
        \ with verified email\n        "
      summary: ‚úèÔ∏è Partially update blacklist entry
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this blacklist.
        required: true
      tags:
      - User Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBlacklistRequest'
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blacklist'
          description: ‚úÖ Blacklist entry updated
        '400':
          description: ‚ùå Validation error
        '401':
          description: üö´ Authentication required or email not verified
        '403':
          description: üö´ Permission denied
        '404':
          description: üö´ Blacklist entry not found
    delete:
      operationId: users_blacklist_destroy
      description: "\n        Remove a user from the blacklist (Staff only).\n   \
        \     \n        **\U0001F510 Permission Requirements**: \n        - **‚ùå Regular\
        \ Users**: No access\n        - **‚úÖ Staff/Superuser**: Can remove blacklist\
        \ entries\n        - **‚ö†Ô∏è Email Verification Required**: Staff must have verified\
        \ email\n        \n        **\U0001F4CB Use Cases**:\n        - User appeal\
        \ approved\n        - Temporary restriction expired\n        - Policy change\
        \ or error correction\n        "
      summary: üóëÔ∏è Remove from blacklist
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this blacklist.
        required: true
      tags:
      - User Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: ‚úÖ User removed from blacklist
        '401':
          description: üö´ Authentication required or email not verified
        '403':
          description: üö´ Permission denied - Staff access required
        '404':
          description: üö´ Blacklist entry not found
  /api/payments/workspaces/{workspace_id}/stripe-info/:
    get:
      operationId: payments_workspaces_stripe_info_retrieve
      description: "\n    Retrieve Stripe customer information for a workspace.\n\
        \    \n    **\U0001F510 Permission Requirements**:\n    - User must be authenticated\n\
        \    - User must be a member of the workspace\n    \n    **\U0001F4CA Returns**:\n\
        \    - Workspace details with Stripe customer ID\n    - Flag indicating if\
        \ Stripe customer exists\n    "
      summary: üè¢ Get workspace Stripe info
      parameters:
      - in: path
        name: workspace_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Payment Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StripeCustomer'
              examples:
                WithStripeCustomer:
                  value:
                    id: workspace-uuid
                    workspace_name: My Company
                    stripe_customer_id: cus_PqRsTuVwXyZ123
                    has_stripe_customer: true
                  summary: With Stripe Customer
                WithoutStripeCustomer:
                  value:
                    id: workspace-uuid
                    workspace_name: My Company
                    stripe_customer_id: null
                    has_stripe_customer: false
                  summary: Without Stripe Customer
          description: ‚úÖ Workspace Stripe info retrieved
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Not a member of this workspace
        '404':
          description: üö´ Workspace not found
  /api/payments/stripe/create-customer/:
    post:
      operationId: payments_stripe_create_customer_create
      description: "\n    Create a new Stripe customer for a workspace.\n    \n  \
        \  **\U0001F510 Permission Requirements**:\n    - User must be authenticated\n\
        \    - User must be a member of the workspace\n    - Workspace must not already\
        \ have a Stripe customer\n    \n    **\U0001F4DD Process**:\n    1. Creates\
        \ customer in Stripe\n    2. Stores customer ID in workspace\n    3. Returns\
        \ customer details\n    "
      summary: üí≥ Create Stripe customer
      tags:
      - Payment Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStripeCustomerRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '201':
          description: ‚úÖ Stripe customer created successfully
        '400':
          description: ‚ùå Validation error or customer already exists
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Not a member of this workspace
        '500':
          description: ‚ùå Stripe API error
  /api/payments/stripe/portal-session/:
    post:
      operationId: payments_stripe_portal_session_create
      description: "\n    Create a Stripe Customer Portal session for workspace billing\
        \ management.\n    \n    **\U0001F510 Permission Requirements**:\n    - User\
        \ must be authenticated\n    - User must be a member of the workspace\n  \
        \  - Workspace must have a Stripe customer\n    \n    **\U0001F3AF Portal\
        \ Features**:\n    - View/download invoices\n    - Update payment methods\n\
        \    - View subscription details\n    - Update billing address\n    "
      summary: üåê Create customer portal session
      tags:
      - Payment Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StripePortalSessionRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: ‚úÖ Portal session created
        '400':
          description: ‚ùå Validation error
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Not a member of this workspace
        '500':
          description: ‚ùå Stripe API error
  /api/payments/stripe/customer-details/:
    post:
      operationId: payments_stripe_customer_details_create
      description: "\n    Get detailed information about a workspace's Stripe customer.\n\
        \    \n    **\U0001F510 Permission Requirements**:\n    - User must be authenticated\n\
        \    - User must be a member of the workspace\n    \n    **\U0001F4CA Returns**:\n\
        \    - Full Stripe customer object\n    - Payment methods\n    - Balance information\n\
        \    "
      summary: üìã Retrieve Stripe customer details
      tags:
      - Payment Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetrieveStripeCustomerRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: ‚úÖ Customer details retrieved
        '400':
          description: ‚ùå No Stripe customer exists
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Not a member of this workspace
        '404':
          description: üö´ Workspace not found
        '500':
          description: ‚ùå Stripe API error
  /api/payments/stripe/webhook/:
    post:
      operationId: payments_stripe_webhook_create
      description: Handle incoming Stripe webhook events
      summary: üîó Stripe webhook handler
      tags:
      - payments
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: No response body
  /api/payments/stripe/products/:
    get:
      operationId: payments_stripe_products_retrieve
      description: "\n    Returns all active Stripe products and their prices (monthly/yearly).\n\
        \    \n    **\U0001F510 Permission Requirements**:\n    - User must be authenticated\n\
        \    - (Optional: Staff only, if gew√ºnscht)\n    "
      summary: üì¶ List all Stripe products and prices
      tags:
      - Payment Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      - {}
      responses:
        '200':
          description: ‚úÖ List of Stripe products and prices
        '401':
          description: üö´ Authentication required
  /api/payments/stripe/create-checkout-session/:
    post:
      operationId: payments_stripe_create_checkout_session_create
      description: "\n    Create a Stripe Checkout session for subscription payment.\n\
        \    \n    **\U0001F510 Permission Requirements**:\n    - User must be authenticated\n\
        \    - User must be a member of the workspace\n    - Workspace must have a\
        \ Stripe customer\n    \n    **\U0001F3AF Process**:\n    1. Creates checkout\
        \ session with selected price\n    2. Returns checkout URL\n    3. User completes\
        \ payment on Stripe Checkout page\n    4. After payment, user is redirected\
        \ to success_url\n    5. Webhook updates subscription status\n    "
      summary: üí≥ Create Stripe checkout session
      tags:
      - Payment Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCheckoutSessionRequest'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: ‚úÖ Checkout session created
        '400':
          description: ‚ùå Validation error
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Not a member of this workspace
        '500':
          description: ‚ùå Stripe API error
  /api/payments/stripe/change-plan/:
    post:
      operationId: payments_stripe_change_plan_create
      description: Update the current Stripe subscription to a new price with proper
        proration.
      summary: üîÑ Change subscription plan (price)
      tags:
      - Payment Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePlanRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: ‚úÖ Plan changed
        '400':
          description: ‚ùå Validation error
        '404':
          description: üö´ Workspace not found
        '500':
          description: ‚ùå Stripe API error
  /api/payments/stripe/minute-pack-checkout/:
    post:
      operationId: payments_stripe_minute_pack_checkout_create
      description: Creates a Stripe Checkout Session to purchase a 100-minute pack
        as a one-time payment.
      summary: üßæ Create Stripe checkout for 100-minute pack (one-time)
      tags:
      - Payment Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: No response body
  /api/payments/workspaces/{workspace_id}/subscription/:
    get:
      operationId: payments_workspaces_subscription_retrieve
      description: "\n    Get the current subscription status for a workspace.\n \
        \   \n    **\U0001F510 Permission Requirements**:\n    - User must be authenticated\n\
        \    - User must be a member of the workspace\n    \n    **\U0001F4CA Returns**:\n\
        \    - Current subscription details\n    - Plan information\n    - Next billing\
        \ date\n    - Subscription status\n    "
      summary: üìä Get workspace subscription status
      parameters:
      - in: path
        name: workspace_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Payment Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: ‚úÖ Subscription details retrieved
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Not a member of this workspace
        '404':
          description: üö´ Workspace not found
  /api/payments/workspaces/{workspace_id}/check-subscription/:
    get:
      operationId: payments_workspaces_check_subscription_retrieve
      description: "\n    Check if a workspace has an active subscription.\n    \n\
        \    **Returns**:\n    - `has_active_subscription`: Boolean indicating if\
        \ subscription is active\n    - `subscription_status`: Current status (trial,\
        \ active, cancelled, past_due, unpaid)\n    - `subscription_end_date`: When\
        \ the subscription ends (if active)\n    "
      summary: üîç Check workspace subscription status
      parameters:
      - in: path
        name: workspace_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Payment Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: ‚úÖ Subscription status retrieved
        '404':
          description: üö´ Workspace not found
  /api/payments/workspaces/{workspace_id}/subscription/cancel/:
    post:
      operationId: payments_workspaces_subscription_cancel_create
      description: "\n    Cancel the workspace subscription at the end of the billing\
        \ period.\n    \n    **\U0001F510 Permission Requirements**:\n    - User must\
        \ be authenticated\n    - User must be a member of the workspace\n    - Workspace\
        \ must have an active subscription\n    \n    **‚ö†Ô∏è Note**:\n    - Subscription\
        \ remains active until end of billing period\n    - Can be reactivated before\
        \ period ends\n    "
      summary: üö´ Cancel subscription
      parameters:
      - in: path
        name: workspace_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Payment Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: ‚úÖ Subscription cancelled
        '400':
          description: ‚ùå No active subscription
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Not a member of this workspace
        '404':
          description: üö´ Workspace not found
  /api/payments/workspaces/{workspace_id}/subscription/resume/:
    post:
      operationId: payments_workspaces_subscription_resume_create
      description: Resume a subscription by unsetting cancel_at_period_end so it continues
        next period.
      summary: ‚úÖ Resume subscription (undo cancel)
      parameters:
      - in: path
        name: workspace_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Payment Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: ‚úÖ Subscription resumed
        '400':
          description: ‚ùå No active subscription or not scheduled to cancel
        '404':
          description: üö´ Workspace not found
        '500':
          description: ‚ùå Stripe API error
  /api/payments/workspaces/{workspace_id}/usage/:
    get:
      operationId: payments_workspaces_usage_retrieve
      description: "\n    Get comprehensive usage and quota information for a workspace.\n\
        \    \n    **\U0001F510 Permission Requirements**:\n    - User must be authenticated\n\
        \    - User must be a member of the workspace\n    \n    **\U0001F4CA Returns**:\n\
        \    - Current usage for all features\n    - Plan limits and remaining quotas\n\
        \    - Billing period information\n    - Usage percentages\n    "
      summary: üìä Get workspace usage and quota status
      parameters:
      - in: path
        name: workspace_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Payment Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: ‚úÖ Usage status retrieved
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Not a member of this workspace
        '404':
          description: üö´ Workspace not found
  /api/payments/workspaces/{workspace_id}/purchase-minute-pack/:
    post:
      operationId: payments_workspaces_purchase_minute_pack_create
      description: Credits 100 extra call minutes to the current billing period for
        the workspace.
      summary: Purchase a 100-minute pack
      parameters:
      - in: path
        name: workspace_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Payment Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: ‚úÖ Minute pack credited
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Not a member of this workspace
        '404':
          description: üö´ Workspace not found
  /api/plans/:
    get:
      operationId: plans_list
      description: |-
        ViewSet f√ºr Subscription Pl√§ne

        Stellt Endpunkte bereit f√ºr:
        - Liste aller Pl√§ne
        - Einzelplan-Details
        - Plan-Vergleich
        - √ñffentliche Plan-Info
        - Plan erstellen/bearbeiten/l√∂schen (Admin only)
      parameters:
      - in: query
        name: active
        schema:
          type: boolean
      - in: query
        name: affordable_plans
        schema:
          type: boolean
      - in: query
        name: enterprise_only
        schema:
          type: boolean
      - in: query
        name: has_feature
        schema:
          type: string
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: max_users
        schema:
          type: number
      - in: query
        name: min_minutes
        schema:
          type: number
      - in: query
        name: name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: price_max
        schema:
          type: number
      - in: query
        name: price_min
        schema:
          type: number
      - in: query
        name: price_monthly
        schema:
          type: number
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - plans
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPlanList'
          description: ''
    post:
      operationId: plans_create
      description: |-
        ViewSet f√ºr Subscription Pl√§ne

        Stellt Endpunkte bereit f√ºr:
        - Liste aller Pl√§ne
        - Einzelplan-Details
        - Plan-Vergleich
        - √ñffentliche Plan-Info
        - Plan erstellen/bearbeiten/l√∂schen (Admin only)
      tags:
      - plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: ''
  /api/plans/comparison/:
    get:
      operationId: plans_comparison_retrieve
      description: |-
        Plan-Vergleichstabelle
        GET /api/plans/comparison/
      tags:
      - plans
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: ''
  /api/plans/pricing/:
    get:
      operationId: plans_pricing_retrieve
      description: |-
        Nur Preisinformationen aller Pl√§ne
        GET /api/plans/pricing/
      tags:
      - plans
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: ''
  /api/plans/summary/:
    get:
      operationId: plans_summary_retrieve
      description: |-
        Kompakte √úbersicht aller Pl√§ne
        GET /api/plans/summary/
      tags:
      - plans
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanSummary'
          description: ''
  /api/plans/{id}/:
    get:
      operationId: plans_retrieve
      description: |-
        ViewSet f√ºr Subscription Pl√§ne

        Stellt Endpunkte bereit f√ºr:
        - Liste aller Pl√§ne
        - Einzelplan-Details
        - Plan-Vergleich
        - √ñffentliche Plan-Info
        - Plan erstellen/bearbeiten/l√∂schen (Admin only)
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this plan.
        required: true
      tags:
      - plans
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanDetail'
          description: ''
    put:
      operationId: plans_update
      description: |-
        ViewSet f√ºr Subscription Pl√§ne

        Stellt Endpunkte bereit f√ºr:
        - Liste aller Pl√§ne
        - Einzelplan-Details
        - Plan-Vergleich
        - √ñffentliche Plan-Info
        - Plan erstellen/bearbeiten/l√∂schen (Admin only)
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this plan.
        required: true
      tags:
      - plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: ''
    patch:
      operationId: plans_partial_update
      description: |-
        ViewSet f√ºr Subscription Pl√§ne

        Stellt Endpunkte bereit f√ºr:
        - Liste aller Pl√§ne
        - Einzelplan-Details
        - Plan-Vergleich
        - √ñffentliche Plan-Info
        - Plan erstellen/bearbeiten/l√∂schen (Admin only)
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this plan.
        required: true
      tags:
      - plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlanRequest'
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: ''
    delete:
      operationId: plans_destroy
      description: |-
        ViewSet f√ºr Subscription Pl√§ne

        Stellt Endpunkte bereit f√ºr:
        - Liste aller Pl√§ne
        - Einzelplan-Details
        - Plan-Vergleich
        - √ñffentliche Plan-Info
        - Plan erstellen/bearbeiten/l√∂schen (Admin only)
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this plan.
        required: true
      tags:
      - plans
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: No response body
  /api/plans/{id}/features/:
    get:
      operationId: plans_features_retrieve_2
      description: |-
        Alle Features eines Plans
        GET /api/plans/{id}/features/
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this plan.
        required: true
      tags:
      - plans
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: ''
  /api/plans/features/:
    get:
      operationId: plans_features_list
      description: |-
        ViewSet f√ºr Features
        Erm√∂glicht CRUD-Operationen f√ºr Features
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - plans
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeatureList'
          description: ''
    post:
      operationId: plans_features_create
      description: |-
        ViewSet f√ºr Features
        Erm√∂glicht CRUD-Operationen f√ºr Features
      tags:
      - plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: ''
  /api/plans/features/by_plan/:
    get:
      operationId: plans_features_by_plan_retrieve
      description: |-
        Features gruppiert nach Pl√§nen
        GET /api/features/by_plan/
      tags:
      - plans
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: ''
  /api/plans/features/{id}/:
    get:
      operationId: plans_features_retrieve
      description: |-
        ViewSet f√ºr Features
        Erm√∂glicht CRUD-Operationen f√ºr Features
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this feature.
        required: true
      tags:
      - plans
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: ''
    put:
      operationId: plans_features_update
      description: |-
        ViewSet f√ºr Features
        Erm√∂glicht CRUD-Operationen f√ºr Features
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this feature.
        required: true
      tags:
      - plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: ''
    patch:
      operationId: plans_features_partial_update
      description: |-
        ViewSet f√ºr Features
        Erm√∂glicht CRUD-Operationen f√ºr Features
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this feature.
        required: true
      tags:
      - plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFeatureRequest'
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: ''
    delete:
      operationId: plans_features_destroy
      description: |-
        ViewSet f√ºr Features
        Erm√∂glicht CRUD-Operationen f√ºr Features
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this feature.
        required: true
      tags:
      - plans
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: No response body
  /api/plans/plan-features/:
    get:
      operationId: plans_plan_features_list
      description: |-
        ViewSet f√ºr Plan-Feature Zuordnungen
        Erm√∂glicht CRUD-Operationen f√ºr Plan-Feature-Relationships
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - plans
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPlanFeatureList'
          description: ''
    post:
      operationId: plans_plan_features_create
      description: |-
        ViewSet f√ºr Plan-Feature Zuordnungen
        Erm√∂glicht CRUD-Operationen f√ºr Plan-Feature-Relationships
      tags:
      - plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanFeatureRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanFeature'
          description: ''
  /api/plans/plan-features/{id}/:
    get:
      operationId: plans_plan_features_retrieve
      description: |-
        ViewSet f√ºr Plan-Feature Zuordnungen
        Erm√∂glicht CRUD-Operationen f√ºr Plan-Feature-Relationships
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this plan feature.
        required: true
      tags:
      - plans
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanFeature'
          description: ''
    put:
      operationId: plans_plan_features_update
      description: |-
        ViewSet f√ºr Plan-Feature Zuordnungen
        Erm√∂glicht CRUD-Operationen f√ºr Plan-Feature-Relationships
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this plan feature.
        required: true
      tags:
      - plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanFeatureRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanFeature'
          description: ''
    patch:
      operationId: plans_plan_features_partial_update
      description: |-
        ViewSet f√ºr Plan-Feature Zuordnungen
        Erm√∂glicht CRUD-Operationen f√ºr Plan-Feature-Relationships
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this plan feature.
        required: true
      tags:
      - plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlanFeatureRequest'
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanFeature'
          description: ''
    delete:
      operationId: plans_plan_features_destroy
      description: |-
        ViewSet f√ºr Plan-Feature Zuordnungen
        Erm√∂glicht CRUD-Operationen f√ºr Plan-Feature-Relationships
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this plan feature.
        required: true
      tags:
      - plans
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: No response body
  /api/workspaces/workspaces/:
    get:
      operationId: workspaces_workspaces_list
      description: "\n        Retrieve workspaces based on your access level and membership.\n\
        \        \n        **\U0001F510 Permission Requirements**:\n        - **Regular\
        \ Users**: Can only see workspaces they belong to (filtered)\n        - **Staff\
        \ Members**: Can view all workspaces in the system\n        - **Superusers**:\
        \ Full access to all workspace data\n        \n        **\U0001F4CA Response\
        \ Filtering**:\n        - Regular users see only their workspace memberships\n\
        \        - Staff/Superusers see all workspaces with full details\n       \
        \ \n        **\U0001F3AF Use Cases**:\n        - Workspace selection interface\n\
        \        - Organization overview\n        - Member access control\n      \
        \  "
      summary: üè¢ List workspaces
      parameters:
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
      - in: query
        name: empty_workspace
        schema:
          type: boolean
      - in: query
        name: has_user
        schema:
          type: string
        description: Has User
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: updated_after
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_before
        schema:
          type: string
          format: date-time
      - in: query
        name: user_count_max
        schema:
          type: number
      - in: query
        name: user_count_min
        schema:
          type: number
      - in: query
        name: workspace_name
        schema:
          type: string
      tags:
      - Workspace Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWorkspaceList'
              examples:
                RegularUserResponse:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - count: 2
                      results:
                      - id: workspace-uuid-1
                        workspace_name: My Team Workspace
                        user_count: 5
                        created_at: '2024-01-10T09:00:00Z'
                      - id: workspace-uuid-2
                        workspace_name: Project Alpha
                        user_count: 3
                        created_at: '2024-01-12T14:30:00Z'
                  summary: User sees only their workspaces
                  description: Regular users are filtered to see only workspaces they
                    belong to
                StaffUserResponse:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - count: 25
                      results:
                      - id: uuid1
                        workspace_name: Sales Team
                        user_count: 8
                      - id: uuid2
                        workspace_name: Marketing
                        user_count: 12
                  summary: Staff sees all workspaces
                  description: Staff members can view all workspaces in the system
          description: ‚úÖ Successfully retrieved workspaces based on access level
        '401':
          description: üö´ Authentication required - Please login to access workspaces
    post:
      operationId: workspaces_workspaces_create
      description: "\n        Create a new workspace for organizing users and resources.\n\
        \        \n        **\U0001F510 Permission Requirements**:\n        - **‚ùå\
        \ Regular Users**: Cannot create workspaces\n        - **‚úÖ Staff Members**:\
        \ Can create new workspaces\n        - **‚úÖ Superusers**: Can create new workspaces\n\
        \        \n        **\U0001F4BC Organization Structure**:\n        - Workspaces\
        \ contain users, agents, and resources\n        - Establishes organizational\
        \ boundaries\n        - Controls resource access and permissions\n       \
        \ \n        **\U0001F4DD Required Information**:\n        - `workspace_name`:\
        \ Unique workspace identifier\n        - Users can be added separately via\
        \ user management endpoints\n        "
      summary: ‚ûï Create new workspace
      tags:
      - Workspace Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceCreateRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
              examples:
                NewWorkspaceCreated:
                  value:
                    id: new-workspace-uuid
                    workspace_name: Customer Support Team
                    user_count: 0
                    created_at: '2024-01-15T10:30:00Z'
                  summary: Successfully created workspace
          description: ‚úÖ Workspace created successfully
        '400':
          description: ‚ùå Validation error - Workspace name may already exist
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Permission denied - Staff access required for workspace creation
  /api/workspaces/workspaces/my_workspaces/:
    get:
      operationId: workspaces_workspaces_my_workspaces_retrieve
      description: "\n        Retrieve all workspaces that the authenticated user\
        \ belongs to.\n        \n        **\U0001F510 Permission Requirements**:\n\
        \        - **‚úÖ Authenticated Users**: Get their own workspace memberships\n\
        \        - **‚úÖ Staff Members**: Get all workspaces in the system\n       \
        \ - **‚úÖ Superusers**: Get all workspaces in the system\n        \n       \
        \ **\U0001F4CA Response Details**:\n        - Only workspaces where user is\
        \ a member\n        - Complete workspace information\n        - User count\
        \ and basic statistics\n        \n        **\U0001F3AF Use Cases**:\n    \
        \    - User workspace selection\n        - Dashboard workspace listing\n \
        \       - Navigation and routing\n        - Frontend workspace initialization\n\
        \        "
      summary: üè† Get my workspaces
      tags:
      - Workspace Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWorkspaceList'
              examples:
                MyWorkspaces:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - - id: workspace-uuid-1
                        workspace_name: John Doe Workspace
                        user_count: 1
                        created_at: '2024-01-10T09:00:00Z'
                        updated_at: '2024-01-10T09:00:00Z'
                      - id: workspace-uuid-2
                        workspace_name: Team Project Alpha
                        user_count: 3
                        created_at: '2024-01-12T14:30:00Z'
                        updated_at: '2024-01-15T10:20:00Z'
                  summary: User's workspace memberships
          description: ‚úÖ User workspaces retrieved successfully
        '401':
          description: üö´ Authentication required - Please login to access workspaces
  /api/workspaces/workspaces/{id}/:
    get:
      operationId: workspaces_workspaces_retrieve
      description: "\n        Retrieve detailed information about a specific workspace.\n\
        \        \n        **\U0001F510 Permission Requirements**:\n        - **Regular\
        \ Users**: Can only access workspaces they belong to\n        - **Staff Members**:\
        \ Can access any workspace details\n        - **Superusers**: Full access\
        \ to any workspace\n        \n        **\U0001F6E1Ô∏è Access Control**:\n  \
        \      - Users get 404 for workspaces they don't belong to (security)\n  \
        \      - Staff can see all workspace configuration details\n        - Includes\
        \ user count and membership information\n        "
      summary: üîç Get workspace details
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workspace.
        required: true
      tags:
      - Workspace Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: ‚úÖ Workspace details retrieved successfully
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Permission denied - Not a workspace member
        '404':
          description: üö´ Workspace not found or access denied
    put:
      operationId: workspaces_workspaces_update
      description: "\n        Update workspace information.\n        \n        **\U0001F510\
        \ Permission Requirements**:\n        - **‚úÖ Regular Users**: Can update workspaces\
        \ they belong to\n        - **‚úÖ Staff Members**: Can update any workspace\
        \ details\n        - **‚úÖ Superusers**: Can update any workspace details\n\
        \        \n        **‚ö†Ô∏è Organizational Impact**:\n        - May affect all\
        \ workspace members\n        - Consider communication for major changes\n\
        \        - Affects resource organization and access\n        "
      summary: ‚úèÔ∏è Update workspace
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workspace.
        required: true
      tags:
      - Workspace Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceCreateRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: ‚úÖ Workspace updated successfully
        '400':
          description: ‚ùå Validation error
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Permission denied - You can only update workspaces you belong
            to
        '404':
          description: üö´ Workspace not found
    patch:
      operationId: workspaces_workspaces_partial_update
      description: "\n        Update specific fields of a workspace.\n        \n \
        \       **\U0001F510 Permission Requirements**:\n        - **‚úÖ Regular Users**:\
        \ Can update workspaces they belong to\n        - **‚úÖ Staff Members**: Can\
        \ update any workspace details\n        - **‚úÖ Superusers**: Can update any\
        \ workspace details\n        "
      summary: ‚úèÔ∏è Partially update workspace
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workspace.
        required: true
      tags:
      - Workspace Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkspaceCreateRequest'
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: ‚úÖ Workspace updated successfully
        '400':
          description: ‚ùå Validation error
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Permission denied - You can only update workspaces you belong
            to
        '404':
          description: üö´ Workspace not found
    delete:
      operationId: workspaces_workspaces_destroy
      description: "\n        **‚ö†Ô∏è DESTRUCTIVE OPERATION - Permanently delete a workspace.**\n\
        \        \n        **\U0001F510 Permission Requirements**:\n        - **‚ùå\
        \ Regular Users**: No access to workspace deletion\n        - **‚úÖ Workspace\
        \ Admin**: Can delete their own workspace\n        - **‚úÖ Superuser**: Can\
        \ delete any workspace\n        \n        **\U0001F4A5 Critical Impact**:\n\
        \        - Removes all workspace data and relationships\n        - Affects\
        \ all workspace members and agents\n        - Cannot be undone - ensure data\
        \ backup\n        \n        **\U0001F6E1Ô∏è Safety Considerations**:\n     \
        \   - Ensure all agents and resources are reassigned\n        - Communicate\
        \ with affected users\n        - Consider workspace archival instead\n   \
        \     "
      summary: üóëÔ∏è Delete workspace
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workspace.
        required: true
      tags:
      - Workspace Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: ‚úÖ Workspace deleted successfully
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Permission denied - Only workspace admin or superusers can
            delete workspaces
        '404':
          description: üö´ Workspace not found
  /api/workspaces/workspaces/{id}/add_users/:
    post:
      operationId: workspaces_workspaces_add_users_create
      description: "\n        Add one or multiple users to a workspace (Staff only).\n\
        \        \n        **\U0001F510 Permission Requirements**:\n        - **‚ùå\
        \ Regular Users**: Cannot manage workspace membership\n        - **‚úÖ Staff\
        \ Members**: Can add users to any workspace\n        - **‚úÖ Superusers**: Can\
        \ add users to any workspace\n        \n        **\U0001F4DD Required Information**:\n\
        \        - `user_ids`: Array of user IDs to add to the workspace\n       \
        \ \n        **\U0001F4A1 Membership Management**:\n        - Establishes user-workspace\
        \ relationships\n        - Grants workspace resource access\n        - Affects\
        \ user's workspace filtering\n        \n        **\U0001F504 Bulk Operation**:\n\
        \        - Can add multiple users in single request\n        - Validates all\
        \ user IDs before processing\n        - Returns success/failure status for\
        \ each user\n        "
      summary: ‚ûï Add users to workspace
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workspace.
        required: true
      tags:
      - Workspace Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceUserAssignmentRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: ‚úÖ Users added to workspace successfully
        '400':
          description: ‚ùå Validation error - Invalid user IDs
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Permission denied - Staff access required
        '404':
          description: üö´ Workspace not found
  /api/workspaces/workspaces/{id}/bulk_invite/:
    post:
      operationId: workspaces_workspaces_bulk_invite_create
      description: "\n        Send invitations to multiple users at once.\n      \
        \  \n        **\U0001F510 Permission Requirements**: Workspace members and\
        \ staff only\n        \n        **\U0001F4CA Bulk Processing**:\n        -\
        \ Validates all email addresses before sending\n        - Skips users already\
        \ in workspace or with pending invitations\n        - Sends individual invitation\
        \ emails\n        - Returns detailed success/failure report\n        \n  \
        \      **‚ö° Performance**:\n        - Maximum 50 invitations per request\n\
        \        - Efficient validation and processing\n        - Detailed error reporting\
        \ per email\n        "
      summary: üìßüìß Bulk invite users to workspace
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workspace.
        required: true
      tags:
      - Workspace Invitations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceInviteBulkRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: ‚úÖ Bulk invitations processed
        '400':
          description: ‚ùå Validation error
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Permission denied
  /api/workspaces/workspaces/{id}/invitations/:
    get:
      operationId: workspaces_workspaces_invitations_retrieve
      description: "\n        Retrieve all invitations for this workspace.\n     \
        \   \n        **\U0001F510 Permission Requirements**: Workspace members and\
        \ staff only\n        \n        **\U0001F4CA Invitation Information**:\n \
        \       - Invitation status (pending, accepted, expired, cancelled)\n    \
        \    - Invitee email and expiration date\n        - Inviter information\n\
        \        - Invitation validity status\n        \n        **\U0001F3AF Use\
        \ Cases**:\n        - Monitor pending invitations\n        - Track invitation\
        \ history\n        - Manage workspace access\n        "
      summary: üìã List workspace invitations
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workspace.
        required: true
      tags:
      - Workspace Invitations
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWorkspaceInvitationList'
          description: ‚úÖ Workspace invitations retrieved successfully
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Permission denied
        '404':
          description: üö´ Workspace not found
  /api/workspaces/workspaces/{id}/invite/:
    post:
      operationId: workspaces_workspaces_invite_create
      description: "\n        Send an invitation email to a user to join this workspace.\n\
        \        \n        **\U0001F510 Permission Requirements**:\n        - **‚úÖ\
        \ Workspace Members**: Can invite others to their workspaces\n        - **‚úÖ\
        \ Staff Members**: Can invite users to any workspace\n        - **‚úÖ Superusers**:\
        \ Can invite users to any workspace\n        \n        **\U0001F4DD Invitation\
        \ Process**:\n        1. Validates email address and checks for existing memberships\n\
        \        2. Creates secure invitation token (7-day expiry)\n        3. Sends\
        \ professional invitation email\n        4. Returns invitation details for\
        \ tracking\n        \n        **‚úâÔ∏è Email Content**:\n        - Beautiful HTML\
        \ template with workspace details\n        - Secure invitation link with token\n\
        \        - Clear instructions for accepting\n        - 7-day expiration notice\n\
        \        \n        **\U0001F504 Existing Users vs New Users**:\n        -\
        \ **Existing Users**: Can login and accept immediately\n        - **New Users**:\
        \ Must register first, then accept invitation\n        "
      summary: üìß Invite user to workspace
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workspace.
        required: true
      tags:
      - Workspace Invitations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceInviteUserRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceInvitation'
              examples:
                InvitationSent:
                  value:
                    id: invitation-uuid
                    email: colleague@example.com
                    status: pending
                    workspace_name: Sales Team
                    invited_by_name: John Doe
                    invited_by_email: john@company.com
                    created_at: '2024-01-15T10:30:00Z'
                    expires_at: '2024-01-22T10:30:00Z'
                    is_valid: true
                  summary: User invitation created and email sent
          description: ‚úÖ Invitation sent successfully
        '400':
          description: ‚ùå Validation error - User already member or pending invitation
            exists
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Permission denied - Not a workspace member
        '404':
          description: üö´ Workspace not found
  /api/workspaces/workspaces/{id}/my_role/:
    get:
      operationId: workspaces_workspaces_my_role_retrieve
      description: Returns whether the current user is the workspace admin
      summary: üîë Get my role in this workspace
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workspace.
        required: true
      tags:
      - Workspace Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: OK
  /api/workspaces/workspaces/{id}/phone-numbers/:
    get:
      operationId: workspaces_workspaces_phone_numbers_retrieve
      description: List phone numbers mapped to this workspace and indicate which
        one is default.
      summary: üìû List workspace phone numbers
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workspace.
        required: true
      tags:
      - Workspace Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: OK
  /api/workspaces/workspaces/{id}/remove_users/:
    delete:
      operationId: workspaces_workspaces_remove_users_destroy
      description: "\n        Remove one or multiple users from a workspace (Staff\
        \ only).\n        \n        **\U0001F510 Permission Requirements**: Staff\
        \ access required\n        \n        **\U0001F4DD Required Information**:\n\
        \        - `user_ids`: Array of user IDs to remove from workspace\n      \
        \  \n        **‚ö†Ô∏è Impact**:\n        - Removes workspace resource access\n\
        \        - Affects user's workspace filtering\n        - May impact ongoing\
        \ work and data access\n        \n        **\U0001F504 Bulk Operation**:\n\
        \        - Can remove multiple users in single request\n        - Validates\
        \ user membership before removal\n        "
      summary: ‚ûñ Remove users from workspace
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workspace.
        required: true
      tags:
      - Workspace Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: ‚úÖ Users removed from workspace successfully
        '400':
          description: ‚ùå Validation error
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Permission denied - Staff access required
        '404':
          description: üö´ Workspace not found
  /api/workspaces/workspaces/{id}/smtp-settings/:
    get:
      operationId: workspaces_workspaces_smtp_settings_retrieve
      description: Retrieve or update SMTP settings for the workspace (password write-only).
      summary: ‚úâÔ∏è Get/Set SMTP settings
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workspace.
        required: true
      tags:
      - Workspace Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceSmtpSettings'
          description: ''
    put:
      operationId: workspaces_workspaces_smtp_settings_update
      description: Retrieve or update SMTP settings for the workspace (password write-only).
      summary: ‚úâÔ∏è Get/Set SMTP settings
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workspace.
        required: true
      tags:
      - Workspace Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceSmtpSettingsRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceSmtpSettings'
          description: ''
    patch:
      operationId: workspaces_workspaces_smtp_settings_partial_update
      description: Retrieve or update SMTP settings for the workspace (password write-only).
      summary: ‚úâÔ∏è Get/Set SMTP settings
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workspace.
        required: true
      tags:
      - Workspace Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkspaceSmtpSettingsRequest'
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceSmtpSettings'
          description: ''
  /api/workspaces/workspaces/{id}/smtp-test/:
    post:
      operationId: workspaces_workspaces_smtp_test_create
      description: Send a test email using the workspace SMTP configuration.
      summary: üì® SMTP test send
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workspace.
        required: true
      tags:
      - Workspace Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceSmtpTestRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: ‚úÖ Test email sent (or error returned)
  /api/workspaces/workspaces/{id}/stats/:
    get:
      operationId: workspaces_workspaces_stats_retrieve
      description: "\n        Retrieve comprehensive statistics for a workspace.\n\
        \        \n        **\U0001F510 Permission Requirements**:\n        - **Regular\
        \ Users**: Can view stats for workspaces they belong to\n        - **Staff\
        \ Members**: Can view stats for any workspace\n        - **Superusers**: Full\
        \ access to all workspace analytics\n        \n        **\U0001F4C8 Statistics\
        \ Included**:\n        - User count and membership details\n        - Agent\
        \ count and configuration\n        - Resource utilization metrics\n      \
        \  - Activity and usage analytics\n        \n        **\U0001F3AF Business\
        \ Intelligence**:\n        - Workspace performance metrics\n        - Resource\
        \ allocation insights\n        - Team productivity indicators\n        "
      summary: üìä Get workspace statistics
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workspace.
        required: true
      tags:
      - Workspace Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceStats'
              examples:
                WorkspaceStatistics:
                  value:
                    workspace_id: workspace-uuid
                    workspace_name: Sales Team
                    user_count: 8
                    agent_count: 3
                    total_calls: 1250
                    active_leads: 45
                    last_activity: '2024-01-15T09:30:00Z'
                  summary: Complete workspace analytics
          description: ‚úÖ Workspace statistics retrieved successfully
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Permission denied - Not a workspace member
        '404':
          description: üö´ Workspace not found
  /api/workspaces/workspaces/{id}/transfer_admin/:
    post:
      operationId: workspaces_workspaces_transfer_admin_create
      description: Transfer workspace admin role to another member (admin only)
      summary: üëë Transfer workspace admin
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workspace.
        required: true
      tags:
      - Workspace Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceUserAssignmentRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: Admin transferred
  /api/workspaces/workspaces/{id}/users/:
    get:
      operationId: workspaces_workspaces_users_retrieve
      description: "\n        Retrieve all users who are members of a specific workspace.\n\
        \        \n        **\U0001F510 Permission Requirements**:\n        - **Regular\
        \ Users**: Can view users in workspaces they belong to\n        - **Staff\
        \ Members**: Can view users in any workspace\n        - **Superusers**: Full\
        \ access to workspace membership data\n        \n        **\U0001F4CA User\
        \ Information**:\n        - Basic user profile information\n        - Workspace\
        \ membership details\n        - User role and status in workspace context\n\
        \        \n        **\U0001F3AF Use Cases**:\n        - Team member listings\n\
        \        - Workspace directory\n        - Access control verification\n  \
        \      "
      summary: üë• Get workspace users
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workspace.
        required: true
      tags:
      - Workspace Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWorkspaceUserList'
          description: ‚úÖ Workspace users retrieved successfully
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Permission denied - Not a workspace member
        '404':
          description: üö´ Workspace not found
  /api/workspaces/invitations/{token}/accept/:
    post:
      operationId: workspaces_invitations_accept_create
      description: "\n        Accept a workspace invitation and join the workspace.\n\
        \        \n        **\U0001F510 Authentication Required**: User must be logged\
        \ in to accept invitations\n        \n        **‚úâÔ∏è Email Verification**: User's\
        \ email must match the invitation email\n        \n        **\U0001F504 Acceptance\
        \ Process**:\n        1. Validates invitation token and expiration\n     \
        \   2. Verifies user's email matches invitation email\n        3. Adds user\
        \ to workspace\n        4. Updates invitation status to 'accepted'\n     \
        \   5. Returns success confirmation\n        \n        **‚ö†Ô∏è Security Validations**:\n\
        \        - User must be authenticated\n        - Email addresses must match\
        \ exactly\n        - Invitation must be pending and not expired\n        -\
        \ Token must be valid and secure\n        \n        **\U0001F3AF Different\
        \ User Scenarios**:\n        - **Existing Users**: Login ‚Üí Accept ‚Üí Immediate\
        \ access\n        - **New Users**: Register ‚Üí Verify email ‚Üí Accept ‚Üí Access\n\
        \        "
      summary: ‚úÖ Accept workspace invitation
      parameters:
      - in: path
        name: token
        schema:
          type: string
          description: Secure token for invitation acceptance (encrypted at rest)
        required: true
      tags:
      - Public Invitations
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: ‚úÖ Invitation accepted successfully - User added to workspace
        '400':
          description: ‚ùå Invalid invitation or validation error
        '401':
          description: üö´ Authentication required - User must login to accept invitations
        '403':
          description: üö´ Email mismatch - Wrong user account
        '404':
          description: üö´ Invitation not found or invalid token
  /api/workspaces/invitations/{token}/:
    get:
      operationId: workspaces_invitations_retrieve
      description: "\n        **\U0001F310 PUBLIC ENDPOINT** - View invitation details\
        \ using the invitation token.\n        \n        **\U0001F513 Access**: No\
        \ authentication required (public endpoint)\n        \n        **\U0001F4CB\
        \ Information Provided**:\n        - Workspace name and details\n        -\
        \ Inviter information\n        - Invitation expiration status\n        - Email\
        \ address for verification\n        \n        **\U0001F3AF Use Cases**:\n\
        \        - Display invitation page before login\n        - Verify invitation\
        \ validity\n        - Show workspace information to potential members\n  \
        \      \n        **\U0001F6E1Ô∏è Security Notes**:\n        - Only basic workspace\
        \ information is exposed\n        - No sensitive data in public endpoint\n\
        \        - Token-based access only\n        "
      summary: üîç Get invitation details
      parameters:
      - in: path
        name: token
        schema:
          type: string
          description: Secure token for invitation acceptance (encrypted at rest)
        required: true
      tags:
      - Public Invitations
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitationDetail'
              examples:
                ValidInvitation:
                  value:
                    email: colleague@example.com
                    workspace_name: Sales Team
                    invited_by_name: John Doe
                    created_at: '2024-01-15T10:30:00Z'
                    expires_at: '2024-01-22T10:30:00Z'
                    is_valid: true
                  summary: Active invitation details
                ExpiredInvitation:
                  value:
                    email: colleague@example.com
                    workspace_name: Sales Team
                    invited_by_name: John Doe
                    created_at: '2024-01-08T10:30:00Z'
                    expires_at: '2024-01-15T10:30:00Z'
                    is_valid: false
                  summary: Expired invitation
          description: ‚úÖ Invitation details retrieved successfully
        '404':
          description: üö´ Invitation not found or invalid token
  /api/agents/agents/:
    get:
      operationId: agents_agents_list
      description: "\n        Retrieve AI agents based on your workspace access and\
        \ role.\n        \n        **\U0001F510 Permission Requirements**:\n     \
        \   - **Regular Users**: Can only see agents in their workspaces (filtered)\n\
        \        - **Staff Members**: Can view all agents in the system\n        -\
        \ **Superusers**: Full access to all agent data\n        \n        **\U0001F4CA\
        \ Response Filtering**:\n        - Regular users see only workspace-scoped\
        \ agents\n        - Staff/Superusers see all agents with full configuration\n\
        \        \n        **\U0001F3AF Use Cases**:\n        - Agent management interface\n\
        \        - Resource allocation overview\n        - Workspace agent inventory\n\
        \        "
      summary: ü§ñ List AI agents
      parameters:
      - in: query
        name: call_from_after
        schema:
          type: string
          format: time
      - in: query
        name: call_from_before
        schema:
          type: string
          format: time
      - in: query
        name: call_to_after
        schema:
          type: string
          format: time
      - in: query
        name: call_to_before
        schema:
          type: string
          format: time
      - in: query
        name: character
        schema:
          type: string
      - in: query
        name: config_id
        schema:
          type: string
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
      - in: query
        name: greeting_inbound
        schema:
          type: string
      - in: query
        name: greeting_outbound
        schema:
          type: string
      - in: query
        name: has_calendar_config
        schema:
          type: boolean
      - in: query
        name: has_phone_number
        schema:
          type: string
      - in: query
        name: has_voice
        schema:
          type: boolean
      - in: query
        name: language
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: phone_count_max
        schema:
          type: number
      - in: query
        name: phone_count_min
        schema:
          type: number
      - in: query
        name: prompt
        schema:
          type: string
      - in: query
        name: retry_interval
        schema:
          type: integer
      - in: query
        name: retry_interval_max
        schema:
          type: integer
      - in: query
        name: retry_interval_min
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - active
          - paused
        description: |-
          Agent status

          * `active` - Active
          * `paused` - Paused
      - in: query
        name: updated_after
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_before
        schema:
          type: string
          format: date-time
      - in: query
        name: voice
        schema:
          type: string
          format: uuid
      - in: query
        name: voice_external_id
        schema:
          type: string
      - in: query
        name: voice_provider
        schema:
          type: string
      - in: query
        name: workspace
        schema:
          type: string
          format: uuid
      - in: query
        name: workspace__workspace_name
        schema:
          type: string
      tags:
      - Agent Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAgentList'
              examples:
                RegularUserResponse:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - count: 3
                      results:
                      - agent_id: agent-uuid-1
                        workspace_name: My Team
                        greeting: Hello! How can I help you today?
                        voice: en-US-AriaNeural
                        language: English
                        phone_number_count: 2
                  summary: User sees only workspace agents
                  description: Regular users are filtered to see only agents in their
                    workspaces
                StaffUserResponse:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - count: 15
                      results:
                      - agent_id: uuid1
                        workspace_name: Sales
                        voice: en-US-Jenny
                      - agent_id: uuid2
                        workspace_name: Support
                        voice: en-US-Guy
                  summary: Staff sees all agents
                  description: Staff members can view all agents in the system
          description: ‚úÖ Successfully retrieved agents based on access level
        '401':
          description: üö´ Authentication required - Please login to access agents
    post:
      operationId: agents_agents_create
      description: "\n        Create a new AI agent for a workspace.\n        \n \
        \       **\U0001F510 Permission Requirements**:\n        - **‚úÖ Regular Users**:\
        \ Can create agents in workspaces they belong to\n        - **‚úÖ Staff Members**:\
        \ Can create agents for any workspace\n        - **‚úÖ Superusers**: Can create\
        \ agents for any workspace\n        \n        **\U0001F916 AI Agent Configuration**:\n\
        \        - Voice and language settings\n        - Greeting and personality\
        \ setup\n        - Working hours and availability\n        - Calendar integration\
        \ options\n        \n        **\U0001F4DD Required Information**:\n      \
        \  - `workspace`: Target workspace ID (must be a workspace you belong to)\n\
        \        - `name`: Agent name\n        - `greeting_inbound`: Greeting for\
        \ inbound calls\n        - `greeting_outbound`: Greeting for outbound calls\n\
        \        - `voice`: Voice configuration\n        - `language`: Agent language\n\
        \        - `workdays`: Available working days\n        - `call_from`/`call_to`:\
        \ Working hours\n        - `character`: Agent personality description\n  \
        \      "
      summary: ‚ûï Create new AI agent
      tags:
      - Agent Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentCreateRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
              examples:
                NewAgentCreated:
                  value:
                    agent_id: new-agent-uuid
                    workspace_name: Customer Support
                    name: Sales Assistant
                    greeting_inbound: Hi! I'm your AI assistant. How can I help you
                      today?
                    greeting_outbound: Hello! I'm calling from [Company]. Is this
                      a good time to talk?
                    voice: en-US-AriaNeural
                    language: English
                    phone_number_count: 0
                    created_at: '2024-01-15T10:30:00Z'
                  summary: Successfully created AI agent
          description: ‚úÖ AI agent created successfully
        '400':
          description: ‚ùå Validation error - Check agent configuration or workspace
            access
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Permission denied - You can only create agents in workspaces
            you belong to
  /api/agents/agents/{agent_id}/:
    get:
      operationId: agents_agents_retrieve
      description: "\n        Retrieve detailed information about a specific AI agent.\n\
        \        \n        **\U0001F510 Permission Requirements**:\n        - **Regular\
        \ Users**: Can only access agents in their workspaces\n        - **Staff Members**:\
        \ Can access any agent details\n        - **Superusers**: Full access to any\
        \ agent configuration\n        \n        **\U0001F6E1Ô∏è Access Control**:\n\
        \        - Users get 404 for agents outside their workspaces (security)\n\
        \        - Staff can see all configuration details\n        - Includes phone\
        \ number assignments and calendar config\n        "
      summary: üîç Get AI agent details
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this agent.
        required: true
      tags:
      - Agent Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
          description: ‚úÖ Agent details retrieved successfully
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Permission denied - Agent not in your workspace
        '404':
          description: üö´ Agent not found or access denied
    put:
      operationId: agents_agents_update
      description: "\n        Update AI agent configuration.\n        \n        **\U0001F510\
        \ Permission Requirements**:\n        - **‚úÖ Regular Users**: Can update agents\
        \ in workspaces they belong to\n        - **‚úÖ Staff Members**: Can update\
        \ any agent configuration\n        - **‚úÖ Superusers**: Can update any agent\
        \ configuration\n        \n        **‚ö†Ô∏è Configuration Impact**:\n        -\
        \ May affect ongoing calls and interactions\n        - Changes voice, personality,\
        \ and behavior\n        - Updates working hours and availability\n        "
      summary: ‚úèÔ∏è Update AI agent
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this agent.
        required: true
      tags:
      - Agent Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentUpdateRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
          description: ‚úÖ Agent updated successfully
        '400':
          description: ‚ùå Validation error
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Permission denied - You can only update agents in workspaces
            you belong to
        '404':
          description: üö´ Agent not found
    patch:
      operationId: agents_agents_partial_update
      description: "\n        Update specific fields of an AI agent.\n        \n \
        \       **\U0001F510 Permission Requirements**:\n        - **‚úÖ Regular Users**:\
        \ Can update agents in workspaces they belong to\n        - **‚úÖ Staff Members**:\
        \ Can update any agent configuration\n        - **‚úÖ Superusers**: Can update\
        \ any agent configuration\n        "
      summary: ‚úèÔ∏è Partially update AI agent
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this agent.
        required: true
      tags:
      - Agent Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAgentUpdateRequest'
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
          description: ‚úÖ Agent updated successfully
        '400':
          description: ‚ùå Validation error
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Permission denied - You can only update agents in workspaces
            you belong to
        '404':
          description: üö´ Agent not found
    delete:
      operationId: agents_agents_destroy
      description: "\n        **‚ö†Ô∏è DESTRUCTIVE OPERATION - Permanently delete an AI\
        \ agent.**\n        \n        **\U0001F510 Permission Requirements**:\n  \
        \      - **‚úÖ Regular Users**: Can delete agents in workspaces they belong\
        \ to\n        - **‚úÖ Staff Members**: Can delete any agent\n        - **‚úÖ Superusers**:\
        \ Can delete any agent\n        \n        **\U0001F4A5 Critical Impact**:\n\
        \        - Removes agent and all configurations\n        - Affects phone number\
        \ assignments\n        - Disrupts ongoing call operations\n        - Cannot\
        \ be undone\n        \n        **\U0001F6E1Ô∏è Safety Considerations**:\n  \
        \      - Ensure no active calls using this agent\n        - Reassign phone\
        \ numbers before deletion\n        - Consider agent deactivation instead\n\
        \        "
      summary: üóëÔ∏è Delete AI agent
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this agent.
        required: true
      tags:
      - Agent Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: ‚úÖ Agent deleted successfully
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Permission denied - You can only delete agents in workspaces
            you belong to
        '404':
          description: üö´ Agent not found
  /api/agents/agents/{agent_id}/assign_phone_number/:
    post:
      operationId: agents_agents_assign_phone_number_create
      description: "\n        Assign one or multiple phone numbers to an agent (Staff\
        \ only).\n        \n        **\U0001F510 Permission Requirements**:\n    \
        \    - **‚ùå Regular Users**: Cannot manage phone assignments\n        - **‚úÖ\
        \ Staff Members**: Can assign phone numbers to any agent\n        - **‚úÖ Superusers**:\
        \ Can assign phone numbers to any agent\n        \n        **\U0001F4DD Required\
        \ Information**:\n        - `phone_number_ids`: Array of phone number IDs\
        \ to assign\n        \n        **\U0001F504 Resource Allocation**:\n     \
        \   - Phone numbers can be shared across multiple agents\n        - Establishes\
        \ agent-phone relationships\n        - Enables agent to make/receive calls\
        \ on assigned numbers\n        "
      summary: ‚ûï Assign phone numbers to agent
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this agent.
        required: true
      tags:
      - Agent Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentPhoneAssignmentRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: ‚úÖ Phone numbers assigned to agent successfully
        '400':
          description: ‚ùå Validation error - Invalid phone number IDs
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Permission denied - Staff access required
        '404':
          description: üö´ Agent not found
  /api/agents/agents/{agent_id}/config/:
    get:
      operationId: agents_agents_config_retrieve
      description: "\n        Retrieve complete configuration details for an agent.\n\
        \        \n        **\U0001F510 Permission Requirements**: Same as agent detail\
        \ access\n        \n        **\U0001F4CA Configuration Details**:\n      \
        \  - Voice and language settings\n        - Working hours and availability\n\
        \        - Calendar integration configuration\n        - Phone number assignments\n\
        \        - Character and greeting setup\n        "
      summary: ‚öôÔ∏è Get agent configuration
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this agent.
        required: true
      tags:
      - Agent Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentConfig'
          description: ‚úÖ Agent configuration retrieved successfully
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Permission denied
        '404':
          description: üö´ Agent not found
  /api/agents/agents/{agent_id}/phone_number/:
    get:
      operationId: agents_agents_phone_number_retrieve
      description: "\n        Retrieve all phone numbers assigned to a specific agent.\n\
        \        \n        **\U0001F510 Permission Requirements**:\n        - **Regular\
        \ Users**: Can view phone numbers for agents in their workspaces\n       \
        \ - **Staff Members**: Can view phone numbers for any agent\n        - **Superusers**:\
        \ Full access to agent phone assignments\n        \n        **\U0001F4CA Phone\
        \ Number Information**:\n        - Assigned phone numbers and status\n   \
        \     - Phone number availability and configuration\n        - Assignment\
        \ dates and history\n        "
      summary: üìû Get agent phone numbers
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this agent.
        required: true
      tags:
      - Agent Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPhoneNumberList'
          description: ‚úÖ Agent phone numbers retrieved successfully
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Permission denied - Agent not in your workspace
        '404':
          description: üö´ Agent not found
  /api/agents/agents/{agent_id}/remove_phone_number/:
    delete:
      operationId: agents_agents_remove_phone_number_destroy
      description: "\n        Remove one or multiple phone numbers from an agent (Staff\
        \ only).\n        \n        **\U0001F510 Permission Requirements**: Staff\
        \ access required\n        \n        **‚ö†Ô∏è Impact**:\n        - Removes agent's\
        \ ability to use those numbers\n        - May affect ongoing call operations\n\
        \        - Numbers become available for other agents\n        "
      summary: ‚ûñ Remove phone numbers from agent
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this agent.
        required: true
      tags:
      - Agent Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: ‚úÖ Phone numbers removed from agent successfully
        '400':
          description: ‚ùå Validation error
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Permission denied - Staff access required
        '404':
          description: üö´ Agent not found
  /api/agents/agents/{agent_id}/send_document/:
    post:
      operationId: agents_agents_send_document_create
      description: Upload the single PDF the agent may send via email, and optionally
        set default subject/body.
      summary: üìÑ Upload agent send-document (PDF)
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this agent.
        required: true
      tags:
      - Agent Management
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AgentSendDocumentUploadRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AgentSendDocumentUploadRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentSendDocumentInfo'
          description: ''
  /api/agents/agents/{agent_id}/send-document/:
    get:
      operationId: agents_agents_send_document_retrieve
      description: 'GET: Status des PDF + Defaults. DELETE: PDF und Defaults entfernen.'
      summary: üìÑ Get/delete agent send-document
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this agent.
        required: true
      tags:
      - Agent Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentSendDocumentInfo'
          description: ''
    delete:
      operationId: agents_agents_send_document_destroy
      description: 'GET: Status des PDF + Defaults. DELETE: PDF und Defaults entfernen.'
      summary: üìÑ Get/delete agent send-document
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this agent.
        required: true
      tags:
      - Agent Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentSendDocumentInfo'
          description: ''
  /api/agents/phone-numbers/:
    get:
      operationId: agents_phone_numbers_list
      description: "\n        Retrieve all available phone numbers in the system.\n\
        \        \n        **\U0001F510 Permission Requirements**:\n        - **‚úÖ\
        \ All Authenticated Users**: Can view all phone numbers\n        - **‚úÖ Staff/Superuser**:\
        \ Same access level as regular users\n        \n        **\U0001F4CA System\
        \ Resources**:\n        - All phone numbers available for agent assignment\n\
        \        - Phone number status and availability\n        - Current agent assignments\n\
        \        \n        **\U0001F3AF Use Cases**:\n        - Phone number inventory\n\
        \        - Agent assignment planning\n        - Resource availability checking\n\
        \        "
      summary: üìû List phone numbers
      parameters:
      - in: query
        name: assigned_to_agent
        schema:
          type: string
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: phonenumber
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: unassigned
        schema:
          type: boolean
      tags:
      - Agent Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPhoneNumberList'
              examples:
                PhoneNumbersList:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - count: 10
                      results:
                      - id: phone-uuid-1
                        phonenumber: '+1234567890'
                        is_active: true
                        agent_count: 2
                        created_at: '2024-01-10T09:00:00Z'
                      - id: phone-uuid-2
                        phonenumber: '+1987654321'
                        is_active: true
                        agent_count: 0
                        created_at: '2024-01-12T14:30:00Z'
                  summary: Available phone numbers
          description: ‚úÖ Successfully retrieved all phone numbers
        '401':
          description: üö´ Authentication required - Please login to view phone numbers
    post:
      operationId: agents_phone_numbers_create
      description: "\n        Add a new phone number to the system for agent assignment.\n\
        \        \n        **\U0001F510 Permission Requirements**:\n        - **‚ùå\
        \ Regular Users**: Cannot create phone numbers\n        - **‚úÖ Staff Members**:\
        \ Can add new phone numbers\n        - **‚úÖ Superusers**: Can add new phone\
        \ numbers\n        \n        **\U0001F4DE Phone Number Management**:\n   \
        \     - Adds phone numbers to system inventory\n        - Makes numbers available\
        \ for agent assignment\n        - Sets up system resources for call handling\n\
        \        \n        **\U0001F4DD Required Information**:\n        - `phonenumber`:\
        \ Phone number in international format\n        - `is_active`: Whether the\
        \ number is available for use\n        "
      summary: ‚ûï Create new phone number
      tags:
      - Agent Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneNumberRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneNumber'
          description: ‚úÖ Phone number created successfully
        '400':
          description: ‚ùå Validation error - Phone number format or uniqueness
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Permission denied - Staff access required
  /api/agents/phone-numbers/{id}/:
    get:
      operationId: agents_phone_numbers_retrieve
      description: Get detailed information about a specific phone number.
      summary: üîç Get phone number details
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this phone number.
        required: true
      tags:
      - Agent Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneNumber'
          description: ‚úÖ Phone number details retrieved
        '401':
          description: üö´ Authentication required
        '404':
          description: üö´ Phone number not found
    put:
      operationId: agents_phone_numbers_update
      description: Update phone number information (Staff only).
      summary: ‚úèÔ∏è Update phone number
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this phone number.
        required: true
      tags:
      - Agent Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneNumberRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneNumber'
          description: ‚úÖ Phone number updated successfully
        '400':
          description: ‚ùå Validation error
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Permission denied
        '404':
          description: üö´ Phone number not found
    patch:
      operationId: agents_phone_numbers_partial_update
      description: Update specific fields of a phone number (Staff only).
      summary: ‚úèÔ∏è Partially update phone number
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this phone number.
        required: true
      tags:
      - Agent Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPhoneNumberRequest'
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneNumber'
          description: ‚úÖ Phone number updated successfully
        '400':
          description: ‚ùå Validation error
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Permission denied
        '404':
          description: üö´ Phone number not found
    delete:
      operationId: agents_phone_numbers_destroy
      description: "\n        **‚ö†Ô∏è DESTRUCTIVE OPERATION - Permanently delete a phone\
        \ number.**\n        \n        **\U0001F510 Permission Requirements**: Superuser\
        \ only\n        \n        **\U0001F4A5 Impact**: Removes phone number and\
        \ all agent assignments\n        "
      summary: üóëÔ∏è Delete phone number
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this phone number.
        required: true
      tags:
      - Agent Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: ‚úÖ Phone number deleted successfully
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Permission denied - Superuser access required
        '404':
          description: üö´ Phone number not found
  /api/agents/phone-numbers/{id}/agents/:
    get:
      operationId: agents_phone_numbers_agents_retrieve
      description: "\n        Retrieve all agents that are assigned to this phone\
        \ number.\n        \n        **\U0001F510 Permission Requirements**: All authenticated\
        \ users\n        \n        **\U0001F4CA Assignment Information**:\n      \
        \  - All agents using this phone number\n        - Agent configuration and\
        \ workspace details\n        - Assignment relationships and status\n     \
        \   "
      summary: ü§ñ Get phone number agents
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this phone number.
        required: true
      tags:
      - Agent Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAgentList'
          description: ‚úÖ Phone number agents retrieved successfully
        '401':
          description: üö´ Authentication required
        '404':
          description: üö´ Phone number not found
  /api/leads/:
    get:
      operationId: leads_list
      description: "\n        Retrieve all leads in the system with filtering and\
        \ search capabilities.\n        \n        **\U0001F510 Permission Requirements**:\n\
        \        - **‚úÖ All Authenticated Users**: Can view all leads\n        - **‚úÖ\
        \ Staff/Superuser**: Same access level as regular users\n        \n      \
        \  **\U0001F4CA Shared Lead Database**:\n        - All users can view the\
        \ complete lead database\n        - Comprehensive customer information access\n\
        \        - Universal lead data for call operations\n        \n        **\U0001F3AF\
        \ Use Cases**:\n        - Lead browsing and selection\n        - Call planning\
        \ and preparation\n        - Customer data research\n        - Lead qualification\
        \ review\n        "
      summary: üìû List leads
      parameters:
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
      - in: query
        name: email
        schema:
          type: string
      - in: query
        name: has_metadata
        schema:
          type: boolean
      - in: query
        name: metadata_key
        schema:
          type: string
      - in: query
        name: metadata_value
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: phone
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: surname
        schema:
          type: string
      - in: query
        name: updated_after
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_before
        schema:
          type: string
          format: date-time
      - in: query
        name: workspace
        schema:
          type: string
          format: uuid
      tags:
      - Lead Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLeadList'
              examples:
                LeadsList:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - count: 150
                      results:
                      - id: lead-uuid-1
                        name: John
                        surname: Smith
                        email: john.smith@example.com
                        phone: '+1234567890'
                        meta_data:
                          industry: Technology
                          company: TechCorp
                        created_at: '2024-01-10T09:00:00Z'
                      - id: lead-uuid-2
                        name: Jane
                        surname: Doe
                        email: jane.doe@example.com
                        phone: '+1987654321'
                        meta_data:
                          industry: Healthcare
                          position: Manager
                        created_at: '2024-01-12T14:30:00Z'
                  summary: Available leads for calling
          description: ‚úÖ Successfully retrieved all leads
        '401':
          description: üö´ Authentication required - Please login to access leads
    post:
      operationId: leads_create
      description: "\n        Add a new lead to the system for call operations.\n\
        \        \n        **\U0001F510 Permission Requirements**:\n        - **‚úÖ\
        \ All Authenticated Users**: Can create new leads\n        - **‚úÖ Staff/Superuser**:\
        \ Same access level as regular users\n        \n        **\U0001F4DD Lead\
        \ Information**:\n        - Basic contact information (name, email, phone)\n\
        \        - Custom metadata for lead qualification\n        - Flexible data\
        \ structure for various industries\n        \n        **\U0001F4A1 Data Entry**:\n\
        \        - Supports individual lead creation\n        - Custom metadata fields\
        \ for lead qualification\n        - Validation for contact information format\n\
        \        "
      summary: ‚ûï Create new lead
      tags:
      - Lead Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeadCreateRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lead'
              examples:
                NewLeadCreated:
                  value:
                    id: new-lead-uuid
                    name: Michael
                    surname: Johnson
                    email: michael.johnson@company.com
                    phone: '+1555123456'
                    meta_data:
                      industry: Finance
                      budget: High
                    created_at: '2024-01-15T10:30:00Z'
                  summary: Successfully created lead
          description: ‚úÖ Lead created successfully
        '400':
          description: ‚ùå Validation error - Check contact information format
        '401':
          description: üö´ Authentication required
  /api/leads/bulk_create/:
    post:
      operationId: leads_bulk_create_create
      description: "\n        Create multiple leads in a single operation.\n     \
        \   \n        **\U0001F510 Permission Requirements**:\n        - **‚úÖ All Authenticated\
        \ Users**: Can perform bulk lead creation\n        - **‚úÖ Staff/Superuser**:\
        \ Same access level as regular users\n        \n        **\U0001F504 Bulk\
        \ Operation Benefits**:\n        - Efficient mass data import\n        - Batch\
        \ processing for large datasets\n        - Reduced API calls for lead import\n\
        \        \n        **\U0001F4DD Data Format**:\n        - Array of lead objects\
        \ with same structure as single create\n        - Validation applied to each\
        \ lead individually\n        - Partial success supported (some leads may fail)\n\
        \        \n        **\U0001F4A1 Use Cases**:\n        - CSV/Excel file imports\n\
        \        - CRM system migrations\n        - Lead list uploads\n        - Batch\
        \ data entry operations\n        "
      summary: üì¶ Bulk create leads
      tags:
      - Lead Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeadBulkCreateRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '201':
          description: ‚úÖ Bulk lead creation completed
        '400':
          description: ‚ùå Validation error - Check lead data format
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Permission denied
  /api/leads/stats/:
    get:
      operationId: leads_stats_retrieve
      description: "\n        Retrieve comprehensive statistics and analytics for\
        \ leads.\n        \n        **\U0001F510 Permission Requirements**:\n    \
        \    - **‚úÖ All Authenticated Users**: Can view lead statistics\n        \n\
        \        **\U0001F4CA Statistics Included**:\n        - Total lead count and\
        \ growth trends\n        - Lead source and qualification breakdown\n     \
        \   - Call conversion rates and outcomes\n        - Industry and demographic\
        \ analytics\n        \n        **\U0001F3AF Business Intelligence**:\n   \
        \     - Lead generation performance\n        - Conversion funnel analysis\n\
        \        - Campaign effectiveness metrics\n        - Agent performance correlation\n\
        \        "
      summary: üìà Get lead statistics
      tags:
      - Lead Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadStats'
              examples:
                LeadStatistics:
                  value:
                    total_leads: 1250
                    leads_this_month: 85
                    qualified_leads: 340
                    contacted_leads: 890
                    conversion_rate: 27.2
                    avg_calls_per_lead: 2.3
                    top_industries:
                    - Technology
                    - Healthcare
                    - Finance
                    lead_sources:
                      website: 450
                      referral: 300
                      social: 200
                  summary: Comprehensive lead analytics
          description: ‚úÖ Lead statistics retrieved successfully
        '401':
          description: üö´ Authentication required
  /api/leads/{id}/:
    get:
      operationId: leads_retrieve
      description: "\n        Retrieve detailed information about a specific lead.\n\
        \        \n        **\U0001F510 Permission Requirements**: All authenticated\
        \ users can view lead details\n        \n        **\U0001F4CA Detailed Information**:\n\
        \        - Complete lead profile and contact information\n        - Custom\
        \ metadata and qualification details\n        - Call history and interaction\
        \ records\n        "
      summary: üîç Get lead details
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this lead.
        required: true
      tags:
      - Lead Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lead'
          description: ‚úÖ Lead details retrieved successfully
        '401':
          description: üö´ Authentication required
        '404':
          description: üö´ Lead not found
    put:
      operationId: leads_update
      description: "\n        Update lead information (Staff only).\n        \n  \
        \      **\U0001F510 Permission Requirements**:\n        - **‚ùå Regular Users**:\
        \ Cannot modify existing leads\n        - **‚úÖ Staff Members**: Can update\
        \ any lead information\n        - **‚úÖ Superusers**: Can update any lead information\n\
        \        \n        **\U0001F4DD Data Modification**:\n        - Update contact\
        \ information and metadata\n        - Modify lead qualification details\n\
        \        - Correct data entry errors\n        \n        **‚ö†Ô∏è Data Quality**:\n\
        \        - Ensures data consistency across the system\n        - Maintains\
        \ lead database integrity\n        - Tracks modification history\n        "
      summary: ‚úèÔ∏è Update lead
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this lead.
        required: true
      tags:
      - Lead Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeadCreateRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lead'
          description: ‚úÖ Lead updated successfully
        '400':
          description: ‚ùå Validation error
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Permission denied - Staff access required for lead modification
        '404':
          description: üö´ Lead not found
    patch:
      operationId: leads_partial_update
      description: "\n        Update specific fields of a lead (Staff only).\n   \
        \     \n        **\U0001F510 Permission Requirements**: Staff access required\n\
        \        "
      summary: ‚úèÔ∏è Partially update lead
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this lead.
        required: true
      tags:
      - Lead Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLeadCreateRequest'
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lead'
          description: ‚úÖ Lead updated successfully
        '400':
          description: ‚ùå Validation error
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Permission denied
        '404':
          description: üö´ Lead not found
    delete:
      operationId: leads_destroy
      description: "\n        Delete a lead from the system (Staff only).\n      \
        \  \n        **\U0001F510 Permission Requirements**:\n        - **‚ùå Regular\
        \ Users**: Cannot delete leads\n        - **‚úÖ Staff Members**: Can delete\
        \ any lead\n        - **‚úÖ Superusers**: Can delete any lead\n        \n  \
        \      **‚ö†Ô∏è Data Impact**:\n        - Removes lead and associated call logs\n\
        \        - May affect reporting and analytics\n        - Consider data archival\
        \ for compliance\n        "
      summary: üóëÔ∏è Delete lead
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this lead.
        required: true
      tags:
      - Lead Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: ‚úÖ Lead deleted successfully
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Permission denied - Staff access required
        '404':
          description: üö´ Lead not found
  /api/leads/{id}/call_history/:
    get:
      operationId: leads_call_history_retrieve
      description: "\n        Retrieve all call logs associated with a specific lead.\n\
        \        \n        **\U0001F510 Permission Requirements**:\n        - **‚úÖ\
        \ All Authenticated Users**: Can view call history for any lead\n        \n\
        \        **\U0001F4CA Call Information**:\n        - Complete call history\
        \ and interactions\n        - Call outcomes and duration details\n       \
        \ - Agent and phone number information\n        - Call timestamps and directions\n\
        \        \n        **\U0001F3AF Use Cases**:\n        - Lead interaction review\n\
        \        - Call outcome analysis\n        - Agent performance tracking\n \
        \       - Customer communication history\n        "
      summary: üìû Get lead call history
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this lead.
        required: true
      tags:
      - Lead Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: ‚úÖ Lead call history retrieved successfully
        '401':
          description: üö´ Authentication required
        '404':
          description: üö´ Lead not found
  /api/leads/{id}/update_metadata/:
    patch:
      operationId: leads_update_metadata_partial_update
      description: "\n        Update custom metadata fields for a lead (Staff only).\n\
        \        \n        **\U0001F510 Permission Requirements**:\n        - **‚ùå\
        \ Regular Users**: Cannot modify lead metadata\n        - **‚úÖ Staff Members**:\
        \ Can update metadata for any lead\n        - **‚úÖ Superusers**: Can update\
        \ metadata for any lead\n        \n        **\U0001F4DD Metadata Management**:\n\
        \        - Update custom fields and qualifications\n        - Add industry-specific\
        \ information\n        - Modify lead scoring and categorization\n        \n\
        \        **\U0001F3AF Use Cases**:\n        - Lead qualification updates\n\
        \        - Campaign tag additions\n        - Data enrichment operations\n\
        \        - Quality scoring modifications\n        "
      summary: üè∑Ô∏è Update lead metadata
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this lead.
        required: true
      tags:
      - Lead Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLeadMetaDataUpdateRequest'
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lead'
              examples:
                MetadataUpdated:
                  value:
                    id: lead-uuid
                    name: John Smith
                    meta_data:
                      industry: Technology
                      company_size: Enterprise
                      lead_score: 85
                      campaign: Q1-2024-Tech
                      qualification_status: qualified
                    updated_at: '2024-01-15T11:00:00Z'
                  summary: Lead metadata successfully modified
          description: ‚úÖ Lead metadata updated successfully
        '400':
          description: ‚ùå Validation error
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Permission denied - Staff access required
        '404':
          description: üö´ Lead not found
  /api/calls/call-logs/:
    get:
      operationId: calls_call_logs_list
      description: "\n        Retrieve all call logs in the system with filtering\
        \ and search capabilities.\n        \n        **\U0001F510 Permission Requirements**:\n\
        \        - **‚úÖ All Authenticated Users**: Can view all call logs\n       \
        \ - **‚úÖ Staff/Superuser**: Same access level as regular users\n        \n\
        \        **\U0001F4CA Universal Call Access**:\n        - All users can view\
        \ complete call history\n        - Comprehensive call data for analysis\n\
        \        - Historical call information for all leads\n        \n        **\U0001F3AF\
        \ Use Cases**:\n        - Call history review and analysis\n        - Performance\
        \ monitoring and reporting\n        - Lead interaction tracking\n        -\
        \ Agent activity oversight\n        \n        **\U0001F50D New Filtering Options**:\n\
        \        - Filter by agent and workspace\n        - Filter by call status\
        \ (terminvereinbart, nicht erreicht, etc.)\n        - Filter by appointment\
        \ dates\n        - Search includes agent workspace names\n        "
      summary: üì± List call logs
      parameters:
      - in: query
        name: agent
        schema:
          type: string
          format: uuid
      - in: query
        name: agent__workspace
        schema:
          type: string
          format: uuid
      - in: query
        name: agent__workspace__workspace_name
        schema:
          type: string
      - in: query
        name: appointment_date
        schema:
          type: string
          format: date
      - in: query
        name: appointment_datetime_after
        schema:
          type: string
          format: date-time
      - in: query
        name: appointment_datetime_before
        schema:
          type: string
          format: date-time
      - in: query
        name: date
        schema:
          type: string
          format: date
      - in: query
        name: direction
        schema:
          type: string
          enum:
          - inbound
          - outbound
        description: |-
          Call direction

          * `inbound` - Inbound
          * `outbound` - Outbound
      - in: query
        name: disconnection_reason
        schema:
          type: string
          nullable: true
          enum:
          - agent_hangup
          - call_transfer
          - concurrency_limit_reached
          - dial_busy
          - dial_failed
          - dial_no_answer
          - error_asr
          - error_hotcalls
          - error_llm_websocket_corrupt_payload
          - error_llm_websocket_lost_connection
          - error_llm_websocket_open
          - error_llm_websocket_runtime
          - error_no_audio_received
          - error_unknown
          - error_user_not_joined
          - inactivity
          - invalid_destination
          - marked_as_spam
          - max_duration_reached
          - no_valid_payment
          - preflight_call_log_failed
          - registered_call_timeout
          - scam_detected
          - sip_routing_error
          - telephony_provider_permission_denied
          - telephony_provider_unavailable
          - user_declined
          - user_hangup
          - voicemail_reached
        description: |-
          Reason for call disconnection

          * `user_hangup` - User Hangup
          * `agent_hangup` - Agent Hangup
          * `call_transfer` - Call Transfer
          * `voicemail_reached` - Voicemail Reached
          * `inactivity` - Inactivity Timeout
          * `max_duration_reached` - Maximum Duration Reached
          * `dial_busy` - Dial Busy
          * `dial_failed` - Dial Failed
          * `dial_no_answer` - No Answer
          * `invalid_destination` - Invalid Destination
          * `telephony_provider_permission_denied` - Telephony Provider Permission Denied
          * `telephony_provider_unavailable` - Telephony Provider Unavailable
          * `sip_routing_error` - SIP Routing Error
          * `marked_as_spam` - Marked as Spam
          * `user_declined` - User Declined
          * `concurrency_limit_reached` - Concurrency Limit Reached
          * `no_valid_payment` - No Valid Payment
          * `scam_detected` - Scam Detected
          * `error_llm_websocket_open` - LLM Websocket Open Error
          * `error_llm_websocket_lost_connection` - LLM Websocket Lost Connection
          * `error_llm_websocket_runtime` - LLM Websocket Runtime Error
          * `error_llm_websocket_corrupt_payload` - LLM Websocket Corrupt Payload
          * `error_no_audio_received` - No Audio Received
          * `error_asr` - ASR Error
          * `error_hotcalls` - HotCalls Error
          * `error_unknown` - Unknown Error
          * `error_user_not_joined` - User Not Joined
          * `registered_call_timeout` - Registered Call Timeout
          * `preflight_call_log_failed` - Preflight Call Log Failed
      - in: query
        name: duration_max
        schema:
          type: integer
      - in: query
        name: duration_min
        schema:
          type: integer
      - in: query
        name: from_number
        schema:
          type: string
      - in: query
        name: has_appointment
        schema:
          type: boolean
      - in: query
        name: lead
        schema:
          type: string
          format: uuid
      - in: query
        name: lead__email
        schema:
          type: string
      - in: query
        name: lead__name
        schema:
          type: string
      - in: query
        name: lead__phone
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: successful
        schema:
          type: boolean
      - in: query
        name: timestamp_after
        schema:
          type: string
          format: date-time
      - in: query
        name: timestamp_before
        schema:
          type: string
          format: date-time
      - in: query
        name: to_number
        schema:
          type: string
      tags:
      - Call Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCallLogList'
              examples:
                CallLogsList:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - count: 500
                      results:
                      - id: call-uuid-1
                        lead_name: John Smith
                        agent: agent-uuid-1
                        agent_workspace_name: Sales Team
                        timestamp: '2024-01-15T09:30:00Z'
                        direction: outbound
                        duration: 180
                        status: terminvereinbart
                        appointment_datetime: '2024-01-20T14:00:00Z'
                        from_number: '+1234567890'
                        to_number: '+1987654321'
                        disconnection_reason: completed
                  summary: Recent call activity with new fields
          description: ‚úÖ Successfully retrieved all call logs
        '401':
          description: üö´ Authentication required - Please login to access call logs
    post:
      operationId: calls_call_logs_create
      description: "\n        Create a new call log entry.\n        \n        **\U0001F510\
        \ Authentication**:\n        - **Temporary:** No authentication required for\
        \ POST\n        - **TODO:** Will add IP-based or shared secret authentication\n\
        \        \n        **\U0001F4F1 System Integration**:\n        - Designed\
        \ for external call systems\n        - Automatic call log creation from agents\n\
        \        - Currently open for integration purposes\n        \n        **\U0001F4DD\
        \ Required Information**:\n        - `call_task_id` (required, write-only):\
        \ The originating CallTask ID\n        - Other fields are inferred from the\
        \ CallTask by default:\n          - `agent`, `lead` from the CallTask\n  \
        \        - `to_number` from the CallTask phone\n          - `from_number`\
        \ from the Agent's assigned phone number\n          - `direction` defaults\
        \ to `outbound`\n        - Optional overrides:\n          - `direction`, `appointment_datetime`,\
        \ `disconnection_reason`\n        - Note: `duration` is computed automatically\
        \ from the CallTask creation time\n        \n        "
      summary: ‚ûï Create call log
      tags:
      - Call Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallLogCreateRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallLog'
          description: ‚úÖ Call log created successfully
        '400':
          description: ‚ùå Validation error - Check call log data
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Permission denied - Staff access required for call log creation
  /api/calls/call-logs/{id}/:
    get:
      operationId: calls_call_logs_retrieve
      description: "\n        Retrieve detailed information about a specific call\
        \ log.\n        \n        **\U0001F510 Permission Requirements**: All authenticated\
        \ users can view call details\n        \n        **\U0001F4CA Detailed Information**:\n\
        \        - Complete call record with all metadata\n        - Lead information\
        \ and context\n        - Agent and workspace information\n        - Call quality\
        \ and outcome details\n        - Appointment scheduling information\n    \
        \    "
      summary: üîç Get call log details
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this call log.
        required: true
      tags:
      - Call Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallLog'
          description: ‚úÖ Call log details retrieved successfully
        '401':
          description: üö´ Authentication required
        '404':
          description: üö´ Call log not found
    put:
      operationId: calls_call_logs_update
      description: "\n        Update call log information (Staff only).\n        \n\
        \        **\U0001F510 Permission Requirements**:\n        - **‚ùå Regular Users**:\
        \ Cannot modify call logs\n        - **‚úÖ Staff Members**: Can update call\
        \ log details\n        - **‚úÖ Superusers**: Can update call log details\n \
        \       \n        **\U0001F4DD Data Correction**:\n        - Fix incorrect\
        \ call data\n        - Update missing information\n        - Correct system\
        \ integration errors\n        - Update call status and appointments\n    \
        \    \n        **‚ö†Ô∏è Data Integrity**:\n        - Maintains call history accuracy\n\
        \        - Ensures reporting consistency\n        - Tracks modification history\n\
        \        - Validates appointment logic\n        "
      summary: ‚úèÔ∏è Update call log
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this call log.
        required: true
      tags:
      - Call Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallLogRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallLog'
          description: ‚úÖ Call log updated successfully
        '400':
          description: ‚ùå Validation error
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Permission denied - Staff access required
        '404':
          description: üö´ Call log not found
    patch:
      operationId: calls_call_logs_partial_update
      description: "\n        Update specific fields of a call log (Staff only).\n\
        \        \n        **\U0001F510 Permission Requirements**: Staff access required\n\
        \        "
      summary: ‚úèÔ∏è Partially update call log
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this call log.
        required: true
      tags:
      - Call Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCallLogRequest'
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallLog'
          description: ‚úÖ Call log updated successfully
        '400':
          description: ‚ùå Validation error
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Permission denied
        '404':
          description: üö´ Call log not found
    delete:
      operationId: calls_call_logs_destroy
      description: "\n        **‚ö†Ô∏è DESTRUCTIVE OPERATION - Permanently delete a call\
        \ log.**\n        \n        **\U0001F510 Permission Requirements**:\n    \
        \    - **‚ùå Regular Users**: Cannot delete call logs\n        - **‚ùå Staff Members**:\
        \ Cannot delete call logs\n        - **‚úÖ Superuser ONLY**: Can delete call\
        \ logs\n        \n        **\U0001F4A5 Data Impact**:\n        - Removes call\
        \ record permanently\n        - Affects reporting and analytics\n        -\
        \ May impact compliance requirements\n        \n        **\U0001F6E1Ô∏è Compliance\
        \ Considerations**:\n        - Check legal requirements for call record retention\n\
        \        - Ensure proper data backup before deletion\n        - Consider data\
        \ archival instead of deletion\n        "
      summary: üóëÔ∏è Delete call log
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this call log.
        required: true
      tags:
      - Call Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: ‚úÖ Call log deleted successfully
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Permission denied - Only superusers can delete call logs
        '404':
          description: üö´ Call log not found
  /api/calls/call-tasks/:
    get:
      operationId: calls_call_tasks_list
      description: "\n        Retrieve all call tasks with filtering and search capabilities.\n\
        \        \n        **\U0001F510 Permission Requirements**:\n        - **‚úÖ\
        \ All Authenticated Users**: Can view call tasks from their workspaces\n \
        \       - **‚úÖ Superusers**: Can view all call tasks\n        \n        **\U0001F4CA\
        \ Call Task Management**:\n        - View scheduled calls and their status\n\
        \        - Track retry attempts and progress\n        - Monitor call queue\
        \ and execution\n        "
      summary: üìã List call tasks
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Call Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCallTaskList'
          description: ‚úÖ Successfully retrieved call tasks
        '401':
          description: üö´ Authentication required
    post:
      operationId: calls_call_tasks_create
      description: "\n        Create a new call task for scheduling.\n        \n \
        \       **\U0001F510 Permission Requirements**:\n        - **‚úÖ All Authenticated\
        \ Users**: Can create tasks for their workspaces\n        - **‚úÖ Superusers**:\
        \ Can create tasks for any workspace\n        "
      summary: ‚ûï Create call task
      tags:
      - Call Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallTaskRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallTask'
          description: ‚úÖ Call task created successfully
        '400':
          description: ‚ùå Validation error
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Permission denied
  /api/calls/call-tasks/{id}/:
    get:
      operationId: calls_call_tasks_retrieve
      description: ViewSet for managing call tasks
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - calls
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallTask'
          description: ''
    put:
      operationId: calls_call_tasks_update
      description: ViewSet for managing call tasks
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - calls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallTaskRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallTask'
          description: ''
    patch:
      operationId: calls_call_tasks_partial_update
      description: ViewSet for managing call tasks
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - calls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCallTaskRequest'
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallTask'
          description: ''
    delete:
      operationId: calls_call_tasks_destroy
      description: ViewSet for managing call tasks
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - calls
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: No response body
  /api/calls/call-tasks/{id}/trigger/:
    post:
      operationId: calls_call_tasks_trigger_create
      description: "\n        Manually trigger a call for a specific CallTask.\n \
        \       \n        **\U0001F510 Permission Requirements**:\n        - **\U0001F534\
        \ Superuser Only**: Only superusers can trigger calls manually\n        \n\
        \        **\U0001F4CB Prerequisites**:\n        - CallTask must exist\n  \
        \      - CallTask status should be SCHEDULED or RETRY\n        \n        **\U0001F3AF\
        \ What happens**:\n        - Initiates the call immediately\n        - Updates\
        \ CallTask status to IN_PROGRESS\n        - Call will be processed by the\
        \ call system\n        "
      summary: üöÄ Trigger a call manually
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Call Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallTaskTrigger'
          description: Call triggered successfully
        '400':
          description: Invalid task status
        '403':
          description: Superuser required
        '404':
          description: CallTask not found
  /api/calls/make_test_call/:
    post:
      operationId: calls_make_test_call_create
      description: "\n    Create a test call task that will call the authenticated\
        \ user's phone number.\n    \n    **\U0001F510 Permission Requirements**:\n\
        \    - **‚úÖ All Authenticated Users**: Can make test calls with their agents\n\
        \    \n    **\U0001F4F1 Requirements**:\n    - User must have a phone number\
        \ in their profile\n    - Agent must belong to user's workspace (unless superuser)\n\
        \    \n    **\U0001F3AF What happens**:\n    - Creates a CallTask entry with\
        \ user's phone number\n    - Sets status to SCHEDULED for immediate execution\n\
        \    - Call will be processed by Celery task system\n    "
      summary: üìû Make test call
      tags:
      - Call Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCallRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '201':
          description: ‚úÖ Test call task created successfully
        '400':
          description: ‚ùå Validation error or missing phone number
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ No access to specified agent
  /api/calls/end-of-call/:
    post:
      operationId: calls_end_of_call_create
      description: Create a CallLog at end of call and trigger CallTask feedback.
        Currently no authentication required (temporary).
      summary: End of call (agent ‚Üí server)
      tags:
      - Call Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallLogCreateRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallLog'
          description: Created
  /api/funnels/lead-funnels/:
    get:
      operationId: funnels_lead_funnels_list
      description: Get all lead funnels for your workspaces
      summary: List Lead Funnels
      parameters:
      - in: query
        name: has_agent
        schema:
          type: boolean
      - in: query
        name: has_meta_form
        schema:
          type: boolean
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: workspace
        schema:
          type: string
          format: uuid
      tags:
      - Lead Funnels
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLeadFunnelList'
          description: List of lead funnels
    post:
      operationId: funnels_lead_funnels_create
      description: Create a new lead funnel
      summary: Create Lead Funnel
      tags:
      - Lead Funnels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeadFunnelCreateRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadFunnel'
          description: Created lead funnel
  /api/funnels/lead-funnels/{id}/:
    get:
      operationId: funnels_lead_funnels_retrieve
      description: |-
        ViewSet for managing Lead Funnels

        Lead Funnels act as the bridge between lead sources (like Meta Lead Forms)
        and Agents. Each funnel can be assigned to one agent, establishing the
        routing for incoming leads.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this lead funnel.
        required: true
      tags:
      - Lead Funnels
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadFunnel'
          description: ''
    put:
      operationId: funnels_lead_funnels_update
      description: Update a lead funnel's name or active status
      summary: Update Lead Funnel
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this lead funnel.
        required: true
      tags:
      - Lead Funnels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeadFunnelUpdateRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadFunnel'
          description: Updated lead funnel
    patch:
      operationId: funnels_lead_funnels_partial_update
      description: |-
        ViewSet for managing Lead Funnels

        Lead Funnels act as the bridge between lead sources (like Meta Lead Forms)
        and Agents. Each funnel can be assigned to one agent, establishing the
        routing for incoming leads.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this lead funnel.
        required: true
      tags:
      - Lead Funnels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLeadFunnelUpdateRequest'
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadFunnelUpdate'
          description: ''
    delete:
      operationId: funnels_lead_funnels_destroy
      description: |-
        ViewSet for managing Lead Funnels

        Lead Funnels act as the bridge between lead sources (like Meta Lead Forms)
        and Agents. Each funnel can be assigned to one agent, establishing the
        routing for incoming leads.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this lead funnel.
        required: true
      tags:
      - Lead Funnels
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: No response body
  /api/funnels/lead-funnels/{id}/assign_agent/:
    post:
      operationId: funnels_lead_funnels_assign_agent_create
      description: Assign an agent to handle leads from this funnel
      summary: Assign Agent to Funnel
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this lead funnel.
        required: true
      tags:
      - Lead Funnels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignAgentRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadFunnel'
          description: Funnel with assigned agent
        '400':
          description: Invalid agent or already assigned
  /api/funnels/lead-funnels/{id}/stats/:
    get:
      operationId: funnels_lead_funnels_stats_retrieve
      description: Get statistics for a specific funnel
      summary: Get Funnel Statistics
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this lead funnel.
        required: true
      tags:
      - Lead Funnels
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: Funnel statistics
  /api/funnels/lead-funnels/{id}/unassign_agent/:
    post:
      operationId: funnels_lead_funnels_unassign_agent_create
      description: Remove the agent assignment from this funnel
      summary: Unassign Agent from Funnel
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this lead funnel.
        required: true
      tags:
      - Lead Funnels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnassignAgentRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadFunnel'
          description: Funnel with agent unassigned
        '400':
          description: No agent assigned
  /api/funnels/lead-funnels/{id}/variables/:
    get:
      operationId: funnels_lead_funnels_variables_retrieve
      description: Get available variables for a specific funnel (core + custom fields
        from recent leads)
      summary: Get Funnel Variables
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this lead funnel.
        required: true
      tags:
      - Lead Funnels
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: List of available variables with their labels and types
  /api/funnels/lead-stats/:
    get:
      operationId: funnels_lead_stats_list
      description: "\n        Get lead processing statistics for your workspaces.\n\
        \        \n        Shows how many leads were processed vs ignored, with reasons.\n\
        \        \n        **\U0001F510 Permission Requirements**:\n        - User\
        \ must be authenticated and email verified\n        - Only shows stats for\
        \ user's workspaces\n        \n        **\U0001F4C8 Metrics Included**:\n\
        \        - Total leads received\n        - Leads processed with agent\n  \
        \      - Leads ignored (various reasons)\n        - Processing rate percentage\n\
        \        "
      summary: üìä List lead processing statistics
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - funnels
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLeadProcessingStatsList'
          description: ‚úÖ Successfully retrieved lead processing statistics
  /api/funnels/lead-stats/summary/:
    get:
      operationId: funnels_lead_stats_summary_retrieve
      description: Get summary statistics across all workspaces
      tags:
      - funnels
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadProcessingStats'
          description: ''
  /api/funnels/lead-stats/{id}/:
    get:
      operationId: funnels_lead_stats_retrieve
      description: |-
        ViewSet for viewing lead processing statistics.

        Provides read-only access to lead processing metrics.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - funnels
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadProcessingStats'
          description: ''
  /api/calendars/:
    get:
      operationId: calendars_list
      description: "\n        Retrieve all calendars across providers in your workspaces.\n\
        \        \n        **\U0001F510 Permission Requirements**:\n        - **Regular\
        \ Users**: Can only see calendars in their workspaces\n        - **Superusers**:\
        \ Can view all calendars in the system\n        \n        **\U0001F4CA Providers\
        \ Supported**:\n        - Google Calendar\n        - Outlook Calendar\n  \
        \      \n        **\U0001F3AF Use Cases**:\n        - Calendar overview across\
        \ all providers\n        - Workspace calendar inventory\n        - Integration\
        \ status monitoring\n        "
      summary: üìÖ List calendars
      parameters:
      - in: query
        name: active
        schema:
          type: boolean
      - in: query
        name: name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: provider
        schema:
          type: string
          enum:
          - google
          - outlook
        description: |-
          * `google` - Google
          * `outlook` - Outlook
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: workspace
        schema:
          type: string
          format: uuid
      tags:
      - Calendar Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCalendarList'
          description: ‚úÖ Successfully retrieved calendars
        '401':
          description: üö´ Authentication required
    post:
      operationId: calendars_create
      description: "\n        Create a new calendar entry for a workspace.\n     \
        \   \n        **Note**: This endpoint creates the generic calendar record\
        \ only.\n        To connect to Google or Outlook, use the provider-specific\
        \ OAuth endpoints:\n        - Google: `/api/google-calendar/auth/authorize`\n\
        \        - Outlook: `/api/outlook-calendar/auth/authorize`\n        "
      summary: ‚ûï Create calendar
      tags:
      - Calendar Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalendarRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calendar'
          description: ‚úÖ Calendar created successfully
        '400':
          description: ‚ùå Invalid data provided
  /api/calendars/{id}/:
    get:
      operationId: calendars_retrieve
      description: Retrieve detailed information about a specific calendar
      summary: üìÑ Get calendar details
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this calendar.
        required: true
      tags:
      - Calendar Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calendar'
          description: ‚úÖ Calendar details retrieved
        '404':
          description: ‚ùå Calendar not found
    put:
      operationId: calendars_update
      description: Update calendar information (name, active status)
      summary: ‚úèÔ∏è Update calendar
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this calendar.
        required: true
      tags:
      - Calendar Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalendarRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calendar'
          description: ‚úÖ Calendar updated successfully
        '404':
          description: ‚ùå Calendar not found
    patch:
      operationId: calendars_partial_update
      description: Update specific fields of a calendar
      summary: üìù Partially update calendar
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this calendar.
        required: true
      tags:
      - Calendar Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCalendarRequest'
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calendar'
          description: ‚úÖ Calendar updated successfully
        '404':
          description: ‚ùå Calendar not found
    delete:
      operationId: calendars_destroy
      description: "\n        Delete a calendar and its provider-specific data.\n\
        \        \n        **‚ö†Ô∏è Warning**: This will also delete:\n        - Google\
        \ Calendar connection (if Google)\n        - Outlook Calendar connection (if\
        \ Outlook)\n        - Any associated data\n        "
      summary: üóëÔ∏è Delete calendar
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this calendar.
        required: true
      tags:
      - Calendar Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: ‚úÖ Calendar deleted successfully
        '404':
          description: ‚ùå Calendar not found
  /api/google-calendar/auth/authorize/:
    post:
      operationId: google_calendar_auth_authorize_create
      description: "\n        Generate Google OAuth authorization URL to start the\
        \ OAuth flow.\n        \n        **Process Flow:**\n        1. Frontend calls\
        \ this endpoint\n        2. Backend generates Google OAuth URL with required\
        \ scopes\n        3. Frontend redirects user to the returned URL\n       \
        \ 4. User authorizes on Google\n        5. Google redirects back to callback\
        \ endpoint\n        "
      summary: üîó Generate Google OAuth Authorization URL
      tags:
      - Google Calendar
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleAuthUrlResponse'
          description: ‚úÖ Authorization URL generated successfully
        '401':
          description: üö´ Authentication required
        '500':
          description: üí• Server error generating URL
  /api/google-calendar/auth/callback/:
    get:
      operationId: google_calendar_auth_callback_retrieve
      description: "\n        Handle Google OAuth callback and create calendar connection.\n\
        \        \n        **Process Flow:**\n        1. Receives authorization code\
        \ from Google\n        2. Exchanges code for access & refresh tokens\n   \
        \     3. Creates GoogleCalendar entry with tokens\n        4. Syncs user's\
        \ calendars from Google\n        5. Returns success with calendar list\n \
        \       "
      summary: üîó Google OAuth Callback
      tags:
      - Google Calendar
      security:
      - tokenAuth: []
      - TokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleOAuthCallback'
          description: ‚úÖ OAuth successful, calendars synced
        '400':
          description: ‚ùå OAuth failed or missing code
        '401':
          description: üö´ Invalid state parameter
        '500':
          description: üí• Server error during OAuth
  /api/google-calendar/auth/disconnect/:
    post:
      operationId: google_calendar_auth_disconnect_create
      description: "\n        Disconnect Google Calendar and revoke OAuth tokens.\n\
        \        \n        **Process:**\n        1. Revokes tokens with Google\n \
        \       2. Deletes GoogleCalendar entry\n        3. Deletes associated Calendar\
        \ entry\n        "
      summary: üîó Disconnect Google Calendar
      tags:
      - Google Calendar
      requestBody:
        content:
          type:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          properties:
            schema:
              calendar_id:
                type: string
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: ‚úÖ Calendar disconnected successfully
        '404':
          description: ‚ùå Calendar not found
        '500':
          description: üí• Error disconnecting calendar
  /api/google-calendar/calendars/:
    get:
      operationId: google_calendar_calendars_list
      description: Retrieve all Google calendars in your workspaces
      summary: üìÖ List Google Calendars
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Google Calendar
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGoogleCalendarList'
          description: ''
  /api/google-calendar/calendars/sync/:
    post:
      operationId: google_calendar_calendars_sync_create
      description: "\n        Force sync calendars from Google for a specific connection.\n\
        \        \n        **Process:**\n        1. Fetches latest calendar list from\
        \ Google\n        2. Updates calendar metadata\n        3. Returns updated\
        \ calendar list\n        "
      summary: üîÑ Sync Google Calendars
      tags:
      - Google Calendar
      requestBody:
        content:
          type:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          properties:
            schema:
              google_calendar_id:
                type: string
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: ‚úÖ Calendars synced successfully
        '404':
          description: ‚ùå Google calendar not found
        '500':
          description: üí• Sync failed
  /api/google-calendar/calendars/{id}/:
    get:
      operationId: google_calendar_calendars_retrieve
      description: Get details of a specific Google calendar
      summary: üìÑ Get Google Calendar details
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Google Calendar
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCalendar'
          description: ''
    delete:
      operationId: google_calendar_calendars_destroy
      description: Delete a specific Google calendar connection
      summary: üóëÔ∏è Delete Google Calendar
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Google Calendar
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: ‚úÖ Calendar deleted successfully
        '404':
          description: ‚ùå Calendar not found
  /api/google-calendar/sub-accounts/:
    get:
      operationId: google_calendar_sub_accounts_list
      description: List all sub-accounts (shared/delegated calendars) for Google Calendar
        connections
      summary: üìã List Google Sub-Accounts
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Google Calendar
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGoogleSubAccountList'
          description: ''
    post:
      operationId: google_calendar_sub_accounts_create
      description: Add a new sub-account (shared/delegated calendar) to a Google Calendar
        connection
      summary: ‚ûï Create Google Sub-Account
      tags:
      - Google Calendar
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleSubAccountRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleSubAccount'
          description: ''
  /api/google-calendar/sub-accounts/by-calendar/{google_calendar_id}/:
    get:
      operationId: google_calendar_sub_accounts_by_calendar_retrieve
      description: Get all sub-accounts for a specific Google calendar
      parameters:
      - in: path
        name: google_calendar_id
        schema:
          type: string
        required: true
      tags:
      - google-calendar
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleSubAccount'
          description: ''
  /api/google-calendar/sub-accounts/{id}/:
    get:
      operationId: google_calendar_sub_accounts_retrieve
      description: Retrieve details of a specific Google sub-account
      summary: üîç Get Google Sub-Account
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Google Calendar
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleSubAccount'
          description: ''
    put:
      operationId: google_calendar_sub_accounts_update
      description: Update a Google sub-account configuration
      summary: ‚úèÔ∏è Update Google Sub-Account
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Google Calendar
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleSubAccountRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleSubAccount'
          description: ''
    patch:
      operationId: google_calendar_sub_accounts_partial_update
      description: Partially update a Google sub-account configuration
      summary: üìù Partially Update Google Sub-Account
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Google Calendar
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGoogleSubAccountRequest'
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleSubAccount'
          description: ''
    delete:
      operationId: google_calendar_sub_accounts_destroy
      description: Remove a Google sub-account (shared/delegated calendar)
      summary: üóëÔ∏è Delete Google Sub-Account
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Google Calendar
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: No response body
  /api/google-calendar/sub-accounts/{id}/toggle-active/:
    post:
      operationId: google_calendar_sub_accounts_toggle_active_create
      description: Toggle the active status of a sub-account
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - google-calendar
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleSubAccountRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleSubAccount'
          description: ''
  /api/outlook-calendar/auth/authorize/:
    post:
      operationId: outlook_calendar_auth_authorize_create
      description: "\n        Generate Microsoft OAuth authorization URL to start\
        \ the OAuth flow.\n        \n        **Process Flow:**\n        1. Frontend\
        \ calls this endpoint\n        2. Backend generates Microsoft OAuth URL with\
        \ required scopes\n        3. Frontend redirects user to the returned URL\n\
        \        4. User authorizes on Microsoft\n        5. Microsoft redirects back\
        \ to callback endpoint\n        "
      summary: üîó Generate Outlook OAuth Authorization URL
      tags:
      - Outlook Calendar
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutlookAuthUrlResponse'
          description: ‚úÖ Authorization URL generated successfully
        '401':
          description: üö´ Authentication required
        '500':
          description: üí• Server error generating URL
  /api/outlook-calendar/auth/callback/:
    get:
      operationId: outlook_calendar_auth_callback_retrieve
      description: "\n        Handle the OAuth callback from Microsoft after user\
        \ authorization.\n        This endpoint processes the authorization code and\
        \ exchanges it for tokens.\n        "
      summary: üîí Handle Outlook OAuth Callback
      tags:
      - Outlook Calendar
      security:
      - tokenAuth: []
      - TokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutlookOAuthCallback'
          description: ‚úÖ OAuth callback processed successfully
        '400':
          description: ‚ùå Invalid callback parameters
        '500':
          description: üí• Token exchange failed
  /api/outlook-calendar/calendars/:
    get:
      operationId: outlook_calendar_calendars_list
      description: List all Outlook calendar connections for the user's workspaces
      summary: üìã List Outlook Calendars
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Outlook Calendar
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOutlookCalendarList'
          description: ''
    post:
      operationId: outlook_calendar_calendars_create
      description: |-
        ViewSet for managing Outlook calendar connections.

        This viewset handles CRUD operations for Outlook calendars that have been
        connected via OAuth. It does not handle the OAuth flow itself - that's
        handled by OutlookCalendarAuthViewSet.
      tags:
      - outlook-calendar
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutlookCalendarRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutlookCalendar'
          description: ''
  /api/outlook-calendar/calendars/sync/:
    post:
      operationId: outlook_calendar_calendars_sync_create
      description: "\n        Force sync calendars from Outlook.\n        This will\
        \ fetch the latest calendar data from Microsoft Graph API.\n        "
      summary: üîÑ Sync Outlook Calendars
      tags:
      - Outlook Calendar
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutlookCalendar'
          description: ‚úÖ Sync completed successfully
        '400':
          description: ‚ùå Invalid request
        '404':
          description: ‚ùå Outlook calendar not found
        '500':
          description: üí• Sync failed
  /api/outlook-calendar/calendars/{id}/:
    get:
      operationId: outlook_calendar_calendars_retrieve
      description: Retrieve details of a specific Outlook calendar connection
      summary: üîç Get Outlook Calendar
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Outlook Calendar
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutlookCalendar'
          description: ''
    put:
      operationId: outlook_calendar_calendars_update
      description: Update an Outlook calendar connection
      summary: ‚úèÔ∏è Update Outlook Calendar
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Outlook Calendar
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutlookCalendarRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutlookCalendar'
          description: ''
    patch:
      operationId: outlook_calendar_calendars_partial_update
      description: Partially update an Outlook calendar connection
      summary: üìù Partially Update Outlook Calendar
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Outlook Calendar
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOutlookCalendarRequest'
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutlookCalendar'
          description: ''
    delete:
      operationId: outlook_calendar_calendars_destroy
      description: Delete an Outlook calendar connection and revoke access
      summary: üóëÔ∏è Delete Outlook Calendar
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Outlook Calendar
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: ‚úÖ Calendar deleted successfully
        '404':
          description: ‚ùå Calendar not found
  /api/outlook-calendar/sub-accounts/:
    get:
      operationId: outlook_calendar_sub_accounts_list
      description: List all sub-accounts (shared/delegated mailboxes) for Outlook
        Calendar connections
      summary: üìã List Outlook Sub-Accounts
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Outlook Calendar
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOutlookSubAccountList'
          description: ''
    post:
      operationId: outlook_calendar_sub_accounts_create
      description: Add a new sub-account (shared/delegated mailbox) to an Outlook
        Calendar connection
      summary: ‚ûï Create Outlook Sub-Account
      tags:
      - Outlook Calendar
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutlookSubAccountRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutlookSubAccount'
          description: ''
  /api/outlook-calendar/sub-accounts/by-calendar/{outlook_calendar_id}/:
    get:
      operationId: outlook_calendar_sub_accounts_by_calendar_retrieve
      description: Get all sub-accounts for a specific Outlook calendar
      parameters:
      - in: path
        name: outlook_calendar_id
        schema:
          type: string
        required: true
      tags:
      - outlook-calendar
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutlookSubAccount'
          description: ''
  /api/outlook-calendar/sub-accounts/{id}/:
    get:
      operationId: outlook_calendar_sub_accounts_retrieve
      description: Retrieve details of a specific Outlook sub-account
      summary: üîç Get Outlook Sub-Account
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Outlook Calendar
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutlookSubAccount'
          description: ''
    put:
      operationId: outlook_calendar_sub_accounts_update
      description: Update an Outlook sub-account configuration
      summary: ‚úèÔ∏è Update Outlook Sub-Account
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Outlook Calendar
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutlookSubAccountRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutlookSubAccount'
          description: ''
    patch:
      operationId: outlook_calendar_sub_accounts_partial_update
      description: Partially update an Outlook sub-account configuration
      summary: üìù Partially Update Outlook Sub-Account
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Outlook Calendar
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOutlookSubAccountRequest'
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutlookSubAccount'
          description: ''
    delete:
      operationId: outlook_calendar_sub_accounts_destroy
      description: Remove an Outlook sub-account (shared/delegated mailbox)
      summary: üóëÔ∏è Delete Outlook Sub-Account
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Outlook Calendar
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: No response body
  /api/outlook-calendar/sub-accounts/{id}/toggle-active/:
    post:
      operationId: outlook_calendar_sub_accounts_toggle_active_create
      description: Toggle the active status of a sub-account
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - outlook-calendar
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutlookSubAccountRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutlookSubAccount'
          description: ''
  /api/communication/send-document/:
    post:
      operationId: communication_send_document_create
      description: Send the configured agent PDF to the lead's email using the workspace
        SMTP settings.
      summary: üìÑ Send agent document to lead
      tags:
      - Communication
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: ‚úÖ Document sent
  /api/voices/voices/:
    get:
      operationId: voices_voices_list
      description: "\n        Retrieve all voice configurations in the system with\
        \ filtering and search capabilities.\n        \n        **\U0001F510 Permission\
        \ Requirements**:\n        - **‚ùå Regular Users**: No access to voice management\n\
        \        - **‚úÖ Staff Members**: Can view all voice configurations  \n    \
        \    - **‚úÖ Superusers**: Can view all voice configurations\n        \n   \
        \     **\U0001F3AF Voice Management**:\n        - Centralized voice configuration\
        \ database\n        - Support for multiple voice providers\n        - Agent\
        \ assignment tracking\n        \n        **\U0001F50D Search & Filtering**:\n\
        \        - Search by voice external ID or provider\n        - Filter by provider\
        \ (OpenAI, ElevenLabs, Google, etc.)\n        - Filter by agent assignment\
        \ status\n        "
      summary: üîä List voices
      parameters:
      - in: query
        name: agent_count_max
        schema:
          type: number
      - in: query
        name: agent_count_min
        schema:
          type: number
      - in: query
        name: agent_workspace
        schema:
          type: string
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
      - in: query
        name: created_date
        schema:
          type: string
          format: date
      - in: query
        name: gender
        schema:
          type: string
          enum:
          - female
          - male
          - neutral
        description: |-
          Voice gender

          * `male` - Male
          * `female` - Female
          * `neutral` - Neutral
      - in: query
        name: has_agents
        schema:
          type: boolean
      - in: query
        name: name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: provider
        schema:
          type: string
      - in: query
        name: provider_exact
        schema:
          type: string
          enum:
          - aws
          - azure
          - elevenlabs
          - google
          - openai
        description: |-
          Voice provider (e.g., 'elevenlabs', 'openai', 'google')

          * `openai` - OpenAI
          * `elevenlabs` - ElevenLabs
          * `google` - Google
          * `azure` - Azure
          * `aws` - AWS
      - in: query
        name: recommend
        schema:
          type: boolean
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: tone
        schema:
          type: string
      - in: query
        name: updated_after
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_before
        schema:
          type: string
          format: date-time
      - in: query
        name: voice_external_id
        schema:
          type: string
      tags:
      - Voice Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVoiceList'
              examples:
                VoiceList:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - count: 25
                      results:
                      - id: voice-uuid-1
                        voice_external_id: alloy
                        provider: openai
                        agent_count: 3
                        created_at: '2024-01-10T09:00:00Z'
                      - id: voice-uuid-2
                        voice_external_id: 21m00Tcm4TlvDq8ikWAM
                        provider: elevenlabs
                        agent_count: 1
                        created_at: '2024-01-12T14:30:00Z'
                  summary: Available voice configurations
          description: ‚úÖ Successfully retrieved voice configurations
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Staff access required for voice management
    post:
      operationId: voices_voices_create
      description: "\n        Add a new voice configuration to the system (Staff only).\n\
        \        \n        **\U0001F510 Permission Requirements**:\n        - **‚ùå\
        \ Regular Users**: Cannot create voice configurations\n        - **‚úÖ Staff\
        \ Members**: Can create new voice configurations\n        - **‚úÖ Superusers**:\
        \ Can create new voice configurations\n        \n        **\U0001F4DD Required\
        \ Fields**:\n        - `voice_external_id`: External voice ID from provider\
        \ (required)\n        - `provider`: Voice provider - openai, elevenlabs, google,\
        \ azure, aws (required)\n        \n        **\U0001F512 Validation Rules**:\n\
        \        - Voice external ID cannot be empty or exceed 255 characters\n  \
        \      - Provider must be from allowed list\n        - Combination of external\
        \ ID + provider must be unique\n        "
      summary: ‚ûï Create new voice
      tags:
      - Voice Management
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VoiceCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VoiceCreateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceCreateRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voice'
              examples:
                NewVoiceCreated:
                  value:
                    id: new-voice-uuid
                    voice_external_id: nova
                    provider: openai
                    agent_count: 0
                    created_at: '2024-01-15T10:30:00Z'
                  summary: Successfully created voice configuration
          description: ‚úÖ Voice configuration created successfully
        '400':
          description: ‚ùå Validation error - Check voice external ID and provider
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Staff access required
  /api/voices/voices/statistics/:
    get:
      operationId: voices_voices_statistics_retrieve
      description: "\n        Get comprehensive statistics about voice usage across\
        \ the system.\n        \n        **\U0001F4C8 Statistics Include**:\n    \
        \    - Total number of voices by provider\n        - Agent assignment distribution\
        \  \n        - Most/least used voices\n        - Provider popularity rankings\n\
        \        "
      summary: üìä Voice usage statistics
      tags:
      - Voice Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: ‚úÖ Voice statistics retrieved successfully
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Staff access required
  /api/voices/voices/{id}/:
    get:
      operationId: voices_voices_retrieve
      description: "\n        Retrieve detailed information about a specific voice\
        \ configuration.\n        \n        **\U0001F510 Permission Requirements**:\
        \ Staff access required\n        \n        **\U0001F4CA Detailed Information**:\n\
        \        - Voice external ID and provider details\n        - Number of agents\
        \ using this voice\n        - Creation and modification timestamps\n     \
        \   "
      summary: üîç Get voice details
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this voice.
        required: true
      tags:
      - Voice Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voice'
          description: ‚úÖ Voice details retrieved successfully
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Staff access required
        '404':
          description: üö´ Voice not found
    put:
      operationId: voices_voices_update
      description: "\n        Update voice configuration details (Staff only).\n \
        \       \n        **\U0001F510 Permission Requirements**: Staff access required\n\
        \        \n        **\U0001F4DD Updatable Fields**:\n        - `voice_external_id`:\
        \ External voice ID from provider\n        - `provider`: Voice provider\n\
        \        \n        **‚ö†Ô∏è Update Considerations**:\n        - Updating voice\
        \ affects all agents using this voice\n        - Ensure new configuration\
        \ is compatible with existing agents\n        - Combination of external ID\
        \ + provider must remain unique\n        "
      summary: ‚úèÔ∏è Update voice configuration
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this voice.
        required: true
      tags:
      - Voice Management
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VoiceUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VoiceUpdateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceUpdateRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voice'
          description: ‚úÖ Voice updated successfully
        '400':
          description: ‚ùå Validation error
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Staff access required
        '404':
          description: üö´ Voice not found
    patch:
      operationId: voices_voices_partial_update
      description: "\n        Update specific fields of a voice configuration (Staff\
        \ only).\n        \n        **\U0001F510 Permission Requirements**: Staff\
        \ access required\n        "
      summary: ‚úèÔ∏è Partially update voice
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this voice.
        required: true
      tags:
      - Voice Management
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVoiceUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVoiceUpdateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVoiceUpdateRequest'
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voice'
          description: ‚úÖ Voice updated successfully
        '400':
          description: ‚ùå Validation error
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Staff access required
        '404':
          description: üö´ Voice not found
    delete:
      operationId: voices_voices_destroy
      description: "\n        **‚ö†Ô∏è DESTRUCTIVE OPERATION - Delete a voice configuration.**\n\
        \        \n        **\U0001F510 Permission Requirements**: Staff access required\n\
        \        \n        **\U0001F4A5 Consequences**:\n        - Voice configuration\
        \ permanently removed\n        - All agents using this voice will have voice\
        \ set to NULL\n        - Cannot be undone - ensure no agents depend on this\
        \ voice\n        \n        **\U0001F6E1Ô∏è Safety Recommendations**:\n     \
        \   - Check agent_count before deletion\n        - Reassign agents to different\
        \ voices first\n        - Consider impact on active call operations\n    \
        \    "
      summary: üóëÔ∏è Delete voice configuration
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this voice.
        required: true
      tags:
      - Voice Management
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: ‚úÖ Voice deleted successfully
        '401':
          description: üö´ Authentication required
        '403':
          description: üö´ Staff access required
        '404':
          description: üö´ Voice not found
  /api/meta/integrations/:
    get:
      operationId: meta_integrations_list
      description: "\n        Retrieve Meta (Facebook/Instagram) integrations for\
        \ your workspaces.\n        \n        **\U0001F510 Permission Requirements**:\n\
        \        - User must be authenticated and email verified\n        - Only integrations\
        \ from user's workspaces are returned\n        \n        **\U0001F3AF Use\
        \ Cases**:\n        - Dashboard overview of Meta integrations\n        - Integration\
        \ management interface\n        - Status monitoring\n        "
      summary: üì± List Meta integrations
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - meta
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMetaIntegrationList'
          description: ‚úÖ Successfully retrieved Meta integrations
    post:
      operationId: meta_integrations_create
      description: Create new Meta integration for workspace (usually called after
        OAuth)
      summary: üì± Create Meta integration
      tags:
      - meta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetaIntegrationCreateRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaIntegrationCreate'
          description: ''
  /api/meta/integrations/get-oauth-url/:
    post:
      operationId: meta_integrations_get_oauth_url_create
      description: Get the OAuth URL to redirect user to Meta for authorization
      summary: üîó Get Meta OAuth URL
      tags:
      - meta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetaIntegrationRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  oauth_url:
                    type: string
          description: ''
  /api/meta/integrations/stats/:
    get:
      operationId: meta_integrations_stats_retrieve
      description: Get statistics for Meta integrations in your workspaces
      summary: üìä Meta integration statistics
      tags:
      - meta
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaIntegrationStats'
          description: ''
  /api/meta/integrations/{id}/:
    get:
      operationId: meta_integrations_retrieve
      description: ViewSet for Meta integrations CRUD management
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - meta
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaIntegration'
          description: ''
    put:
      operationId: meta_integrations_update
      description: ViewSet for Meta integrations CRUD management
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - meta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetaIntegrationRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaIntegration'
          description: ''
    patch:
      operationId: meta_integrations_partial_update
      description: ViewSet for Meta integrations CRUD management
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - meta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMetaIntegrationRequest'
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaIntegration'
          description: ''
    delete:
      operationId: meta_integrations_destroy
      description: ViewSet for Meta integrations CRUD management
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - meta
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: No response body
  /api/meta/lead-forms/:
    get:
      operationId: meta_lead_forms_list
      description: Retrieve Meta lead forms for your workspaces
      summary: üìã List Meta lead forms
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - meta
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMetaLeadFormList'
          description: ''
    post:
      operationId: meta_lead_forms_create
      description: Create configuration for a Meta lead form
      summary: üìã Create Meta lead form configuration
      tags:
      - meta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetaLeadFormCreateRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaLeadFormCreate'
          description: ''
  /api/meta/lead-forms/{id}/:
    get:
      operationId: meta_lead_forms_retrieve
      description: ViewSet for Meta lead forms
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - meta
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaLeadForm'
          description: ''
    put:
      operationId: meta_lead_forms_update
      description: ViewSet for Meta lead forms
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - meta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetaLeadFormRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaLeadForm'
          description: ''
    patch:
      operationId: meta_lead_forms_partial_update
      description: ViewSet for Meta lead forms
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - meta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMetaLeadFormRequest'
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaLeadForm'
          description: ''
    delete:
      operationId: meta_lead_forms_destroy
      description: ViewSet for Meta lead forms
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - meta
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: No response body
  /api/knowledge/agents/{agent_id}/documents/:
    get:
      operationId: knowledge_agents_documents_retrieve
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
        description: Agent UUID
        required: true
      tags:
      - Knowledge
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentListResponse'
          description: ''
    post:
      operationId: knowledge_agents_documents_create
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
        description: Agent UUID
        required: true
      tags:
      - Knowledge
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentUploadRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentUploadRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentListResponse'
          description: ''
  /api/knowledge/agents/{agent_id}/documents/by-id/{doc_id}/:
    delete:
      operationId: knowledge_agents_documents_by_id_destroy
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
        description: Agent UUID
        required: true
      - in: path
        name: doc_id
        schema:
          type: string
        description: Document UUID
        required: true
      tags:
      - Knowledge
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: No response body
  /api/knowledge/agents/{agent_id}/documents/by-id/{doc_id}/presign/:
    post:
      operationId: knowledge_agents_documents_by_id_presign_create
      description: Returns direct URLs for the PDF (`url`) and, if available, the
        extracted plain text (`text_url`).
      summary: üîó Presign URLs for a document
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
        description: Agent UUID
        required: true
      - in: path
        name: doc_id
        schema:
          type: string
        description: Document UUID
        required: true
      tags:
      - Knowledge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PresignRequestRequest'
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    description: Direct HTTPS URL to the PDF
                  text_url:
                    type: string
                    nullable: true
                    description: Direct HTTPS URL to the extracted .txt (if available)
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: File not found
          description: ''
  /api/knowledge/agents/{agent_id}/rebuild/:
    post:
      operationId: knowledge_agents_rebuild_create
      parameters:
      - in: path
        name: agent_id
        schema:
          type: string
        description: Agent UUID
        required: true
      tags:
      - Knowledge
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: ''
  /api/integrations/meta/oauth_hook/:
    get:
      operationId: integrations_meta_oauth_hook_retrieve
      description: "\n        Handle OAuth callback from Meta after user authorization.\n\
        \        \n        **Process Flow**:\n        1. Exchange authorization code\
        \ for access token\n        2. Fetch user's business accounts and pages\n\
        \        3. Create or update MetaIntegration record\n        4. Set up webhook\
        \ subscriptions\n        \n        **\U0001F512 Security**: This endpoint\
        \ validates the state parameter for CSRF protection.\n        **\U0001F4E5\
        \ Method**: POST request with parameters from Meta.\n        "
      summary: üîó Meta OAuth callback
      tags:
      - integrations
      security:
      - tokenAuth: []
      - TokenAuth: []
      - {}
      responses:
        '200':
          description: ‚úÖ OAuth callback processed successfully
        '400':
          description: ‚ùå Invalid OAuth parameters
        '403':
          description: üö´ Invalid state parameter (CSRF protection)
    post:
      operationId: integrations_meta_oauth_hook_create
      description: "\n        Handle OAuth callback from Meta after user authorization.\n\
        \        \n        **Process Flow**:\n        1. Exchange authorization code\
        \ for access token\n        2. Fetch user's business accounts and pages\n\
        \        3. Create or update MetaIntegration record\n        4. Set up webhook\
        \ subscriptions\n        \n        **\U0001F512 Security**: This endpoint\
        \ validates the state parameter for CSRF protection.\n        **\U0001F4E5\
        \ Method**: POST request with parameters from Meta.\n        "
      summary: üîó Meta OAuth callback
      tags:
      - integrations
      requestBody:
        content:
          type:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          properties:
            schema:
              code:
                type: string
                description: Authorization code from Meta
              state:
                type: string
                description: State parameter (workspace_id)
      security:
      - tokenAuth: []
      - TokenAuth: []
      - {}
      responses:
        '200':
          description: ‚úÖ OAuth callback processed successfully
        '400':
          description: ‚ùå Invalid OAuth parameters
        '403':
          description: üö´ Invalid state parameter (CSRF protection)
  /api/integrations/meta/lead_in/:
    get:
      operationId: integrations_meta_lead_in_retrieve
      description: Verify webhook endpoint for Meta (called during setup)
      summary: üîç Meta webhook verification
      tags:
      - integrations
      security:
      - tokenAuth: []
      - TokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: ''
    post:
      operationId: integrations_meta_lead_in_create
      description: "\n        Receive lead data from Meta webhook when new leads are\
        \ generated.\n        \n        **Webhook Flow**:\n        1. Verify webhook\
        \ signature using verification token\n        2. Parse lead data from Meta\
        \ format\n        3. Map fields using simple field name matching\n       \
        \ 4. Create Lead record with mapped data\n        5. Link to MetaLeadForm\
        \ for tracking\n        \n        **\U0001F512 Security**: Webhook signature\
        \ verification is mandatory.\n        **‚ö° Performance**: Webhook processing\
        \ is asynchronous for reliability.\n        "
      summary: üì¨ Meta lead webhook
      tags:
      - integrations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetaLeadWebhookRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      - {}
      responses:
        '200':
          description: ‚úÖ Lead webhook processed successfully
        '400':
          description: ‚ùå Invalid webhook data
        '401':
          description: üö´ Invalid webhook signature
  /api/integrations/jambonz/auth/:
    post:
      operationId: integrations_jambonz_auth_create
      description: |-
        Handle Jambonz dynamic authentication requests

        Expected request format from Jambonz:
        {
            "username": "agent_username",
            "realm": "sip_realm",
            "method": "INVITE",
            "response": "auth_hash" (optional)
        }
      tags:
      - integrations
      security:
      - TokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/webhooks/leads/{public_key}/:
    post:
      operationId: webhooks_leads_create
      summary: Inbound webhook for custom lead sources
      parameters:
      - in: path
        name: public_key
        schema:
          type: string
        required: true
      tags:
      - webhooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookLeadPayloadRequest'
        required: true
      security:
      - TokenAuth: []
      responses:
        '200':
          description: No response body
  /api/webhook-sources/:
    get:
      operationId: webhook_sources_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - webhook-sources
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWebhookLeadSourceList'
          description: ''
    post:
      operationId: webhook_sources_create
      summary: Create a new webhook lead source
      tags:
      - webhook-sources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookLeadSourceCreateRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookLeadSourceCreate'
          description: ''
  /api/webhook-sources/{id}/:
    get:
      operationId: webhook_sources_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - webhook-sources
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookLeadSource'
          description: ''
    put:
      operationId: webhook_sources_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - webhook-sources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookLeadSourceRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookLeadSource'
          description: ''
    patch:
      operationId: webhook_sources_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - webhook-sources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWebhookLeadSourceRequest'
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookLeadSource'
          description: ''
    delete:
      operationId: webhook_sources_destroy
      summary: Delete webhook source
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - webhook-sources
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '204':
          description: No response body
  /api/webhook-sources/{id}/rotate_token/:
    post:
      operationId: webhook_sources_rotate_token_create
      summary: Rotate webhook token
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - webhook-sources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookLeadSourceRequest'
        required: true
      security:
      - tokenAuth: []
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookLeadSource'
          description: ''
components:
  schemas:
    AccessRoleEnum:
      enum:
      - freeBusyReader
      - reader
      - writer
      - owner
      type: string
      description: |-
        * `freeBusyReader` - Free/Busy Reader
        * `reader` - Reader
        * `writer` - Writer
        * `owner` - Owner
    AdminUserCreateRequest:
      type: object
      description: Admin-only serializer for creating users with elevated privileges
      properties:
        email:
          type: string
          format: email
          minLength: 1
          description: Email address used for login
          maxLength: 254
        first_name:
          type: string
          minLength: 1
          description: User's first name
          maxLength: 150
        last_name:
          type: string
          minLength: 1
          description: User's last name
          maxLength: 150
        phone:
          type: string
          minLength: 1
          description: Phone number in international format
          maxLength: 50
        password:
          type: string
          writeOnly: true
          minLength: 8
        is_staff:
          type: boolean
          description: Whether this user can access the admin site
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        is_active:
          type: boolean
          description: Whether this user account is active
        status:
          allOf:
          - $ref: '#/components/schemas/StatusCe8Enum'
          description: |-
            User account status

            * `active` - Active
            * `suspended` - Suspended
            * `forever_disabled` - Forever Disabled
        social_id:
          type: string
          nullable: true
          description: Social media account ID
          maxLength: 255
        social_provider:
          nullable: true
          description: |-
            Social media provider

            * `google` - Google
            * `apple` - Apple
            * `facebook` - Facebook
          oneOf:
          - $ref: '#/components/schemas/SocialProviderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        is_email_verified:
          type: boolean
          description: Whether the user's email has been verified
      required:
      - email
      - first_name
      - last_name
      - password
      - phone
    Agent:
      type: object
      description: Serializer for Agent model
      properties:
        agent_id:
          type: string
          format: uuid
          readOnly: true
        workspace:
          type: string
          format: uuid
        workspace_name:
          type: string
          readOnly: true
        name:
          type: string
          description: Agent name for display
          maxLength: 255
        status:
          allOf:
          - $ref: '#/components/schemas/StatusB9bEnum'
          description: |-
            Agent status

            * `active` - Active
            * `paused` - Paused
        greeting_inbound:
          type: string
          description: Greeting for inbound calls
        greeting_outbound:
          type: string
          description: Greeting for outbound calls
        voice:
          type: string
          format: uuid
          nullable: true
          description: Voice configuration for this agent
        voice_provider:
          type: string
          readOnly: true
        voice_external_id:
          type: string
          readOnly: true
        lead_funnel:
          allOf:
          - $ref: '#/components/schemas/LeadFunnelBasic'
          readOnly: true
        language:
          type: string
          description: Agent language
          maxLength: 50
        retry_interval:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Retry interval in minutes
        max_retries:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Maximum number of retry attempts for calls
        workdays:
          description: List of working days, e.g., ['monday', 'tuesday', 'wednesday']
        call_from:
          type: string
          format: time
          description: Start time for calls
        call_to:
          type: string
          format: time
          description: End time for calls
        character:
          type: string
          description: Agent character/personality description
        prompt:
          type: string
          description: Agent prompt/instructions for AI behavior
        phone_number:
          allOf:
          - $ref: '#/components/schemas/PhoneNumber'
          readOnly: true
        phone_number_display:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - agent_id
      - created_at
      - lead_funnel
      - name
      - phone_number
      - phone_number_display
      - updated_at
      - voice_external_id
      - voice_provider
      - workspace
      - workspace_name
    AgentBasic:
      type: object
      description: Basic serializer for Agent with minimal fields
      properties:
        agent_id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: Agent name for display
          maxLength: 255
        status:
          allOf:
          - $ref: '#/components/schemas/StatusB9bEnum'
          description: |-
            Agent status

            * `active` - Active
            * `paused` - Paused
        workspace_name:
          type: string
          readOnly: true
        voice_external_id:
          type: string
          readOnly: true
        language:
          type: string
          description: Agent language
          maxLength: 50
      required:
      - agent_id
      - name
      - voice_external_id
      - workspace_name
    AgentConfig:
      type: object
      description: Serializer for agent configuration details
      properties:
        agent_id:
          type: string
          format: uuid
          readOnly: true
        workspace:
          type: string
          format: uuid
          readOnly: true
        workspace_name:
          type: string
          readOnly: true
        name:
          type: string
          description: Agent name for display
          maxLength: 255
        status:
          allOf:
          - $ref: '#/components/schemas/StatusB9bEnum'
          description: |-
            Agent status

            * `active` - Active
            * `paused` - Paused
        greeting_inbound:
          type: string
          description: Greeting for inbound calls
        greeting_outbound:
          type: string
          description: Greeting for outbound calls
        voice:
          type: string
          format: uuid
          nullable: true
          description: Voice configuration for this agent
        voice_provider:
          type: string
          readOnly: true
        voice_external_id:
          type: string
          readOnly: true
        lead_funnel:
          allOf:
          - $ref: '#/components/schemas/LeadFunnelBasic'
          readOnly: true
        language:
          type: string
          description: Agent language
          maxLength: 50
        retry_interval:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Retry interval in minutes
        max_retries:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Maximum number of retry attempts for calls
        workdays:
          description: List of working days, e.g., ['monday', 'tuesday', 'wednesday']
        call_from:
          type: string
          format: time
          description: Start time for calls
        call_to:
          type: string
          format: time
          description: End time for calls
        character:
          type: string
          description: Agent character/personality description
        phone_number:
          allOf:
          - $ref: '#/components/schemas/PhoneNumber'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - agent_id
      - created_at
      - lead_funnel
      - name
      - phone_number
      - updated_at
      - voice_external_id
      - voice_provider
      - workspace
      - workspace_name
    AgentCreateRequest:
      type: object
      description: Serializer for creating agents
      properties:
        workspace:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          description: Agent name for display
          maxLength: 255
        status:
          allOf:
          - $ref: '#/components/schemas/StatusB9bEnum'
          description: |-
            Agent status

            * `active` - Active
            * `paused` - Paused
        greeting_inbound:
          type: string
          description: Greeting for inbound calls
        greeting_outbound:
          type: string
          description: Greeting for outbound calls
        voice:
          type: string
          format: uuid
          nullable: true
          description: Voice configuration for this agent
        language:
          type: string
          minLength: 1
          description: Agent language
          maxLength: 50
        retry_interval:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Retry interval in minutes
        max_retries:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Maximum number of retry attempts for calls
        workdays:
          description: List of working days, e.g., ['monday', 'tuesday', 'wednesday']
        call_from:
          type: string
          format: time
          description: Start time for calls
        call_to:
          type: string
          format: time
          description: End time for calls
        character:
          type: string
          description: Agent character/personality description
        prompt:
          type: string
          description: Agent prompt/instructions for AI behavior
        phone_number:
          type: string
          format: uuid
          nullable: true
          description: Phone number assigned to this agent (agent accesses SIP trunk
            via agent.phone_number.sip_trunk)
      required:
      - name
      - workspace
    AgentPhoneAssignmentRequest:
      type: object
      description: Serializer for assigning a phone number to an agent
      properties:
        phone_number_id:
          type: string
          format: uuid
          description: Phone number ID to assign to the agent
      required:
      - phone_number_id
    AgentSendDocumentInfo:
      type: object
      description: Serializer to expose current send-document status/defaults.
      properties:
        has_document:
          type: boolean
        filename:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        email_default_subject:
          type: string
          nullable: true
        email_default_body:
          type: string
          nullable: true
      required:
      - email_default_body
      - email_default_subject
      - filename
      - has_document
      - url
    AgentSendDocumentUploadRequest:
      type: object
      description: Serializer for uploading the agent's single PDF and optional defaults.
      properties:
        file:
          type: string
          format: binary
        email_default_subject:
          type: string
          nullable: true
          maxLength: 255
        email_default_body:
          type: string
          nullable: true
      required:
      - file
    AgentUpdateRequest:
      type: object
      description: Serializer for updating agents
      properties:
        name:
          type: string
          minLength: 1
          description: Agent name for display
          maxLength: 255
        status:
          allOf:
          - $ref: '#/components/schemas/StatusB9bEnum'
          description: |-
            Agent status

            * `active` - Active
            * `paused` - Paused
        greeting_inbound:
          type: string
          description: Greeting for inbound calls
        greeting_outbound:
          type: string
          description: Greeting for outbound calls
        voice:
          type: string
          format: uuid
          nullable: true
          description: Voice configuration for this agent
        lead_funnel:
          type: string
          format: uuid
          nullable: true
          description: Lead funnel this agent handles
        language:
          type: string
          minLength: 1
          description: Agent language
          maxLength: 50
        retry_interval:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Retry interval in minutes
        max_retries:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Maximum number of retry attempts for calls
        workdays:
          description: List of working days, e.g., ['monday', 'tuesday', 'wednesday']
        call_from:
          type: string
          format: time
          description: Start time for calls
        call_to:
          type: string
          format: time
          description: End time for calls
        character:
          type: string
          description: Agent character/personality description
        prompt:
          type: string
          description: Agent prompt/instructions for AI behavior
      required:
      - name
    AssignAgentRequest:
      type: object
      description: Serializer for assigning an agent to a funnel
      properties:
        agent_id:
          type: string
          format: uuid
      required:
      - agent_id
    Blacklist:
      type: object
      description: Serializer for Blacklist model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        user:
          type: string
          format: uuid
        user_email:
          type: string
          readOnly: true
        user_name:
          type: string
          readOnly: true
        reason:
          type: string
          description: Reason for blacklisting
        status:
          allOf:
          - $ref: '#/components/schemas/Status61bEnum'
          description: |-
            Blacklist status

            * `temporary` - Temporary
            * `forever` - Forever
            * `suspended` - Suspended
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - reason
      - status
      - updated_at
      - user
      - user_email
      - user_name
    BlacklistCreateRequest:
      type: object
      description: Serializer for creating blacklist entries
      properties:
        user:
          type: string
          format: uuid
        reason:
          type: string
          minLength: 1
          description: Reason for blacklisting
        status:
          allOf:
          - $ref: '#/components/schemas/Status61bEnum'
          description: |-
            Blacklist status

            * `temporary` - Temporary
            * `forever` - Forever
            * `suspended` - Suspended
      required:
      - reason
      - status
      - user
    BlacklistRequest:
      type: object
      description: Serializer for Blacklist model
      properties:
        user:
          type: string
          format: uuid
        reason:
          type: string
          minLength: 1
          description: Reason for blacklisting
        status:
          allOf:
          - $ref: '#/components/schemas/Status61bEnum'
          description: |-
            Blacklist status

            * `temporary` - Temporary
            * `forever` - Forever
            * `suspended` - Suspended
      required:
      - reason
      - status
      - user
    BlankEnum:
      enum:
      - ''
    Calendar:
      type: object
      description: Serializer for Calendar model with provider details
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        workspace:
          type: string
          format: uuid
        workspace_name:
          type: string
          readOnly: true
        name:
          type: string
          default: ''
          description: Display name for the calendar
          maxLength: 255
        provider:
          allOf:
          - $ref: '#/components/schemas/ProviderEnum'
          default: google
        active:
          type: boolean
        provider_details:
          type: object
          additionalProperties: {}
          readOnly: true
        connection_status:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - connection_status
      - created_at
      - id
      - provider_details
      - updated_at
      - workspace
      - workspace_name
    CalendarRequest:
      type: object
      description: Serializer for Calendar model with provider details
      properties:
        workspace:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          default: ''
          description: Display name for the calendar
          maxLength: 255
        provider:
          allOf:
          - $ref: '#/components/schemas/ProviderEnum'
          default: google
        active:
          type: boolean
      required:
      - workspace
    CallLog:
      type: object
      description: Serializer for CallLog model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        lead:
          type: string
          format: uuid
          nullable: true
        lead_name:
          type: string
          readOnly: true
        lead_surname:
          type: string
          readOnly: true
        lead_email:
          type: string
          readOnly: true
        agent:
          type: string
          format: uuid
          description: Agent who made/received the call
        agent_workspace_name:
          type: string
          readOnly: true
        timestamp:
          type: string
          format: date-time
          readOnly: true
        from_number:
          type: string
          description: Caller's phone number
          maxLength: 20
        to_number:
          type: string
          description: Recipient's phone number
          maxLength: 20
        duration:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Call duration in seconds
        duration_formatted:
          type: string
          readOnly: true
        disconnection_reason:
          nullable: true
          description: |-
            Reason for call disconnection

            * `user_hangup` - User Hangup
            * `agent_hangup` - Agent Hangup
            * `call_transfer` - Call Transfer
            * `voicemail_reached` - Voicemail Reached
            * `inactivity` - Inactivity Timeout
            * `max_duration_reached` - Maximum Duration Reached
            * `dial_busy` - Dial Busy
            * `dial_failed` - Dial Failed
            * `dial_no_answer` - No Answer
            * `invalid_destination` - Invalid Destination
            * `telephony_provider_permission_denied` - Telephony Provider Permission Denied
            * `telephony_provider_unavailable` - Telephony Provider Unavailable
            * `sip_routing_error` - SIP Routing Error
            * `marked_as_spam` - Marked as Spam
            * `user_declined` - User Declined
            * `concurrency_limit_reached` - Concurrency Limit Reached
            * `no_valid_payment` - No Valid Payment
            * `scam_detected` - Scam Detected
            * `error_llm_websocket_open` - LLM Websocket Open Error
            * `error_llm_websocket_lost_connection` - LLM Websocket Lost Connection
            * `error_llm_websocket_runtime` - LLM Websocket Runtime Error
            * `error_llm_websocket_corrupt_payload` - LLM Websocket Corrupt Payload
            * `error_no_audio_received` - No Audio Received
            * `error_asr` - ASR Error
            * `error_hotcalls` - HotCalls Error
            * `error_unknown` - Unknown Error
            * `error_user_not_joined` - User Not Joined
            * `registered_call_timeout` - Registered Call Timeout
            * `preflight_call_log_failed` - Preflight Call Log Failed
          oneOf:
          - $ref: '#/components/schemas/DisconnectionReasonEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        direction:
          allOf:
          - $ref: '#/components/schemas/DirectionEnum'
          description: |-
            Call direction

            * `inbound` - Inbound
            * `outbound` - Outbound
        appointment_datetime:
          type: string
          format: date-time
          nullable: true
          description: Scheduled appointment datetime when status is 'appointment_scheduled'
        call_task_id:
          type: string
          format: uuid
          readOnly: true
        target_ref:
          type: string
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - agent
      - agent_workspace_name
      - call_task_id
      - direction
      - duration
      - duration_formatted
      - from_number
      - id
      - lead_email
      - lead_name
      - lead_surname
      - target_ref
      - timestamp
      - to_number
      - updated_at
    CallLogCreateRequest:
      type: object
      description: Serializer for creating call logs
      properties:
        lead:
          type: string
          format: uuid
          nullable: true
        agent:
          type: string
          format: uuid
          description: Agent who made/received the call
        from_number:
          type: string
          minLength: 1
          description: Caller's phone number
          maxLength: 20
        to_number:
          type: string
          minLength: 1
          description: Recipient's phone number
          maxLength: 20
        disconnection_reason:
          nullable: true
          description: |-
            Reason for call disconnection

            * `user_hangup` - User Hangup
            * `agent_hangup` - Agent Hangup
            * `call_transfer` - Call Transfer
            * `voicemail_reached` - Voicemail Reached
            * `inactivity` - Inactivity Timeout
            * `max_duration_reached` - Maximum Duration Reached
            * `dial_busy` - Dial Busy
            * `dial_failed` - Dial Failed
            * `dial_no_answer` - No Answer
            * `invalid_destination` - Invalid Destination
            * `telephony_provider_permission_denied` - Telephony Provider Permission Denied
            * `telephony_provider_unavailable` - Telephony Provider Unavailable
            * `sip_routing_error` - SIP Routing Error
            * `marked_as_spam` - Marked as Spam
            * `user_declined` - User Declined
            * `concurrency_limit_reached` - Concurrency Limit Reached
            * `no_valid_payment` - No Valid Payment
            * `scam_detected` - Scam Detected
            * `error_llm_websocket_open` - LLM Websocket Open Error
            * `error_llm_websocket_lost_connection` - LLM Websocket Lost Connection
            * `error_llm_websocket_runtime` - LLM Websocket Runtime Error
            * `error_llm_websocket_corrupt_payload` - LLM Websocket Corrupt Payload
            * `error_no_audio_received` - No Audio Received
            * `error_asr` - ASR Error
            * `error_hotcalls` - HotCalls Error
            * `error_unknown` - Unknown Error
            * `error_user_not_joined` - User Not Joined
            * `registered_call_timeout` - Registered Call Timeout
            * `preflight_call_log_failed` - Preflight Call Log Failed
          oneOf:
          - $ref: '#/components/schemas/DisconnectionReasonEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        direction:
          allOf:
          - $ref: '#/components/schemas/DirectionEnum'
          description: |-
            Call direction

            * `inbound` - Inbound
            * `outbound` - Outbound
        appointment_datetime:
          type: string
          format: date-time
          nullable: true
          description: Scheduled appointment datetime when status is 'appointment_scheduled'
        call_task_id:
          type: string
          format: uuid
          writeOnly: true
          description: ID of running CallTask (required, not persisted)
        event_id:
          type: string
          format: uuid
          writeOnly: true
          nullable: true
          description: Idempotency key for a single call attempt
      required:
      - call_task_id
    CallLogRequest:
      type: object
      description: Serializer for CallLog model
      properties:
        lead:
          type: string
          format: uuid
          nullable: true
        agent:
          type: string
          format: uuid
          description: Agent who made/received the call
        from_number:
          type: string
          minLength: 1
          description: Caller's phone number
          maxLength: 20
        to_number:
          type: string
          minLength: 1
          description: Recipient's phone number
          maxLength: 20
        duration:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Call duration in seconds
        disconnection_reason:
          nullable: true
          description: |-
            Reason for call disconnection

            * `user_hangup` - User Hangup
            * `agent_hangup` - Agent Hangup
            * `call_transfer` - Call Transfer
            * `voicemail_reached` - Voicemail Reached
            * `inactivity` - Inactivity Timeout
            * `max_duration_reached` - Maximum Duration Reached
            * `dial_busy` - Dial Busy
            * `dial_failed` - Dial Failed
            * `dial_no_answer` - No Answer
            * `invalid_destination` - Invalid Destination
            * `telephony_provider_permission_denied` - Telephony Provider Permission Denied
            * `telephony_provider_unavailable` - Telephony Provider Unavailable
            * `sip_routing_error` - SIP Routing Error
            * `marked_as_spam` - Marked as Spam
            * `user_declined` - User Declined
            * `concurrency_limit_reached` - Concurrency Limit Reached
            * `no_valid_payment` - No Valid Payment
            * `scam_detected` - Scam Detected
            * `error_llm_websocket_open` - LLM Websocket Open Error
            * `error_llm_websocket_lost_connection` - LLM Websocket Lost Connection
            * `error_llm_websocket_runtime` - LLM Websocket Runtime Error
            * `error_llm_websocket_corrupt_payload` - LLM Websocket Corrupt Payload
            * `error_no_audio_received` - No Audio Received
            * `error_asr` - ASR Error
            * `error_hotcalls` - HotCalls Error
            * `error_unknown` - Unknown Error
            * `error_user_not_joined` - User Not Joined
            * `registered_call_timeout` - Registered Call Timeout
            * `preflight_call_log_failed` - Preflight Call Log Failed
          oneOf:
          - $ref: '#/components/schemas/DisconnectionReasonEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        direction:
          allOf:
          - $ref: '#/components/schemas/DirectionEnum'
          description: |-
            Call direction

            * `inbound` - Inbound
            * `outbound` - Outbound
        appointment_datetime:
          type: string
          format: date-time
          nullable: true
          description: Scheduled appointment datetime when status is 'appointment_scheduled'
      required:
      - agent
      - direction
      - duration
      - from_number
      - to_number
    CallTask:
      type: object
      description: Serializer for CallTask model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/CallTaskStatusEnum'
          readOnly: true
          description: |-
            Current status of the call task

            * `scheduled` - scheduled
            * `call_triggered` - call_triggered
            * `in_progress` - in_progress
            * `retry` - retry
            * `waiting` - waiting
        attempts:
          type: integer
          readOnly: true
          description: Number of retry attempts made
        phone:
          type: string
          readOnly: true
          description: Phone number to call
        next_call:
          type: string
          format: date-time
          readOnly: true
          description: Scheduled time for the next call attempt
        agent:
          type: string
          format: uuid
          description: Agent assigned to handle this call task
        agent_name:
          type: string
          readOnly: true
        workspace:
          type: string
          format: uuid
          description: Workspace associated with this call task
        workspace_name:
          type: string
          readOnly: true
        lead:
          type: string
          format: uuid
          readOnly: true
          nullable: true
          description: Lead associated with this call task (null for test calls)
        lead_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - agent
      - agent_name
      - attempts
      - created_at
      - id
      - lead
      - lead_name
      - next_call
      - phone
      - status
      - updated_at
      - workspace
      - workspace_name
    CallTaskRequest:
      type: object
      description: Serializer for CallTask model
      properties:
        agent:
          type: string
          format: uuid
          description: Agent assigned to handle this call task
        workspace:
          type: string
          format: uuid
          description: Workspace associated with this call task
        target_ref:
          type: string
          writeOnly: true
          minLength: 1
          description: Canonical target (lead:<uuid> or test_user:<uuid>)
      required:
      - agent
      - target_ref
      - workspace
    CallTaskStatusEnum:
      enum:
      - scheduled
      - call_triggered
      - in_progress
      - retry
      - waiting
      type: string
      description: |-
        * `scheduled` - scheduled
        * `call_triggered` - call_triggered
        * `in_progress` - in_progress
        * `retry` - retry
        * `waiting` - waiting
    CallTaskTrigger:
      type: object
      description: Serializer for triggering a call task
      properties:
        task_id:
          type: string
          format: uuid
          readOnly: true
        status:
          type: string
          readOnly: true
        message:
          type: string
          readOnly: true
      required:
      - message
      - status
      - task_id
    ChangePlanRequest:
      type: object
      description: Serializer for changing subscription plan (price change with proration)
      properties:
        workspace_id:
          type: string
          format: uuid
        price_id:
          type: string
          minLength: 1
          maxLength: 255
        proration_behavior:
          allOf:
          - $ref: '#/components/schemas/ProrationBehaviorEnum'
          default: create_prorations
        payment_behavior:
          allOf:
          - $ref: '#/components/schemas/PaymentBehaviorEnum'
          default: pending_if_incomplete
      required:
      - price_id
      - workspace_id
    CreateCheckoutSessionRequest:
      type: object
      description: Serializer for creating Stripe checkout session
      properties:
        workspace_id:
          type: string
          format: uuid
        price_id:
          type: string
          minLength: 1
          description: Stripe Price ID (price_xxx)
          maxLength: 255
        success_url:
          type: string
          format: uri
          minLength: 1
          description: URL to redirect after successful payment
        cancel_url:
          type: string
          format: uri
          minLength: 1
          description: URL to redirect if payment is cancelled
      required:
      - cancel_url
      - price_id
      - success_url
      - workspace_id
    CreateStripeCustomerRequest:
      type: object
      description: Serializer for creating a Stripe customer
      properties:
        workspace_id:
          type: string
          format: uuid
        email:
          type: string
          format: email
          minLength: 1
        name:
          type: string
          minLength: 1
          maxLength: 255
      required:
      - workspace_id
    DirectionEnum:
      enum:
      - inbound
      - outbound
      type: string
      description: |-
        * `inbound` - Inbound
        * `outbound` - Outbound
    DisconnectionReasonEnum:
      enum:
      - user_hangup
      - agent_hangup
      - call_transfer
      - voicemail_reached
      - inactivity
      - max_duration_reached
      - dial_busy
      - dial_failed
      - dial_no_answer
      - invalid_destination
      - telephony_provider_permission_denied
      - telephony_provider_unavailable
      - sip_routing_error
      - marked_as_spam
      - user_declined
      - concurrency_limit_reached
      - no_valid_payment
      - scam_detected
      - error_llm_websocket_open
      - error_llm_websocket_lost_connection
      - error_llm_websocket_runtime
      - error_llm_websocket_corrupt_payload
      - error_no_audio_received
      - error_asr
      - error_hotcalls
      - error_unknown
      - error_user_not_joined
      - registered_call_timeout
      - preflight_call_log_failed
      type: string
      description: |-
        * `user_hangup` - User Hangup
        * `agent_hangup` - Agent Hangup
        * `call_transfer` - Call Transfer
        * `voicemail_reached` - Voicemail Reached
        * `inactivity` - Inactivity Timeout
        * `max_duration_reached` - Maximum Duration Reached
        * `dial_busy` - Dial Busy
        * `dial_failed` - Dial Failed
        * `dial_no_answer` - No Answer
        * `invalid_destination` - Invalid Destination
        * `telephony_provider_permission_denied` - Telephony Provider Permission Denied
        * `telephony_provider_unavailable` - Telephony Provider Unavailable
        * `sip_routing_error` - SIP Routing Error
        * `marked_as_spam` - Marked as Spam
        * `user_declined` - User Declined
        * `concurrency_limit_reached` - Concurrency Limit Reached
        * `no_valid_payment` - No Valid Payment
        * `scam_detected` - Scam Detected
        * `error_llm_websocket_open` - LLM Websocket Open Error
        * `error_llm_websocket_lost_connection` - LLM Websocket Lost Connection
        * `error_llm_websocket_runtime` - LLM Websocket Runtime Error
        * `error_llm_websocket_corrupt_payload` - LLM Websocket Corrupt Payload
        * `error_no_audio_received` - No Audio Received
        * `error_asr` - ASR Error
        * `error_hotcalls` - HotCalls Error
        * `error_unknown` - Unknown Error
        * `error_user_not_joined` - User Not Joined
        * `registered_call_timeout` - Registered Call Timeout
        * `preflight_call_log_failed` - Preflight Call Log Failed
    DocumentInfo:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        size:
          type: integer
        updated_at:
          type: string
          format: date-time
      required:
      - id
      - name
      - size
      - updated_at
    DocumentListResponse:
      type: object
      properties:
        version:
          type: integer
        files:
          type: array
          items:
            $ref: '#/components/schemas/DocumentInfo'
      required:
      - files
      - version
    DocumentUploadRequest:
      type: object
      properties:
        file:
          type: string
          format: binary
      required:
      - file
    EmailLoginRequest:
      type: object
      description: Serializer for email-based login with email verification check
      properties:
        email:
          type: string
          format: email
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - email
      - password
    Feature:
      type: object
      description: Serializer f√ºr Features
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        feature_name:
          type: string
          maxLength: 100
        description:
          type: string
          description: Feature description
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - feature_name
      - id
      - updated_at
    FeatureRequest:
      type: object
      description: Serializer f√ºr Features
      properties:
        feature_name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          description: Feature description
      required:
      - feature_name
    GenderEnum:
      enum:
      - male
      - female
      - neutral
      type: string
      description: |-
        * `male` - Male
        * `female` - Female
        * `neutral` - Neutral
    GoogleAuthUrlResponse:
      type: object
      description: Response serializer for Google OAuth URL generation
      properties:
        authorization_url:
          type: string
          format: uri
          description: URL to redirect user for Google OAuth
        state:
          type: string
          description: State parameter for CSRF protection
        message:
          type: string
          description: Instructions for frontend
      required:
      - authorization_url
      - message
      - state
    GoogleCalendar:
      type: object
      description: Serializer for GoogleCalendar model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        calendar:
          type: string
          format: uuid
        calendar_name:
          type: string
          readOnly: true
        workspace_id:
          type: string
          format: uuid
          readOnly: true
        workspace_name:
          type: string
          readOnly: true
        user:
          type: string
          format: uuid
          readOnly: true
          description: User who connected this calendar
        account_email:
          type: string
          format: email
          description: Google account email
          maxLength: 254
        external_id:
          type: string
          description: Google Calendar ID
          maxLength: 255
        time_zone:
          type: string
          maxLength: 50
        access_role:
          allOf:
          - $ref: '#/components/schemas/AccessRoleEnum'
          description: |-
            Access level for this calendar

            * `freeBusyReader` - Free/Busy Reader
            * `reader` - Reader
            * `writer` - Writer
            * `owner` - Owner
        token_expires_at:
          type: string
          format: date-time
          readOnly: true
          description: When access token expires
        is_token_expired:
          type: string
          readOnly: true
        scopes:
          description: Granted OAuth scopes
        last_sync:
          type: string
          format: date-time
          nullable: true
        sync_errors: {}
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - account_email
      - calendar
      - calendar_name
      - created_at
      - external_id
      - id
      - is_token_expired
      - time_zone
      - token_expires_at
      - updated_at
      - user
      - workspace_id
      - workspace_name
    GoogleOAuthCallback:
      type: object
      description: Response serializer for Google OAuth callback
      properties:
        success:
          type: boolean
        message:
          type: string
        calendar:
          $ref: '#/components/schemas/GoogleCalendar'
        calendars:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCalendar'
      required:
      - message
      - success
    GoogleSubAccount:
      type: object
      description: Serializer for GoogleSubAccount model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        google_calendar:
          type: string
          format: uuid
          description: The main Google account that owns the OAuth tokens
        act_as_email:
          type: string
          format: email
          description: Target user/resource email you operate on behalf of
          maxLength: 254
        act_as_user_id:
          type: string
          description: Google user id if known
          maxLength: 128
        relationship:
          $ref: '#/components/schemas/GoogleSubAccountRelationshipEnum'
        active:
          type: boolean
        main_account_email:
          type: string
          readOnly: true
        calendar_id:
          type: string
          format: uuid
          readOnly: true
        calendar_name:
          type: string
          readOnly: true
        workspace_id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - act_as_email
      - calendar_id
      - calendar_name
      - created_at
      - google_calendar
      - id
      - main_account_email
      - updated_at
      - workspace_id
    GoogleSubAccountRelationshipEnum:
      enum:
      - self
      - shared
      - delegate
      - domain_impersonation
      - resource
      type: string
      description: |-
        * `self` - Self / same user
        * `shared` - Shared calendar
        * `delegate` - Delegated access
        * `domain_impersonation` - Domain-wide delegation (service account)
        * `resource` - Resource calendar
    GoogleSubAccountRequest:
      type: object
      description: Serializer for GoogleSubAccount model
      properties:
        google_calendar:
          type: string
          format: uuid
          description: The main Google account that owns the OAuth tokens
        act_as_email:
          type: string
          format: email
          minLength: 1
          description: Target user/resource email you operate on behalf of
          maxLength: 254
        act_as_user_id:
          type: string
          description: Google user id if known
          maxLength: 128
        relationship:
          $ref: '#/components/schemas/GoogleSubAccountRelationshipEnum'
        active:
          type: boolean
      required:
      - act_as_email
      - google_calendar
    IntegrationProviderEnum:
      enum:
      - meta
      - google
      - manual
      - custom-webhook
      type: string
      description: |-
        * `meta` - Meta (Facebook/Instagram)
        * `google` - Google
        * `manual` - Manual Entry
        * `custom-webhook` - Custom Webhook
    InvitationDetail:
      type: object
      description: Serializer for public invitation details (before acceptance)
      properties:
        email:
          type: string
          format: email
          readOnly: true
          description: Email address of the person being invited
        workspace_name:
          type: string
          readOnly: true
        invited_by_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        expires_at:
          type: string
          format: date-time
          readOnly: true
          description: When this invitation expires (7 days from creation)
        is_valid:
          type: boolean
          readOnly: true
      required:
      - created_at
      - email
      - expires_at
      - invited_by_name
      - is_valid
      - workspace_name
    Lead:
      type: object
      description: Serializer for Lead model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        surname:
          type: string
          nullable: true
          description: Lead surname
          maxLength: 255
        full_name:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: string
          description: Lead's phone number
          maxLength: 50
        workspace:
          type: string
          format: uuid
          nullable: true
          description: Workspace this lead belongs to
        workspace_name:
          type: string
          readOnly: true
        integration_provider:
          nullable: true
          description: |-
            Integration provider source

            * `meta` - Meta (Facebook/Instagram)
            * `google` - Google
            * `manual` - Manual Entry
            * `custom-webhook` - Custom Webhook
          oneOf:
          - $ref: '#/components/schemas/IntegrationProviderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        integration_provider_display:
          type: string
          readOnly: true
        variables:
          description: Concrete lead variables from integration
        meta_data:
          description: Custom JSON data for the lead
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - email
      - full_name
      - id
      - integration_provider_display
      - name
      - phone
      - updated_at
      - workspace_name
    LeadBulkCreateRequest:
      type: object
      description: Serializer for bulk creating leads
      properties:
        leads:
          type: array
          items:
            $ref: '#/components/schemas/LeadCreateRequest'
          description: List of leads to create
      required:
      - leads
    LeadCreateRequest:
      type: object
      description: Serializer for creating leads
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        surname:
          type: string
          nullable: true
          description: Lead surname
          maxLength: 255
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        phone:
          type: string
          minLength: 1
          description: Lead's phone number
          maxLength: 50
        meta_data:
          description: Custom JSON data for the lead
      required:
      - email
      - name
      - phone
    LeadFunnel:
      type: object
      description: Serializer for LeadFunnel with detailed information
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: Display name for this lead funnel
          maxLength: 255
        workspace:
          type: string
          format: uuid
          description: Workspace this funnel belongs to
        workspace_name:
          type: string
          readOnly: true
        meta_lead_form:
          allOf:
          - $ref: '#/components/schemas/MetaLeadForm'
          readOnly: true
        agent:
          allOf:
          - $ref: '#/components/schemas/AgentBasic'
          readOnly: true
        has_agent:
          type: boolean
          readOnly: true
        is_active:
          type: boolean
          description: Whether this funnel should process incoming leads
        lead_count:
          type: integer
          readOnly: true
        source_type:
          type: string
          readOnly: true
        source_type_display:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - agent
      - created_at
      - has_agent
      - id
      - lead_count
      - meta_lead_form
      - name
      - source_type
      - source_type_display
      - updated_at
      - workspace
      - workspace_name
    LeadFunnelBasic:
      type: object
      description: Basic serializer for LeadFunnel to avoid circular imports
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: Display name for this lead funnel
          maxLength: 255
        is_active:
          type: boolean
          description: Whether this funnel should process incoming leads
      required:
      - id
      - name
    LeadFunnelCreateRequest:
      type: object
      description: Serializer for creating a LeadFunnel
      properties:
        name:
          type: string
          minLength: 1
          description: Display name for this lead funnel
          maxLength: 255
        workspace:
          type: string
          format: uuid
          description: Workspace this funnel belongs to
        meta_lead_form_id:
          type: string
          format: uuid
          writeOnly: true
        is_active:
          type: boolean
          description: Whether this funnel should process incoming leads
      required:
      - name
      - workspace
    LeadFunnelUpdate:
      type: object
      description: Serializer for updating lead funnels
      properties:
        name:
          type: string
          description: Display name for this lead funnel
          maxLength: 255
        is_active:
          type: boolean
          description: Whether this funnel should process incoming leads
      required:
      - name
    LeadFunnelUpdateRequest:
      type: object
      description: Serializer for updating lead funnels
      properties:
        name:
          type: string
          minLength: 1
          description: Display name for this lead funnel
          maxLength: 255
        is_active:
          type: boolean
          description: Whether this funnel should process incoming leads
      required:
      - name
    LeadProcessingStats:
      type: object
      description: Serializer for lead processing statistics
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        workspace:
          type: string
          format: uuid
          readOnly: true
        workspace_name:
          type: string
          readOnly: true
        date:
          type: string
          format: date
          readOnly: true
          description: Date of the statistics
        total_received:
          type: integer
          readOnly: true
          description: Total leads received from webhooks
        processed_with_agent:
          type: integer
          readOnly: true
          description: Leads processed with active agent
        ignored_no_funnel:
          type: integer
          readOnly: true
          description: Leads ignored - no funnel configured
        ignored_no_agent:
          type: integer
          readOnly: true
          description: Leads ignored - no agent assigned
        ignored_inactive_agent:
          type: integer
          readOnly: true
          description: Leads ignored - agent inactive
        ignored_inactive_funnel:
          type: integer
          readOnly: true
          description: Leads ignored - funnel inactive
        total_ignored:
          type: integer
          readOnly: true
        processing_rate:
          type: number
          format: double
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - date
      - id
      - ignored_inactive_agent
      - ignored_inactive_funnel
      - ignored_no_agent
      - ignored_no_funnel
      - processed_with_agent
      - processing_rate
      - total_ignored
      - total_received
      - updated_at
      - workspace
      - workspace_name
    LeadStats:
      type: object
      description: Serializer for lead statistics
      properties:
        total_leads:
          type: integer
          readOnly: true
        leads_with_calls:
          type: integer
          readOnly: true
        leads_without_calls:
          type: integer
          readOnly: true
        avg_calls_per_lead:
          type: number
          format: double
          readOnly: true
          nullable: true
      required:
      - avg_calls_per_lead
      - leads_with_calls
      - leads_without_calls
      - total_leads
    MetaIntegration:
      type: object
      description: Serializer for Meta Integration
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        workspace:
          type: string
          format: uuid
        workspace_name:
          type: string
          readOnly: true
        business_account_id:
          type: string
          description: Meta Business Account ID
          maxLength: 255
        page_id:
          type: string
          description: Facebook/Instagram Page ID
          maxLength: 255
        page_name:
          type: string
          description: Meta Page Name
          maxLength: 500
        page_picture_url:
          type: string
          format: uri
          description: Meta Page Profile Picture URL
          maxLength: 1000
        access_token_expires_at:
          type: string
          format: date-time
          description: When the access token expires
        scopes:
          description: Granted Meta API scopes
        status:
          allOf:
          - $ref: '#/components/schemas/MetaIntegrationStatusEnum'
          description: |-
            Integration status

            * `active` - Active
            * `expired` - Expired
            * `revoked` - Revoked
            * `error` - Error
            * `disconnected` - Disconnected
        lead_forms_count:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - access_token_expires_at
      - business_account_id
      - created_at
      - id
      - lead_forms_count
      - page_id
      - updated_at
      - workspace
      - workspace_name
    MetaIntegrationCreate:
      type: object
      description: Serializer for creating Meta integrations
      properties:
        workspace:
          type: string
          format: uuid
        business_account_id:
          type: string
          description: Meta Business Account ID
          maxLength: 255
        page_id:
          type: string
          description: Facebook/Instagram Page ID
          maxLength: 255
        access_token:
          type: string
          readOnly: true
          description: Meta API access token (encrypted at rest)
        access_token_expires_at:
          type: string
          format: date-time
          description: When the access token expires
        verification_token:
          type: string
          readOnly: true
          description: Webhook verification token for Meta (encrypted at rest)
        scopes:
          description: Granted Meta API scopes
      required:
      - access_token
      - access_token_expires_at
      - business_account_id
      - page_id
      - verification_token
      - workspace
    MetaIntegrationCreateRequest:
      type: object
      description: Serializer for creating Meta integrations
      properties:
        workspace:
          type: string
          format: uuid
        business_account_id:
          type: string
          minLength: 1
          description: Meta Business Account ID
          maxLength: 255
        page_id:
          type: string
          minLength: 1
          description: Facebook/Instagram Page ID
          maxLength: 255
        access_token_expires_at:
          type: string
          format: date-time
          description: When the access token expires
        scopes:
          description: Granted Meta API scopes
      required:
      - access_token_expires_at
      - business_account_id
      - page_id
      - workspace
    MetaIntegrationRequest:
      type: object
      description: Serializer for Meta Integration
      properties:
        workspace:
          type: string
          format: uuid
        business_account_id:
          type: string
          minLength: 1
          description: Meta Business Account ID
          maxLength: 255
        page_id:
          type: string
          minLength: 1
          description: Facebook/Instagram Page ID
          maxLength: 255
        page_name:
          type: string
          description: Meta Page Name
          maxLength: 500
        page_picture_url:
          type: string
          format: uri
          description: Meta Page Profile Picture URL
          maxLength: 1000
        access_token_expires_at:
          type: string
          format: date-time
          description: When the access token expires
        scopes:
          description: Granted Meta API scopes
        status:
          allOf:
          - $ref: '#/components/schemas/MetaIntegrationStatusEnum'
          description: |-
            Integration status

            * `active` - Active
            * `expired` - Expired
            * `revoked` - Revoked
            * `error` - Error
            * `disconnected` - Disconnected
      required:
      - access_token_expires_at
      - business_account_id
      - page_id
      - workspace
    MetaIntegrationStats:
      type: object
      description: Serializer for Meta integration statistics
      properties:
        total_integrations:
          type: integer
          readOnly: true
        active_integrations:
          type: integer
          readOnly: true
        total_lead_forms:
          type: integer
          readOnly: true
        total_leads_received:
          type: integer
          readOnly: true
        leads_this_month:
          type: integer
          readOnly: true
        top_performing_forms:
          type: array
          items: {}
          readOnly: true
      required:
      - active_integrations
      - leads_this_month
      - top_performing_forms
      - total_integrations
      - total_lead_forms
      - total_leads_received
    MetaIntegrationStatusEnum:
      enum:
      - active
      - expired
      - revoked
      - error
      - disconnected
      type: string
      description: |-
        * `active` - Active
        * `expired` - Expired
        * `revoked` - Revoked
        * `error` - Error
        * `disconnected` - Disconnected
    MetaLeadForm:
      type: object
      description: Serializer for Meta Lead Form
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        meta_integration:
          type: string
          format: uuid
        workspace:
          type: string
          format: uuid
          readOnly: true
        meta_form_id:
          type: string
          description: Meta Lead Form ID
          maxLength: 255
        name:
          type: string
          description: Meta Lead Form Name/Title
          maxLength: 500
        meta_lead_id:
          type: string
          nullable: true
          description: Meta Lead ID (for tracking specific leads)
          maxLength: 255
        is_active:
          type: boolean
          description: |-
            Form is active if it has a funnel with an active agent assigned.
            This is computed dynamically based on agent assignment.
          readOnly: true
        integration_status:
          type: string
          readOnly: true
        lead_count:
          type: integer
          readOnly: true
        has_funnel:
          type: boolean
          readOnly: true
        assigned_agent:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - assigned_agent
      - created_at
      - has_funnel
      - id
      - integration_status
      - is_active
      - lead_count
      - meta_form_id
      - meta_integration
      - updated_at
      - workspace
    MetaLeadFormCreate:
      type: object
      description: Serializer for creating Meta lead forms
      properties:
        meta_integration:
          type: string
          format: uuid
        meta_form_id:
          type: string
          description: Meta Lead Form ID
          maxLength: 255
      required:
      - meta_form_id
      - meta_integration
    MetaLeadFormCreateRequest:
      type: object
      description: Serializer for creating Meta lead forms
      properties:
        meta_integration:
          type: string
          format: uuid
        meta_form_id:
          type: string
          minLength: 1
          description: Meta Lead Form ID
          maxLength: 255
      required:
      - meta_form_id
      - meta_integration
    MetaLeadFormRequest:
      type: object
      description: Serializer for Meta Lead Form
      properties:
        meta_integration:
          type: string
          format: uuid
        meta_form_id:
          type: string
          minLength: 1
          description: Meta Lead Form ID
          maxLength: 255
        name:
          type: string
          description: Meta Lead Form Name/Title
          maxLength: 500
        meta_lead_id:
          type: string
          nullable: true
          description: Meta Lead ID (for tracking specific leads)
          maxLength: 255
      required:
      - meta_form_id
      - meta_integration
    MetaLeadWebhookRequest:
      type: object
      description: Serializer for Meta lead webhook data
      properties:
        object:
          type: string
          minLength: 1
        entry:
          type: array
          items:
            type: object
            additionalProperties: {}
          description: Array of webhook entries from Meta
      required:
      - entry
      - object
    NullEnum:
      enum:
      - null
    OutlookAuthUrlResponse:
      type: object
      description: Response serializer for Outlook OAuth URL generation
      properties:
        authorization_url:
          type: string
          format: uri
          description: URL to redirect user for Microsoft OAuth
        state:
          type: string
          description: State parameter for CSRF protection
        message:
          type: string
          description: Instructions for frontend
      required:
      - authorization_url
      - message
      - state
    OutlookCalendar:
      type: object
      description: Serializer for OutlookCalendar model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        calendar:
          type: string
          format: uuid
        calendar_name:
          type: string
          readOnly: true
        workspace_id:
          type: string
          format: uuid
          readOnly: true
        workspace_name:
          type: string
          readOnly: true
        user:
          type: string
          format: uuid
          readOnly: true
          description: User who connected this calendar
        primary_email:
          type: string
          format: email
          description: Primary UPN/email of the Microsoft account
          maxLength: 254
        tenant_id:
          type: string
          readOnly: true
          description: Azure AD Tenant ID (tid)
        ms_user_id:
          type: string
          readOnly: true
          description: Microsoft user object ID (oid)
        display_name:
          type: string
          maxLength: 255
        timezone_windows:
          type: string
          description: Windows time zone id (e.g., 'W. Europe Standard Time')
          maxLength: 100
        external_id:
          type: string
          description: Microsoft Calendar ID
          maxLength: 255
        can_edit:
          type: boolean
          description: Whether current user can edit this calendar
        token_expires_at:
          type: string
          format: date-time
          readOnly: true
          description: When access token expires
        is_token_expired:
          type: string
          readOnly: true
        scopes_granted:
          description: Granted OAuth scopes
        last_sync:
          type: string
          format: date-time
          nullable: true
        sync_errors: {}
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - calendar
      - calendar_name
      - created_at
      - external_id
      - id
      - is_token_expired
      - ms_user_id
      - primary_email
      - tenant_id
      - token_expires_at
      - updated_at
      - user
      - workspace_id
      - workspace_name
    OutlookCalendarRequest:
      type: object
      description: Serializer for OutlookCalendar model
      properties:
        calendar:
          type: string
          format: uuid
        primary_email:
          type: string
          format: email
          minLength: 1
          description: Primary UPN/email of the Microsoft account
          maxLength: 254
        display_name:
          type: string
          maxLength: 255
        timezone_windows:
          type: string
          description: Windows time zone id (e.g., 'W. Europe Standard Time')
          maxLength: 100
        external_id:
          type: string
          minLength: 1
          description: Microsoft Calendar ID
          maxLength: 255
        can_edit:
          type: boolean
          description: Whether current user can edit this calendar
        scopes_granted:
          description: Granted OAuth scopes
        last_sync:
          type: string
          format: date-time
          nullable: true
        sync_errors: {}
      required:
      - calendar
      - external_id
      - primary_email
    OutlookOAuthCallback:
      type: object
      description: Response serializer for Outlook OAuth callback
      properties:
        success:
          type: boolean
        message:
          type: string
        calendar:
          $ref: '#/components/schemas/OutlookCalendar'
        calendars:
          type: array
          items:
            $ref: '#/components/schemas/OutlookCalendar'
      required:
      - message
      - success
    OutlookSubAccount:
      type: object
      description: Serializer for OutlookSubAccount model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        outlook_calendar:
          type: string
          format: uuid
          description: The main Outlook account that owns the OAuth tokens
        act_as_upn:
          type: string
          format: email
          description: Target mailbox (UPN/email)
          maxLength: 254
        mailbox_object_id:
          type: string
          description: AAD user object id if known
          maxLength: 128
        relationship:
          $ref: '#/components/schemas/OutlookSubAccountRelationshipEnum'
        active:
          type: boolean
        main_account_email:
          type: string
          readOnly: true
        calendar_id:
          type: string
          format: uuid
          readOnly: true
        calendar_name:
          type: string
          readOnly: true
        workspace_id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - act_as_upn
      - calendar_id
      - calendar_name
      - created_at
      - id
      - main_account_email
      - outlook_calendar
      - updated_at
      - workspace_id
    OutlookSubAccountRelationshipEnum:
      enum:
      - self
      - shared
      - delegate
      - app_only
      - resource
      type: string
      description: |-
        * `self` - Self / same user
        * `shared` - Shared mailbox/calendar
        * `delegate` - Delegated access
        * `app_only` - Application-permission impersonation
        * `resource` - Room/equipment
    OutlookSubAccountRequest:
      type: object
      description: Serializer for OutlookSubAccount model
      properties:
        outlook_calendar:
          type: string
          format: uuid
          description: The main Outlook account that owns the OAuth tokens
        act_as_upn:
          type: string
          format: email
          minLength: 1
          description: Target mailbox (UPN/email)
          maxLength: 254
        mailbox_object_id:
          type: string
          description: AAD user object id if known
          maxLength: 128
        relationship:
          $ref: '#/components/schemas/OutlookSubAccountRelationshipEnum'
        active:
          type: boolean
      required:
      - act_as_upn
      - outlook_calendar
    PaginatedAgentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Agent'
    PaginatedBlacklistList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Blacklist'
    PaginatedCalendarList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Calendar'
    PaginatedCallLogList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CallLog'
    PaginatedCallTaskList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CallTask'
    PaginatedFeatureList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
    PaginatedGoogleCalendarList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCalendar'
    PaginatedGoogleSubAccountList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/GoogleSubAccount'
    PaginatedLeadFunnelList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LeadFunnel'
    PaginatedLeadList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Lead'
    PaginatedLeadProcessingStatsList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LeadProcessingStats'
    PaginatedMetaIntegrationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MetaIntegration'
    PaginatedMetaLeadFormList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MetaLeadForm'
    PaginatedOutlookCalendarList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/OutlookCalendar'
    PaginatedOutlookSubAccountList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/OutlookSubAccount'
    PaginatedPhoneNumberList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
    PaginatedPlanFeatureList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PlanFeature'
    PaginatedPlanList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Plan'
    PaginatedUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PaginatedVoiceList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Voice'
    PaginatedWebhookLeadSourceList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/WebhookLeadSource'
    PaginatedWorkspaceInvitationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceInvitation'
    PaginatedWorkspaceList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Workspace'
    PaginatedWorkspaceUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceUser'
    PasswordResetConfirmRequest:
      type: object
      description: Serializer for password reset confirmation
      properties:
        token:
          type: string
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
        password_confirm:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - password
      - password_confirm
      - token
    PasswordResetRequestRequest:
      type: object
      description: Serializer for password reset request
      properties:
        email:
          type: string
          format: email
          minLength: 1
      required:
      - email
    PatchedAgentUpdateRequest:
      type: object
      description: Serializer for updating agents
      properties:
        name:
          type: string
          minLength: 1
          description: Agent name for display
          maxLength: 255
        status:
          allOf:
          - $ref: '#/components/schemas/StatusB9bEnum'
          description: |-
            Agent status

            * `active` - Active
            * `paused` - Paused
        greeting_inbound:
          type: string
          description: Greeting for inbound calls
        greeting_outbound:
          type: string
          description: Greeting for outbound calls
        voice:
          type: string
          format: uuid
          nullable: true
          description: Voice configuration for this agent
        lead_funnel:
          type: string
          format: uuid
          nullable: true
          description: Lead funnel this agent handles
        language:
          type: string
          minLength: 1
          description: Agent language
          maxLength: 50
        retry_interval:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Retry interval in minutes
        max_retries:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Maximum number of retry attempts for calls
        workdays:
          description: List of working days, e.g., ['monday', 'tuesday', 'wednesday']
        call_from:
          type: string
          format: time
          description: Start time for calls
        call_to:
          type: string
          format: time
          description: End time for calls
        character:
          type: string
          description: Agent character/personality description
        prompt:
          type: string
          description: Agent prompt/instructions for AI behavior
    PatchedBlacklistRequest:
      type: object
      description: Serializer for Blacklist model
      properties:
        user:
          type: string
          format: uuid
        reason:
          type: string
          minLength: 1
          description: Reason for blacklisting
        status:
          allOf:
          - $ref: '#/components/schemas/Status61bEnum'
          description: |-
            Blacklist status

            * `temporary` - Temporary
            * `forever` - Forever
            * `suspended` - Suspended
    PatchedCalendarRequest:
      type: object
      description: Serializer for Calendar model with provider details
      properties:
        workspace:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          default: ''
          description: Display name for the calendar
          maxLength: 255
        provider:
          allOf:
          - $ref: '#/components/schemas/ProviderEnum'
          default: google
        active:
          type: boolean
    PatchedCallLogRequest:
      type: object
      description: Serializer for CallLog model
      properties:
        lead:
          type: string
          format: uuid
          nullable: true
        agent:
          type: string
          format: uuid
          description: Agent who made/received the call
        from_number:
          type: string
          minLength: 1
          description: Caller's phone number
          maxLength: 20
        to_number:
          type: string
          minLength: 1
          description: Recipient's phone number
          maxLength: 20
        duration:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Call duration in seconds
        disconnection_reason:
          nullable: true
          description: |-
            Reason for call disconnection

            * `user_hangup` - User Hangup
            * `agent_hangup` - Agent Hangup
            * `call_transfer` - Call Transfer
            * `voicemail_reached` - Voicemail Reached
            * `inactivity` - Inactivity Timeout
            * `max_duration_reached` - Maximum Duration Reached
            * `dial_busy` - Dial Busy
            * `dial_failed` - Dial Failed
            * `dial_no_answer` - No Answer
            * `invalid_destination` - Invalid Destination
            * `telephony_provider_permission_denied` - Telephony Provider Permission Denied
            * `telephony_provider_unavailable` - Telephony Provider Unavailable
            * `sip_routing_error` - SIP Routing Error
            * `marked_as_spam` - Marked as Spam
            * `user_declined` - User Declined
            * `concurrency_limit_reached` - Concurrency Limit Reached
            * `no_valid_payment` - No Valid Payment
            * `scam_detected` - Scam Detected
            * `error_llm_websocket_open` - LLM Websocket Open Error
            * `error_llm_websocket_lost_connection` - LLM Websocket Lost Connection
            * `error_llm_websocket_runtime` - LLM Websocket Runtime Error
            * `error_llm_websocket_corrupt_payload` - LLM Websocket Corrupt Payload
            * `error_no_audio_received` - No Audio Received
            * `error_asr` - ASR Error
            * `error_hotcalls` - HotCalls Error
            * `error_unknown` - Unknown Error
            * `error_user_not_joined` - User Not Joined
            * `registered_call_timeout` - Registered Call Timeout
            * `preflight_call_log_failed` - Preflight Call Log Failed
          oneOf:
          - $ref: '#/components/schemas/DisconnectionReasonEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        direction:
          allOf:
          - $ref: '#/components/schemas/DirectionEnum'
          description: |-
            Call direction

            * `inbound` - Inbound
            * `outbound` - Outbound
        appointment_datetime:
          type: string
          format: date-time
          nullable: true
          description: Scheduled appointment datetime when status is 'appointment_scheduled'
    PatchedCallTaskRequest:
      type: object
      description: Serializer for CallTask model
      properties:
        agent:
          type: string
          format: uuid
          description: Agent assigned to handle this call task
        workspace:
          type: string
          format: uuid
          description: Workspace associated with this call task
        target_ref:
          type: string
          writeOnly: true
          minLength: 1
          description: Canonical target (lead:<uuid> or test_user:<uuid>)
    PatchedFeatureRequest:
      type: object
      description: Serializer f√ºr Features
      properties:
        feature_name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          description: Feature description
    PatchedGoogleSubAccountRequest:
      type: object
      description: Serializer for GoogleSubAccount model
      properties:
        google_calendar:
          type: string
          format: uuid
          description: The main Google account that owns the OAuth tokens
        act_as_email:
          type: string
          format: email
          minLength: 1
          description: Target user/resource email you operate on behalf of
          maxLength: 254
        act_as_user_id:
          type: string
          description: Google user id if known
          maxLength: 128
        relationship:
          $ref: '#/components/schemas/GoogleSubAccountRelationshipEnum'
        active:
          type: boolean
    PatchedLeadCreateRequest:
      type: object
      description: Serializer for creating leads
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        surname:
          type: string
          nullable: true
          description: Lead surname
          maxLength: 255
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        phone:
          type: string
          minLength: 1
          description: Lead's phone number
          maxLength: 50
        meta_data:
          description: Custom JSON data for the lead
    PatchedLeadFunnelUpdateRequest:
      type: object
      description: Serializer for updating lead funnels
      properties:
        name:
          type: string
          minLength: 1
          description: Display name for this lead funnel
          maxLength: 255
        is_active:
          type: boolean
          description: Whether this funnel should process incoming leads
    PatchedLeadMetaDataUpdateRequest:
      type: object
      description: Serializer for updating lead metadata
      properties:
        meta_data:
          description: Custom JSON metadata for the lead
    PatchedMetaIntegrationRequest:
      type: object
      description: Serializer for Meta Integration
      properties:
        workspace:
          type: string
          format: uuid
        business_account_id:
          type: string
          minLength: 1
          description: Meta Business Account ID
          maxLength: 255
        page_id:
          type: string
          minLength: 1
          description: Facebook/Instagram Page ID
          maxLength: 255
        page_name:
          type: string
          description: Meta Page Name
          maxLength: 500
        page_picture_url:
          type: string
          format: uri
          description: Meta Page Profile Picture URL
          maxLength: 1000
        access_token_expires_at:
          type: string
          format: date-time
          description: When the access token expires
        scopes:
          description: Granted Meta API scopes
        status:
          allOf:
          - $ref: '#/components/schemas/MetaIntegrationStatusEnum'
          description: |-
            Integration status

            * `active` - Active
            * `expired` - Expired
            * `revoked` - Revoked
            * `error` - Error
            * `disconnected` - Disconnected
    PatchedMetaLeadFormRequest:
      type: object
      description: Serializer for Meta Lead Form
      properties:
        meta_integration:
          type: string
          format: uuid
        meta_form_id:
          type: string
          minLength: 1
          description: Meta Lead Form ID
          maxLength: 255
        name:
          type: string
          description: Meta Lead Form Name/Title
          maxLength: 500
        meta_lead_id:
          type: string
          nullable: true
          description: Meta Lead ID (for tracking specific leads)
          maxLength: 255
    PatchedOutlookCalendarRequest:
      type: object
      description: Serializer for OutlookCalendar model
      properties:
        calendar:
          type: string
          format: uuid
        primary_email:
          type: string
          format: email
          minLength: 1
          description: Primary UPN/email of the Microsoft account
          maxLength: 254
        display_name:
          type: string
          maxLength: 255
        timezone_windows:
          type: string
          description: Windows time zone id (e.g., 'W. Europe Standard Time')
          maxLength: 100
        external_id:
          type: string
          minLength: 1
          description: Microsoft Calendar ID
          maxLength: 255
        can_edit:
          type: boolean
          description: Whether current user can edit this calendar
        scopes_granted:
          description: Granted OAuth scopes
        last_sync:
          type: string
          format: date-time
          nullable: true
        sync_errors: {}
    PatchedOutlookSubAccountRequest:
      type: object
      description: Serializer for OutlookSubAccount model
      properties:
        outlook_calendar:
          type: string
          format: uuid
          description: The main Outlook account that owns the OAuth tokens
        act_as_upn:
          type: string
          format: email
          minLength: 1
          description: Target mailbox (UPN/email)
          maxLength: 254
        mailbox_object_id:
          type: string
          description: AAD user object id if known
          maxLength: 128
        relationship:
          $ref: '#/components/schemas/OutlookSubAccountRelationshipEnum'
        active:
          type: boolean
    PatchedPhoneNumberRequest:
      type: object
      description: Serializer for PhoneNumber model
      properties:
        phonenumber:
          type: string
          minLength: 1
          description: Phone number in E.164 format
          maxLength: 17
        is_active:
          type: boolean
          description: Whether this phone number is active
    PatchedPlanFeatureRequest:
      type: object
      description: Serializer f√ºr Plan-Feature Zuordnungen
      properties:
        limit:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,3})?$
          description: Feature limit for this plan
    PatchedPlanRequest:
      type: object
      description: Serializer f√ºr Subscription Pl√§ne
      properties:
        plan_name:
          type: string
          minLength: 1
          maxLength: 100
        price_monthly:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          description: Monthly price in EUR
        stripe_product_id:
          type: string
          nullable: true
          description: Stripe Product ID (prod_xxx)
          maxLength: 255
        stripe_price_id_monthly:
          type: string
          nullable: true
          description: Stripe Price ID for monthly billing (price_xxx)
          maxLength: 255
        is_active:
          type: boolean
          description: Is this plan available for new subscriptions?
    PatchedUserStatusChangeRequest:
      type: object
      description: Serializer for changing user status
      properties:
        status:
          $ref: '#/components/schemas/StatusCe8Enum'
    PatchedUserUpdateRequest:
      type: object
      description: Serializer for updating users
      properties:
        first_name:
          type: string
          minLength: 1
          description: User's first name
          maxLength: 150
        last_name:
          type: string
          minLength: 1
          description: User's last name
          maxLength: 150
        phone:
          type: string
          minLength: 1
          description: Phone number in international format
          maxLength: 50
        stripe_customer_id:
          type: string
          nullable: true
          description: Stripe customer ID for billing
          maxLength: 255
        status:
          allOf:
          - $ref: '#/components/schemas/StatusCe8Enum'
          description: |-
            User account status

            * `active` - Active
            * `suspended` - Suspended
            * `forever_disabled` - Forever Disabled
        social_id:
          type: string
          nullable: true
          description: Social media account ID
          maxLength: 255
        social_provider:
          nullable: true
          description: |-
            Social media provider

            * `google` - Google
            * `apple` - Apple
            * `facebook` - Facebook
          oneOf:
          - $ref: '#/components/schemas/SocialProviderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
    PatchedVoiceUpdateRequest:
      type: object
      description: Serializer for updating voices
      properties:
        voice_external_id:
          type: string
          minLength: 1
          description: External voice ID from provider (e.g., ElevenLabs voice ID)
          maxLength: 255
        provider:
          type: string
          minLength: 1
          description: Voice provider (e.g., 'elevenlabs', 'openai', 'google')
          maxLength: 50
        name:
          type: string
          minLength: 1
          description: Voice display name
          maxLength: 100
        gender:
          allOf:
          - $ref: '#/components/schemas/GenderEnum'
          description: |-
            Voice gender

            * `male` - Male
            * `female` - Female
            * `neutral` - Neutral
        tone:
          type: string
          minLength: 1
          description: Voice tone/style
          maxLength: 50
        recommend:
          type: boolean
          description: Recommended voice
        voice_sample:
          type: string
          format: binary
          nullable: true
          description: Voice sample file (.wav or .mp3 format)
        voice_picture:
          type: string
          format: binary
          nullable: true
          description: Voice picture file (.png or .jpg format)
    PatchedWebhookLeadSourceRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          description: Display name for this webhook source
          maxLength: 255
    PatchedWorkspaceCreateRequest:
      type: object
      description: Serializer for creating workspaces
      properties:
        workspace_name:
          type: string
          minLength: 1
          maxLength: 255
    PatchedWorkspaceSmtpSettingsRequest:
      type: object
      description: Serializer for per-workspace SMTP configuration (password write-only).
      properties:
        smtp_enabled:
          type: boolean
        smtp_host:
          type: string
          default: ''
        smtp_port:
          type: integer
          default: 587
        smtp_use_tls:
          type: boolean
          default: true
        smtp_use_ssl:
          type: boolean
          default: false
        smtp_username:
          type: string
          default: ''
        smtp_password:
          type: string
          writeOnly: true
        smtp_from_email:
          type: string
          format: email
          default: ''
    PaymentBehaviorEnum:
      enum:
      - allow_incomplete
      - error_if_incomplete
      - pending_if_incomplete
      - default_incomplete
      type: string
      description: |-
        * `allow_incomplete` - allow_incomplete
        * `error_if_incomplete` - error_if_incomplete
        * `pending_if_incomplete` - pending_if_incomplete
        * `default_incomplete` - default_incomplete
    PhoneNumber:
      type: object
      description: Serializer for PhoneNumber model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        phonenumber:
          type: string
          description: Phone number in E.164 format
          maxLength: 17
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
          description: Whether this phone number is active
      required:
      - created_at
      - id
      - phonenumber
    PhoneNumberRequest:
      type: object
      description: Serializer for PhoneNumber model
      properties:
        phonenumber:
          type: string
          minLength: 1
          description: Phone number in E.164 format
          maxLength: 17
        is_active:
          type: boolean
          description: Whether this phone number is active
      required:
      - phonenumber
    Plan:
      type: object
      description: Serializer f√ºr Subscription Pl√§ne
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        plan_name:
          type: string
          maxLength: 100
        description:
          type: string
          readOnly: true
        price_monthly:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          description: Monthly price in EUR
        formatted_price:
          type: string
          readOnly: true
        stripe_product_id:
          type: string
          nullable: true
          description: Stripe Product ID (prod_xxx)
          maxLength: 255
        stripe_price_id_monthly:
          type: string
          nullable: true
          description: Stripe Price ID for monthly billing (price_xxx)
          maxLength: 255
        is_active:
          type: boolean
          description: Is this plan available for new subscriptions?
        features:
          type: array
          items:
            $ref: '#/components/schemas/PlanFeature'
          readOnly: true
        feature_count:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - description
      - feature_count
      - features
      - formatted_price
      - id
      - plan_name
      - updated_at
    PlanDetail:
      type: object
      description: Detaillierter Serializer f√ºr einzelne Pl√§ne
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        plan_name:
          type: string
          maxLength: 100
        description:
          type: string
          readOnly: true
        price_monthly:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          description: Monthly price in EUR
        formatted_price:
          type: string
          readOnly: true
        stripe_product_id:
          type: string
          nullable: true
          description: Stripe Product ID (prod_xxx)
          maxLength: 255
        stripe_price_id_monthly:
          type: string
          nullable: true
          description: Stripe Price ID for monthly billing (price_xxx)
          maxLength: 255
        is_active:
          type: boolean
          description: Is this plan available for new subscriptions?
        features:
          type: array
          items:
            $ref: '#/components/schemas/PlanFeature'
          readOnly: true
        feature_count:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - description
      - feature_count
      - features
      - formatted_price
      - id
      - plan_name
      - updated_at
    PlanFeature:
      type: object
      description: Serializer f√ºr Plan-Feature Zuordnungen
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        feature:
          allOf:
          - $ref: '#/components/schemas/Feature'
          readOnly: true
        feature_name:
          type: string
          readOnly: true
        feature_description:
          type: string
          readOnly: true
        limit:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,3})?$
          description: Feature limit for this plan
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - feature
      - feature_description
      - feature_name
      - id
      - limit
      - updated_at
    PlanFeatureRequest:
      type: object
      description: Serializer f√ºr Plan-Feature Zuordnungen
      properties:
        limit:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,3})?$
          description: Feature limit for this plan
      required:
      - limit
    PlanRequest:
      type: object
      description: Serializer f√ºr Subscription Pl√§ne
      properties:
        plan_name:
          type: string
          minLength: 1
          maxLength: 100
        price_monthly:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          description: Monthly price in EUR
        stripe_product_id:
          type: string
          nullable: true
          description: Stripe Product ID (prod_xxx)
          maxLength: 255
        stripe_price_id_monthly:
          type: string
          nullable: true
          description: Stripe Price ID for monthly billing (price_xxx)
          maxLength: 255
        is_active:
          type: boolean
          description: Is this plan available for new subscriptions?
      required:
      - plan_name
    PlanSummary:
      type: object
      description: Kompakter Serializer f√ºr Plan-√úbersichten
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        plan_name:
          type: string
          maxLength: 100
        description:
          type: string
          readOnly: true
        formatted_price:
          type: string
          readOnly: true
        key_features:
          type: string
          readOnly: true
        is_active:
          type: boolean
          description: Is this plan available for new subscriptions?
      required:
      - description
      - formatted_price
      - id
      - key_features
      - plan_name
    PresignRequestRequest:
      type: object
      properties:
        download_name:
          type: string
    ProrationBehaviorEnum:
      enum:
      - create_prorations
      - always_invoice
      - none
      type: string
      description: |-
        * `create_prorations` - create_prorations
        * `always_invoice` - always_invoice
        * `none` - none
    ProviderEnum:
      enum:
      - google
      - outlook
      type: string
      description: |-
        * `google` - Google Calendar
        * `outlook` - Outlook Calendar
    ResendVerificationRequest:
      type: object
      description: Serializer for resending verification email
      properties:
        email:
          type: string
          format: email
          minLength: 1
      required:
      - email
    RetrieveStripeCustomerRequest:
      type: object
      description: Serializer for retrieving Stripe customer details
      properties:
        workspace_id:
          type: string
          format: uuid
      required:
      - workspace_id
    SocialProviderEnum:
      enum:
      - google
      - apple
      - facebook
      type: string
      description: |-
        * `google` - Google
        * `apple` - Apple
        * `facebook` - Facebook
    Status61bEnum:
      enum:
      - temporary
      - forever
      - suspended
      type: string
      description: |-
        * `temporary` - Temporary
        * `forever` - Forever
        * `suspended` - Suspended
    StatusB9bEnum:
      enum:
      - active
      - paused
      type: string
      description: |-
        * `active` - Active
        * `paused` - Paused
    StatusCe8Enum:
      enum:
      - active
      - suspended
      - forever_disabled
      type: string
      description: |-
        * `active` - Active
        * `suspended` - Suspended
        * `forever_disabled` - Forever Disabled
    StripeCustomer:
      type: object
      description: Serializer for Stripe customer operations
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        workspace_name:
          type: string
          readOnly: true
        stripe_customer_id:
          type: string
          readOnly: true
          nullable: true
          description: Stripe Customer ID for billing
        has_stripe_customer:
          type: string
          readOnly: true
      required:
      - has_stripe_customer
      - id
      - stripe_customer_id
      - workspace_name
    StripePortalSessionRequest:
      type: object
      description: Serializer for creating Stripe customer portal session
      properties:
        workspace_id:
          type: string
          format: uuid
        return_url:
          type: string
          format: uri
          minLength: 1
      required:
      - workspace_id
    TestCallRequest:
      type: object
      description: Serializer for making test calls with only Agent ID
      properties:
        agent_id:
          type: string
          format: uuid
          description: Agent UUID to make the test call (required)
      required:
      - agent_id
    UnassignAgentRequest:
      type: object
      description: Serializer for unassigning an agent from a funnel
      properties:
        confirm:
          type: boolean
          description: Confirm that you want to unassign the agent
      required:
      - confirm
    User:
      type: object
      description: Serializer for User model with email-based authentication
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
          description: Email address used for login
          maxLength: 254
        first_name:
          type: string
          description: User's first name
          maxLength: 150
        last_name:
          type: string
          description: User's last name
          maxLength: 150
        phone:
          type: string
          description: Phone number in international format
          maxLength: 50
        stripe_customer_id:
          type: string
          nullable: true
          description: Stripe customer ID for billing
          maxLength: 255
        status:
          allOf:
          - $ref: '#/components/schemas/StatusCe8Enum'
          description: |-
            User account status

            * `active` - Active
            * `suspended` - Suspended
            * `forever_disabled` - Forever Disabled
        social_id:
          type: string
          nullable: true
          description: Social media account ID
          maxLength: 255
        social_provider:
          nullable: true
          description: |-
            Social media provider

            * `google` - Google
            * `apple` - Apple
            * `facebook` - Facebook
          oneOf:
          - $ref: '#/components/schemas/SocialProviderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        is_email_verified:
          type: boolean
          readOnly: true
          description: Whether the user's email has been verified
        date_joined:
          type: string
          format: date-time
          readOnly: true
          description: When the user account was created
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: When the user last logged in
        is_active:
          type: boolean
          description: Whether this user account is active
      required:
      - date_joined
      - email
      - first_name
      - id
      - is_email_verified
      - last_login
      - last_name
      - phone
    UserCreateRequest:
      type: object
      description: |-
        Serializer for creating new users via staff/admin endpoints.
        Note: Regular user registration should use auth API instead.
      properties:
        email:
          type: string
          format: email
          minLength: 1
          description: Email address used for login
          maxLength: 254
        first_name:
          type: string
          minLength: 1
          description: User's first name
          maxLength: 150
        last_name:
          type: string
          minLength: 1
          description: User's last name
          maxLength: 150
        phone:
          type: string
          minLength: 1
          description: Phone number in international format
          maxLength: 50
        password:
          type: string
          writeOnly: true
          minLength: 8
        social_id:
          type: string
          nullable: true
          description: Social media account ID
          maxLength: 255
        social_provider:
          nullable: true
          description: |-
            Social media provider

            * `google` - Google
            * `apple` - Apple
            * `facebook` - Facebook
          oneOf:
          - $ref: '#/components/schemas/SocialProviderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
      required:
      - email
      - first_name
      - last_name
      - password
      - phone
    UserProfile:
      type: object
      description: Serializer for user profile display
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
          description: Email address used for login
        first_name:
          type: string
          description: User's first name
          maxLength: 150
        last_name:
          type: string
          description: User's last name
          maxLength: 150
        phone:
          type: string
          description: Phone number in international format
          maxLength: 50
        is_email_verified:
          type: boolean
          readOnly: true
          description: Whether the user's email has been verified
        date_joined:
          type: string
          format: date-time
          readOnly: true
          description: When the user account was created
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: When the user last logged in
        status:
          allOf:
          - $ref: '#/components/schemas/StatusCe8Enum'
          readOnly: true
          description: |-
            User account status

            * `active` - Active
            * `suspended` - Suspended
            * `forever_disabled` - Forever Disabled
        is_active:
          type: boolean
          readOnly: true
          description: Whether this user account is active
      required:
      - date_joined
      - email
      - first_name
      - id
      - is_active
      - is_email_verified
      - last_login
      - last_name
      - phone
      - status
    UserRegistrationRequest:
      type: object
      description: Serializer for user registration with mandatory email verification
      properties:
        email:
          type: string
          format: email
          minLength: 1
          description: Email address used for login
          maxLength: 254
        first_name:
          type: string
          minLength: 1
          description: User's first name
          maxLength: 150
        last_name:
          type: string
          minLength: 1
          description: User's last name
          maxLength: 150
        phone:
          type: string
          minLength: 1
          description: Phone number in international format
          maxLength: 50
        password:
          type: string
          writeOnly: true
          minLength: 1
        password_confirm:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - email
      - first_name
      - last_name
      - password
      - password_confirm
      - phone
    UserUpdateRequest:
      type: object
      description: Serializer for updating users
      properties:
        first_name:
          type: string
          minLength: 1
          description: User's first name
          maxLength: 150
        last_name:
          type: string
          minLength: 1
          description: User's last name
          maxLength: 150
        phone:
          type: string
          minLength: 1
          description: Phone number in international format
          maxLength: 50
        stripe_customer_id:
          type: string
          nullable: true
          description: Stripe customer ID for billing
          maxLength: 255
        status:
          allOf:
          - $ref: '#/components/schemas/StatusCe8Enum'
          description: |-
            User account status

            * `active` - Active
            * `suspended` - Suspended
            * `forever_disabled` - Forever Disabled
        social_id:
          type: string
          nullable: true
          description: Social media account ID
          maxLength: 255
        social_provider:
          nullable: true
          description: |-
            Social media provider

            * `google` - Google
            * `apple` - Apple
            * `facebook` - Facebook
          oneOf:
          - $ref: '#/components/schemas/SocialProviderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
      required:
      - first_name
      - last_name
      - phone
    Voice:
      type: object
      description: Serializer for Voice model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        voice_external_id:
          type: string
          description: External voice ID from provider (e.g., ElevenLabs voice ID)
          maxLength: 255
        provider:
          type: string
          description: Voice provider (e.g., 'elevenlabs', 'openai', 'google')
          maxLength: 50
        name:
          type: string
          description: Voice display name
          maxLength: 100
        gender:
          allOf:
          - $ref: '#/components/schemas/GenderEnum'
          description: |-
            Voice gender

            * `male` - Male
            * `female` - Female
            * `neutral` - Neutral
        tone:
          type: string
          description: Voice tone/style
          maxLength: 50
        recommend:
          type: boolean
          description: Recommended voice
        voice_sample:
          type: string
          format: uri
          nullable: true
          description: Voice sample file (.wav or .mp3 format)
        voice_picture:
          type: string
          format: uri
          nullable: true
          description: Voice picture file (.png or .jpg format)
        agent_count:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - agent_count
      - created_at
      - gender
      - id
      - name
      - provider
      - tone
      - updated_at
      - voice_external_id
    VoiceCreateRequest:
      type: object
      description: Serializer for creating voices
      properties:
        voice_external_id:
          type: string
          minLength: 1
          description: External voice ID from provider (e.g., ElevenLabs voice ID)
          maxLength: 255
        provider:
          type: string
          minLength: 1
          description: Voice provider (e.g., 'elevenlabs', 'openai', 'google')
          maxLength: 50
        name:
          type: string
          minLength: 1
          description: Voice display name
          maxLength: 100
        gender:
          allOf:
          - $ref: '#/components/schemas/GenderEnum'
          description: |-
            Voice gender

            * `male` - Male
            * `female` - Female
            * `neutral` - Neutral
        tone:
          type: string
          minLength: 1
          description: Voice tone/style
          maxLength: 50
        recommend:
          type: boolean
          description: Recommended voice
        voice_sample:
          type: string
          format: binary
          nullable: true
          description: Voice sample file (.wav or .mp3 format)
        voice_picture:
          type: string
          format: binary
          nullable: true
          description: Voice picture file (.png or .jpg format)
      required:
      - gender
      - name
      - provider
      - tone
      - voice_external_id
    VoiceUpdateRequest:
      type: object
      description: Serializer for updating voices
      properties:
        voice_external_id:
          type: string
          minLength: 1
          description: External voice ID from provider (e.g., ElevenLabs voice ID)
          maxLength: 255
        provider:
          type: string
          minLength: 1
          description: Voice provider (e.g., 'elevenlabs', 'openai', 'google')
          maxLength: 50
        name:
          type: string
          minLength: 1
          description: Voice display name
          maxLength: 100
        gender:
          allOf:
          - $ref: '#/components/schemas/GenderEnum'
          description: |-
            Voice gender

            * `male` - Male
            * `female` - Female
            * `neutral` - Neutral
        tone:
          type: string
          minLength: 1
          description: Voice tone/style
          maxLength: 50
        recommend:
          type: boolean
          description: Recommended voice
        voice_sample:
          type: string
          format: binary
          nullable: true
          description: Voice sample file (.wav or .mp3 format)
        voice_picture:
          type: string
          format: binary
          nullable: true
          description: Voice picture file (.png or .jpg format)
      required:
      - gender
      - name
      - provider
      - tone
      - voice_external_id
    WebhookLeadPayloadRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        email:
          type: string
          format: email
          minLength: 1
        phone:
          type: string
          minLength: 1
          maxLength: 50
        surname:
          type: string
          maxLength: 255
        variables:
          type: object
          additionalProperties: {}
        external_id:
          type: string
      required:
      - email
      - name
      - phone
    WebhookLeadSource:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: Display name for this webhook source
          maxLength: 255
        url:
          type: string
          readOnly: true
        lead_funnel:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        required_headers:
          type: string
          readOnly: true
      required:
      - created_at
      - id
      - lead_funnel
      - name
      - required_headers
      - updated_at
      - url
    WebhookLeadSourceCreate:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
      required:
      - name
    WebhookLeadSourceCreateRequest:
      type: object
      properties:
        workspace:
          type: string
          format: uuid
          writeOnly: true
        name:
          type: string
          minLength: 1
          maxLength: 255
      required:
      - name
      - workspace
    WebhookLeadSourceRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          description: Display name for this webhook source
          maxLength: 255
      required:
      - name
    Workspace:
      type: object
      description: Serializer for Workspace model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        workspace_name:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        users:
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceUser'
          readOnly: true
        user_count:
          type: integer
          readOnly: true
        is_subscription_active:
          type: boolean
          readOnly: true
        admin_user_id:
          type: string
          format: uuid
          nullable: true
          readOnly: true
        creator_id:
          type: string
          format: uuid
          nullable: true
          readOnly: true
      required:
      - admin_user_id
      - created_at
      - creator_id
      - id
      - is_subscription_active
      - updated_at
      - user_count
      - users
      - workspace_name
    WorkspaceCreateRequest:
      type: object
      description: Serializer for creating workspaces
      properties:
        workspace_name:
          type: string
          minLength: 1
          maxLength: 255
      required:
      - workspace_name
    WorkspaceInvitation:
      type: object
      description: Serializer for WorkspaceInvitation model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
          description: Email address of the person being invited
          maxLength: 254
        status:
          allOf:
          - $ref: '#/components/schemas/WorkspaceInvitationStatusEnum'
          readOnly: true
          description: |-
            Current status of the invitation

            * `pending` - Pending
            * `accepted` - Accepted
            * `expired` - Expired
            * `cancelled` - Cancelled
        created_at:
          type: string
          format: date-time
          readOnly: true
        expires_at:
          type: string
          format: date-time
          readOnly: true
          description: When this invitation expires (7 days from creation)
        accepted_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: When the invitation was accepted
        workspace_name:
          type: string
          readOnly: true
        invited_by_name:
          type: string
          readOnly: true
        invited_by_email:
          type: string
          readOnly: true
        is_valid:
          type: boolean
          readOnly: true
      required:
      - accepted_at
      - created_at
      - email
      - expires_at
      - id
      - invited_by_email
      - invited_by_name
      - is_valid
      - status
      - workspace_name
    WorkspaceInvitationStatusEnum:
      enum:
      - pending
      - accepted
      - expired
      - cancelled
      type: string
      description: |-
        * `pending` - Pending
        * `accepted` - Accepted
        * `expired` - Expired
        * `cancelled` - Cancelled
    WorkspaceInviteBulkRequest:
      type: object
      description: Serializer for bulk inviting users to workspace
      properties:
        emails:
          type: array
          items:
            type: string
            format: email
            minLength: 1
          description: List of email addresses to invite
          maxItems: 50
          minItems: 1
      required:
      - emails
    WorkspaceInviteUserRequest:
      type: object
      description: Serializer for inviting users to workspace
      properties:
        email:
          type: string
          format: email
          minLength: 1
          description: Email address of the user to invite
      required:
      - email
    WorkspaceSmtpSettings:
      type: object
      description: Serializer for per-workspace SMTP configuration (password write-only).
      properties:
        smtp_enabled:
          type: boolean
        smtp_host:
          type: string
          default: ''
        smtp_port:
          type: integer
          default: 587
        smtp_use_tls:
          type: boolean
          default: true
        smtp_use_ssl:
          type: boolean
          default: false
        smtp_username:
          type: string
          default: ''
        smtp_from_email:
          type: string
          format: email
          default: ''
      required:
      - smtp_enabled
    WorkspaceSmtpSettingsRequest:
      type: object
      description: Serializer for per-workspace SMTP configuration (password write-only).
      properties:
        smtp_enabled:
          type: boolean
        smtp_host:
          type: string
          default: ''
        smtp_port:
          type: integer
          default: 587
        smtp_use_tls:
          type: boolean
          default: true
        smtp_use_ssl:
          type: boolean
          default: false
        smtp_username:
          type: string
          default: ''
        smtp_password:
          type: string
          writeOnly: true
        smtp_from_email:
          type: string
          format: email
          default: ''
      required:
      - smtp_enabled
    WorkspaceSmtpTestRequest:
      type: object
      properties:
        to_email:
          type: string
          format: email
          minLength: 1
      required:
      - to_email
    WorkspaceStats:
      type: object
      description: Serializer for workspace statistics
      properties:
        workspace_id:
          type: string
          format: uuid
          readOnly: true
        workspace_name:
          type: string
          readOnly: true
        user_count:
          type: integer
          readOnly: true
        agent_count:
          type: integer
          readOnly: true
        calendar_count:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - agent_count
      - calendar_count
      - created_at
      - updated_at
      - user_count
      - workspace_id
      - workspace_name
    WorkspaceUser:
      type: object
      description: Serializer for User model in workspace context
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
          description: Email address used for login
        first_name:
          type: string
          readOnly: true
          description: User's first name
        last_name:
          type: string
          readOnly: true
          description: User's last name
        status:
          allOf:
          - $ref: '#/components/schemas/StatusCe8Enum'
          readOnly: true
          description: |-
            User account status

            * `active` - Active
            * `suspended` - Suspended
            * `forever_disabled` - Forever Disabled
      required:
      - email
      - first_name
      - id
      - last_name
      - status
    WorkspaceUserAssignmentRequest:
      type: object
      description: Serializer for adding/removing users from workspace
      properties:
        user_ids:
          type: array
          items:
            type: string
            format: uuid
          description: List of user IDs to add/remove
      required:
      - user_ids
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
tags:
- name: Authentication
  description: üîê Token-based authentication with mandatory email verification
- name: User Management
  description: üë§ User accounts and blacklist management - Requires token auth
- name: Workspace Management
  description: üè¢ Workspace and user association management
- name: Agent Management
  description: ü§ñ AI agents and phone number management
- name: Lead Management
  description: üìû Lead management and bulk operations
