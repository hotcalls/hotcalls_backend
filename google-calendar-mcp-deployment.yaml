apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${PROJECT_PREFIX}-google-calendar-mcp
  namespace: ${PROJECT_PREFIX}-${ENVIRONMENT}
  labels:
    app.kubernetes.io/name: ${PROJECT_PREFIX}
    app.kubernetes.io/component: google-calendar-mcp
    environment: ${ENVIRONMENT}
spec:
  replicas: ${GOOGLE_CALENDAR_MCP_REPLICAS}
  selector:
    matchLabels:
      app.kubernetes.io/name: ${PROJECT_PREFIX}
      app.kubernetes.io/component: google-calendar-mcp
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ${PROJECT_PREFIX}
        app.kubernetes.io/component: google-calendar-mcp
        environment: ${ENVIRONMENT}
    spec:
      serviceAccountName: ${PROJECT_PREFIX}-sa
      imagePullSecrets:
      - name: acr-secret
      containers:
      - name: google-calendar-mcp
        image: ${ACR_LOGIN_SERVER}/${PROJECT_NAME}-google-calendar-mcp:${IMAGE_TAG}
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        envFrom:
        - configMapRef:
            name: ${PROJECT_PREFIX}-google-calendar-mcp-config
        - secretRef:
            name: ${PROJECT_PREFIX}-google-calendar-mcp-secrets
        env:
        # Additional environment variables for clarity
        - name: AGENT_NAME
          value: "${MCP_AGENT_NAME}"
        resources:
          requests:
            memory: ${GOOGLE_CALENDAR_MCP_MEMORY_REQUEST}
            cpu: ${GOOGLE_CALENDAR_MCP_CPU_REQUEST}
          limits:
            memory: ${GOOGLE_CALENDAR_MCP_MEMORY_LIMIT}
            cpu: ${GOOGLE_CALENDAR_MCP_CPU_LIMIT}
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 15
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 12
      restartPolicy: Always
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1